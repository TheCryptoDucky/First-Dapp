{"ast":null,"code":"import _typeof from '@babel/runtime/helpers/typeof';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { generatePrivate, getPublic, decrypt } from '@toruslabs/eccrypto';\nimport { post, generateJsonRPCObject, get, setAPIKey, setEmbedHost } from '@toruslabs/http-helpers';\nimport BN from 'bn.js';\nimport { ec } from 'elliptic';\nimport JsonStringify from 'json-stable-stringify';\nimport { toChecksumAddress } from 'web3-utils';\nimport loglevel from 'loglevel';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport createKeccakHash from 'keccak';\nvar log = loglevel.getLogger(\"torus.js\");\nlog.disableAll();\n\nfunction _createSuper$1(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$1() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar SomeError = /*#__PURE__*/function (_Error) {\n  _inherits(SomeError, _Error);\n\n  var _super = _createSuper$1(SomeError);\n\n  function SomeError(_ref) {\n    var _this;\n\n    var errors = _ref.errors,\n        responses = _ref.responses,\n        predicate = _ref.predicate;\n\n    _classCallCheck(this, SomeError);\n\n    _this = _super.call(this, \"Unable to resolve enough promises.\");\n\n    _defineProperty(_assertThisInitialized(_this), \"errors\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"responses\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"predicate\", void 0);\n\n    _this.errors = errors;\n    _this.responses = responses;\n    _this.predicate = predicate;\n    return _this;\n  }\n\n  return _createClass(SomeError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar Some = function Some(promises, predicate) {\n  return new Promise(function (resolve, reject) {\n    var finishedCount = 0;\n    var sharedState = {\n      resolved: false\n    };\n    var errorArr = new Array(promises.length).fill(undefined);\n    var resultArr = new Array(promises.length).fill(undefined);\n    var predicateError;\n    return promises.forEach(function (x, index) {\n      return x.then(function (resp) {\n        resultArr[index] = resp;\n        return undefined;\n      }).catch(function (error) {\n        errorArr[index] = error;\n      }) // eslint-disable-next-line promise/no-return-in-finally\n      .finally(function () {\n        if (sharedState.resolved) return;\n        return predicate(resultArr.slice(0), sharedState).then(function (data) {\n          sharedState.resolved = true;\n          resolve(data);\n          return undefined;\n        }).catch(function (error) {\n          // log only the last predicate error\n          predicateError = error;\n        }).finally(function () {\n          finishedCount += 1;\n\n          if (finishedCount === promises.length) {\n            var errors = Object.values(resultArr.reduce(function (acc, z) {\n              if (z) {\n                var _error$data;\n\n                var id = z.id,\n                    error = z.error;\n\n                if ((error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.length) > 0) {\n                  if (error.data.startsWith(\"Error occurred while verifying params\")) acc[id] = capitalizeFirstLetter(error.data);else acc[id] = error.data;\n                }\n              }\n\n              return acc;\n            }, {}));\n\n            if (errors.length > 0) {\n              // Format-able errors\n              var msg = errors.length > 1 ? \"\\n\".concat(errors.map(function (it) {\n                return \"\\u2022 \".concat(it);\n              }).join(\"\\n\")) : errors[0];\n              reject(new Error(msg));\n            } else {\n              var _predicateError;\n\n              reject(new SomeError({\n                errors: errorArr,\n                responses: resultArr,\n                predicate: ((_predicateError = predicateError) === null || _predicateError === void 0 ? void 0 : _predicateError.message) || predicateError\n              }));\n            }\n          }\n        });\n      });\n    });\n  });\n};\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar GetOrSetNonceError = /*#__PURE__*/function (_Error) {\n  _inherits(GetOrSetNonceError, _Error);\n\n  var _super = _createSuper(GetOrSetNonceError);\n\n  function GetOrSetNonceError() {\n    _classCallCheck(this, GetOrSetNonceError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(GetOrSetNonceError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar kCombinations = function kCombinations(s, k) {\n  var set = s;\n\n  if (typeof set === \"number\") {\n    set = Array.from({\n      length: set\n    }, function (_, i) {\n      return i;\n    });\n  }\n\n  if (k > set.length || k <= 0) {\n    return [];\n  }\n\n  if (k === set.length) {\n    return [set];\n  }\n\n  if (k === 1) {\n    return set.reduce(function (acc, cur) {\n      return [].concat(_toConsumableArray(acc), [[cur]]);\n    }, []);\n  }\n\n  var combs = [];\n  var tailCombs = [];\n\n  for (var i = 0; i <= set.length - k + 1; i += 1) {\n    tailCombs = kCombinations(set.slice(i + 1), k - 1);\n\n    for (var j = 0; j < tailCombs.length; j += 1) {\n      combs.push([set[i]].concat(_toConsumableArray(tailCombs[j])));\n    }\n  }\n\n  return combs;\n};\n\nvar thresholdSame = function thresholdSame(arr, t) {\n  var hashMap = {};\n\n  for (var i = 0; i < arr.length; i += 1) {\n    var str = JsonStringify(arr[i]);\n    hashMap[str] = hashMap[str] ? hashMap[str] + 1 : 1;\n\n    if (hashMap[str] === t) {\n      return arr[i];\n    }\n  }\n\n  return undefined;\n};\n\nvar keyLookup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoints, verifier, verifierId) {\n    var lookupPromises;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            lookupPromises = endpoints.map(function (x) {\n              return post(x, generateJsonRPCObject(\"VerifierLookupRequest\", {\n                verifier: verifier,\n                verifier_id: verifierId.toString()\n              })).catch(function (err) {\n                return log.error(\"lookup request failed\", err);\n              });\n            });\n            return _context.abrupt(\"return\", Some(lookupPromises, function (lookupResults) {\n              var lookupShares = lookupResults.filter(function (x1) {\n                return x1;\n              });\n              var errorResult = thresholdSame(lookupShares.map(function (x2) {\n                return x2 && x2.error;\n              }), ~~(endpoints.length / 2) + 1);\n              var keyResult = thresholdSame(lookupShares.map(function (x3) {\n                return x3 && x3.result;\n              }), ~~(endpoints.length / 2) + 1);\n\n              if (keyResult || errorResult) {\n                return Promise.resolve({\n                  keyResult: keyResult,\n                  errorResult: errorResult\n                });\n              }\n\n              return Promise.reject(new Error(\"invalid results \".concat(JSON.stringify(lookupResults))));\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function keyLookup(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar waitKeyLookup = function waitKeyLookup(endpoints, verifier, verifierId, timeout) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      keyLookup(endpoints, verifier, verifierId).then(resolve).catch(reject);\n    }, timeout);\n  });\n};\n\nvar keyAssign = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var endpoints, torusNodePubs, lastPoint, firstPoint, verifier, verifierId, signerHost, network, nodeNum, initialPoint, data, signedData, acceptedErrorMsgs;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            endpoints = _ref2.endpoints, torusNodePubs = _ref2.torusNodePubs, lastPoint = _ref2.lastPoint, firstPoint = _ref2.firstPoint, verifier = _ref2.verifier, verifierId = _ref2.verifierId, signerHost = _ref2.signerHost, network = _ref2.network;\n\n            if (lastPoint === undefined) {\n              nodeNum = Math.floor(Math.random() * endpoints.length);\n              initialPoint = nodeNum;\n            } else {\n              nodeNum = lastPoint % endpoints.length;\n            }\n\n            if (!(nodeNum === firstPoint)) {\n              _context2.next = 4;\n              break;\n            }\n\n            throw new Error(\"Looped through all\");\n\n          case 4:\n            if (firstPoint !== undefined) initialPoint = firstPoint;\n            data = generateJsonRPCObject(\"KeyAssign\", {\n              verifier: verifier,\n              verifier_id: verifierId.toString()\n            });\n            _context2.prev = 6;\n            _context2.next = 9;\n            return post(signerHost, data, {\n              headers: {\n                pubKeyX: torusNodePubs[nodeNum].X,\n                pubKeyY: torusNodePubs[nodeNum].Y,\n                network: network\n              }\n            }, {\n              useAPIKey: true\n            });\n\n          case 9:\n            signedData = _context2.sent;\n            _context2.next = 12;\n            return post(endpoints[nodeNum], _objectSpread$1(_objectSpread$1({}, data), signedData), {\n              headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\"\n              }\n            });\n\n          case 12:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](6);\n            log.error(_context2.t0);\n            acceptedErrorMsgs = [// Slow node\n            \"Timed out\", // Happens when the node is not reachable (dns issue etc)\n            \"TypeError: Failed to fetch\", \"TypeError: cancelled\", \"TypeError: NetworkError when attempting to fetch resource.\" // Firefox\n            ];\n\n            if (!acceptedErrorMsgs.includes(_context2.t0.message)) {\n              _context2.next = 21;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", keyAssign({\n              endpoints: endpoints,\n              torusNodePubs: torusNodePubs,\n              lastPoint: nodeNum + 1,\n              firstPoint: initialPoint,\n              verifier: verifier,\n              verifierId: verifierId,\n              signerHost: signerHost,\n              network: network\n            }));\n\n          case 21:\n            throw new Error(\"Sorry, the Torus Network that powers Web3Auth is currently very busy.\\n    We will generate your key in time. Pls try again later. \\n\\n    \".concat(_context2.t0.message || \"\"));\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[6, 15]]);\n  }));\n\n  return function keyAssign(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction keccak256(a) {\n  var hash = createKeccakHash(\"keccak256\").update(a).digest().toString(\"hex\");\n  return \"0x\".concat(hash);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n} // of Torus nodes to handle malicious node responses\n\n\nvar Torus = /*#__PURE__*/function () {\n  function Torus() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$enableOneKey = _ref.enableOneKey,\n        enableOneKey = _ref$enableOneKey === void 0 ? false : _ref$enableOneKey,\n        _ref$metadataHost = _ref.metadataHost,\n        metadataHost = _ref$metadataHost === void 0 ? \"https://metadata.tor.us\" : _ref$metadataHost,\n        _ref$allowHost = _ref.allowHost,\n        allowHost = _ref$allowHost === void 0 ? \"https://signer.tor.us/api/allow\" : _ref$allowHost,\n        _ref$signerHost = _ref.signerHost,\n        signerHost = _ref$signerHost === void 0 ? \"https://signer.tor.us/api/sign\" : _ref$signerHost,\n        _ref$serverTimeOffset = _ref.serverTimeOffset,\n        serverTimeOffset = _ref$serverTimeOffset === void 0 ? 0 : _ref$serverTimeOffset,\n        _ref$network = _ref.network,\n        network = _ref$network === void 0 ? \"mainnet\" : _ref$network;\n\n    _classCallCheck(this, Torus);\n\n    _defineProperty(this, \"metadataHost\", void 0);\n\n    _defineProperty(this, \"allowHost\", void 0);\n\n    _defineProperty(this, \"serverTimeOffset\", void 0);\n\n    _defineProperty(this, \"enableOneKey\", void 0);\n\n    _defineProperty(this, \"signerHost\", void 0);\n\n    _defineProperty(this, \"network\", void 0);\n\n    _defineProperty(this, \"ec\", void 0);\n\n    this.ec = new ec(\"secp256k1\");\n    this.metadataHost = metadataHost;\n    this.allowHost = allowHost;\n    this.enableOneKey = enableOneKey;\n    this.serverTimeOffset = serverTimeOffset || 0; // ms\n\n    this.signerHost = signerHost;\n    this.network = network;\n  }\n\n  _createClass(Torus, [{\n    key: \"getUserTypeAndAddress\",\n    value:\n    /**\n     * Note: use this function only for openlogin tkey account lookups.\n     */\n    function () {\n      var _getUserTypeAndAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoints, torusNodePubs, _ref2) {\n        var verifier,\n            verifierId,\n            doesKeyAssign,\n            _ref3,\n            keyResult,\n            errorResult,\n            isNewKey,\n            finalKeyResult,\n            assignResult,\n            _finalKeyResult$keys$,\n            X,\n            Y,\n            nonceResult,\n            nonce,\n            modifiedPubKey,\n            finalX,\n            finalY,\n            address,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                verifier = _ref2.verifier, verifierId = _ref2.verifierId;\n                doesKeyAssign = _args.length > 3 && _args[3] !== undefined ? _args[3] : false;\n                _context.next = 4;\n                return keyLookup(endpoints, verifier, verifierId);\n\n              case 4:\n                _context.t0 = _context.sent;\n\n                if (_context.t0) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.t0 = {};\n\n              case 7:\n                _ref3 = _context.t0;\n                keyResult = _ref3.keyResult;\n                errorResult = _ref3.errorResult;\n                isNewKey = false;\n\n                if (!(errorResult && JSON.stringify(errorResult).includes(\"Verifier + VerifierID has not yet been assigned\"))) {\n                  _context.next = 23;\n                  break;\n                }\n\n                if (doesKeyAssign) {\n                  _context.next = 14;\n                  break;\n                }\n\n                throw new Error(\"Verifier + VerifierID has not yet been assigned\");\n\n              case 14:\n                _context.next = 16;\n                return keyAssign({\n                  endpoints: endpoints,\n                  torusNodePubs: torusNodePubs,\n                  lastPoint: undefined,\n                  firstPoint: undefined,\n                  verifier: verifier,\n                  verifierId: verifierId,\n                  signerHost: this.signerHost,\n                  network: this.network\n                });\n\n              case 16:\n                _context.next = 18;\n                return waitKeyLookup(endpoints, verifier, verifierId, 1000);\n\n              case 18:\n                assignResult = _context.sent;\n                finalKeyResult = assignResult === null || assignResult === void 0 ? void 0 : assignResult.keyResult;\n                isNewKey = true;\n                _context.next = 28;\n                break;\n\n              case 23:\n                if (!keyResult) {\n                  _context.next = 27;\n                  break;\n                }\n\n                finalKeyResult = keyResult;\n                _context.next = 28;\n                break;\n\n              case 27:\n                throw new Error(\"node results do not match at first lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 28:\n                if (!finalKeyResult) {\n                  _context.next = 58;\n                  break;\n                }\n\n                _finalKeyResult$keys$ = finalKeyResult.keys[0], X = _finalKeyResult$keys$.pub_key_X, Y = _finalKeyResult$keys$.pub_key_Y;\n                _context.prev = 30;\n                _context.next = 33;\n                return this.getOrSetNonce(X, Y, undefined, !isNewKey);\n\n              case 33:\n                nonceResult = _context.sent;\n                nonce = new BN(nonceResult.nonce || \"0\", 16);\n                _context.next = 40;\n                break;\n\n              case 37:\n                _context.prev = 37;\n                _context.t1 = _context[\"catch\"](30);\n                throw new GetOrSetNonceError();\n\n              case 40:\n                if (!(nonceResult.typeOfUser === \"v1\")) {\n                  _context.next = 44;\n                  break;\n                }\n\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic());\n                _context.next = 49;\n                break;\n\n              case 44:\n                if (!(nonceResult.typeOfUser === \"v2\")) {\n                  _context.next = 48;\n                  break;\n                }\n\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPublic({\n                  x: nonceResult.pubNonce.x,\n                  y: nonceResult.pubNonce.y\n                }).getPublic());\n                _context.next = 49;\n                break;\n\n              case 48:\n                throw new Error(\"getOrSetNonce should always return typeOfUser.\");\n\n              case 49:\n                finalX = modifiedPubKey.getX().toString(16);\n                finalY = modifiedPubKey.getY().toString(16);\n                address = this.generateAddressFromPubKey(modifiedPubKey.getX(), modifiedPubKey.getY());\n\n                if (!(nonceResult.typeOfUser === \"v1\")) {\n                  _context.next = 56;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  typeOfUser: nonceResult.typeOfUser,\n                  nonce: nonce,\n                  X: finalX,\n                  Y: finalY,\n                  address: address\n                });\n\n              case 56:\n                if (!(nonceResult.typeOfUser === \"v2\")) {\n                  _context.next = 58;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  typeOfUser: nonceResult.typeOfUser,\n                  nonce: nonce,\n                  pubNonce: nonceResult.pubNonce,\n                  upgraded: nonceResult.upgraded,\n                  X: finalX,\n                  Y: finalY,\n                  address: address\n                });\n\n              case 58:\n                throw new Error(\"node results do not match at final lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 59:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[30, 37]]);\n      }));\n\n      function getUserTypeAndAddress(_x, _x2, _x3) {\n        return _getUserTypeAndAddress.apply(this, arguments);\n      }\n\n      return getUserTypeAndAddress;\n    }()\n  }, {\n    key: \"setCustomKey\",\n    value: function () {\n      var _setCustomKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref4) {\n        var privKeyHex, metadataNonce, torusKeyHex, customKeyHex, torusKey, privKey, customKey, newMetadataNonce, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                privKeyHex = _ref4.privKeyHex, metadataNonce = _ref4.metadataNonce, torusKeyHex = _ref4.torusKeyHex, customKeyHex = _ref4.customKeyHex;\n\n                if (torusKeyHex) {\n                  torusKey = new BN(torusKeyHex, 16);\n                } else {\n                  privKey = new BN(privKeyHex, 16);\n                  torusKey = privKey.sub(metadataNonce).umod(this.ec.curve.n);\n                }\n\n                customKey = new BN(customKeyHex, 16);\n                newMetadataNonce = customKey.sub(torusKey).umod(this.ec.curve.n);\n                data = this.generateMetadataParams(newMetadataNonce.toString(16), torusKey);\n                _context2.next = 7;\n                return this.setMetadata(data);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setCustomKey(_x4) {\n        return _setCustomKey.apply(this, arguments);\n      }\n\n      return setCustomKey;\n    }()\n  }, {\n    key: \"retrieveShares\",\n    value: function () {\n      var _retrieveShares = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(endpoints, indexes, verifier, verifierParams, idToken) {\n        var _this = this;\n\n        var extraParams,\n            promiseArr,\n            tmpKey,\n            pubKey,\n            pubKeyX,\n            pubKeyY,\n            tokenCommitment,\n            i,\n            p,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                extraParams = _args5.length > 5 && _args5[5] !== undefined ? _args5[5] : {};\n                promiseArr = [];\n                _context5.next = 4;\n                return get(this.allowHost, {\n                  headers: {\n                    verifier: verifier,\n                    verifier_id: verifierParams.verifier_id,\n                    network: this.network\n                  }\n                }, {\n                  useAPIKey: true\n                });\n\n              case 4:\n                /*\n                  CommitmentRequestParams struct {\n                    MessagePrefix      string `json:\"messageprefix\"`\n                    TokenCommitment    string `json:\"tokencommitment\"`\n                    TempPubX           string `json:\"temppubx\"`\n                    TempPubY           string `json:\"temppuby\"`\n                    VerifierIdentifier string `json:\"verifieridentifier\"`\n                  }\n                  */\n                // generate temporary private and public key that is used to secure receive shares\n                tmpKey = generatePrivate();\n                pubKey = getPublic(tmpKey).toString(\"hex\");\n                pubKeyX = pubKey.slice(2, 66);\n                pubKeyY = pubKey.slice(66);\n                tokenCommitment = keccak256(idToken); // make commitment requests to endpoints\n\n                for (i = 0; i < endpoints.length; i += 1) {\n                  p = post(endpoints[i], generateJsonRPCObject(\"CommitmentRequest\", {\n                    messageprefix: \"mug00\",\n                    tokencommitment: tokenCommitment.slice(2),\n                    temppubx: pubKeyX,\n                    temppuby: pubKeyY,\n                    verifieridentifier: verifier\n                  })).catch(function (err) {\n                    log.error(\"commitment\", err);\n                  });\n                  promiseArr.push(p);\n                }\n                /*\n                  ShareRequestParams struct {\n                    Item []bijson.RawMessage `json:\"item\"`\n                  }\n                  ShareRequestItem struct {\n                    IDToken            string          `json:\"idtoken\"`\n                    NodeSignatures     []NodeSignature `json:\"nodesignatures\"`\n                    VerifierIdentifier string          `json:\"verifieridentifier\"`\n                  }\n                  NodeSignature struct {\n                    Signature   string\n                    Data        string\n                    NodePubKeyX string\n                    NodePubKeyY string\n                  }\n                  CommitmentRequestResult struct {\n                    Signature string `json:\"signature\"`\n                    Data      string `json:\"data\"`\n                    NodePubX  string `json:\"nodepubx\"`\n                    NodePubY  string `json:\"nodepuby\"`\n                  }\n                  */\n                // send share request once k + t number of commitment requests have completed\n\n\n                return _context5.abrupt(\"return\", Some(promiseArr, function (resultArr) {\n                  var completedRequests = resultArr.filter(function (x) {\n                    if (!x || _typeof(x) !== \"object\") {\n                      return false;\n                    }\n\n                    if (x.error) {\n                      return false;\n                    }\n\n                    return true;\n                  });\n\n                  if (completedRequests.length >= ~~(endpoints.length / 4) * 3 + 1) {\n                    return Promise.resolve(resultArr);\n                  }\n\n                  return Promise.reject(new Error(\"invalid \".concat(JSON.stringify(resultArr))));\n                }).then(function (responses) {\n                  var promiseArrRequest = [];\n                  var nodeSigs = [];\n\n                  for (var _i = 0; _i < responses.length; _i += 1) {\n                    if (responses[_i]) nodeSigs.push(responses[_i].result);\n                  }\n\n                  for (var _i2 = 0; _i2 < endpoints.length; _i2 += 1) {\n                    // eslint-disable-next-line promise/no-nesting\n                    var _p = post(endpoints[_i2], generateJsonRPCObject(\"ShareRequest\", {\n                      encrypted: \"yes\",\n                      item: [_objectSpread(_objectSpread({}, verifierParams), {}, {\n                        idtoken: idToken,\n                        nodesignatures: nodeSigs,\n                        verifieridentifier: verifier\n                      }, extraParams)]\n                    })).catch(function (err) {\n                      return log.error(\"share req\", err);\n                    });\n\n                    promiseArrRequest.push(_p);\n                  }\n\n                  return Some(promiseArrRequest, /*#__PURE__*/function () {\n                    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(shareResponses, sharedState) {\n                      var completedRequests, thresholdPublicKey, sharePromises, nodeIndexes, _i3, _currentShareResponse, _currentShareResponse2, currentShareResponse, firstKey, metadata, sharesResolved, decryptedShares, allCombis, privateKey, _loop, j, _ret;\n\n                      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                        while (1) {\n                          switch (_context3.prev = _context3.next) {\n                            case 0:\n                              /*\n                                  ShareRequestResult struct {\n                                    Keys []KeyAssignment\n                                  }\n                                          / KeyAssignmentPublic -\n                                  type KeyAssignmentPublic struct {\n                                    Index     big.Int\n                                    PublicKey common.Point\n                                    Threshold int\n                                    Verifiers map[string][]string // Verifier => VerifierID\n                                  }\n                                         // KeyAssignment -\n                                  type KeyAssignment struct {\n                                    KeyAssignmentPublic\n                                    Share big.Int // Or Si\n                                  }\n                                */\n                              // check if threshold number of nodes have returned the same user public key\n                              completedRequests = shareResponses.filter(function (x) {\n                                return x;\n                              });\n                              thresholdPublicKey = thresholdSame(shareResponses.map(function (x) {\n                                return x && x.result && x.result.keys[0].PublicKey;\n                              }), ~~(endpoints.length / 2) + 1); // optimistically run lagrange interpolation once threshold number of shares have been received\n                              // this is matched against the user public key to ensure that shares are consistent\n\n                              if (!(completedRequests.length >= ~~(endpoints.length / 2) + 1 && thresholdPublicKey)) {\n                                _context3.next = 28;\n                                break;\n                              }\n\n                              sharePromises = [];\n                              nodeIndexes = [];\n\n                              for (_i3 = 0; _i3 < shareResponses.length; _i3 += 1) {\n                                currentShareResponse = shareResponses[_i3];\n\n                                if ((currentShareResponse === null || currentShareResponse === void 0 ? void 0 : (_currentShareResponse = currentShareResponse.result) === null || _currentShareResponse === void 0 ? void 0 : (_currentShareResponse2 = _currentShareResponse.keys) === null || _currentShareResponse2 === void 0 ? void 0 : _currentShareResponse2.length) > 0) {\n                                  currentShareResponse.result.keys.sort(function (a, b) {\n                                    return new BN(a.Index, 16).cmp(new BN(b.Index, 16));\n                                  });\n                                  firstKey = currentShareResponse.result.keys[0];\n\n                                  if (firstKey.Metadata) {\n                                    metadata = {\n                                      ephemPublicKey: Buffer.from(firstKey.Metadata.ephemPublicKey, \"hex\"),\n                                      iv: Buffer.from(firstKey.Metadata.iv, \"hex\"),\n                                      mac: Buffer.from(firstKey.Metadata.mac, \"hex\") // mode: Buffer.from(firstKey.Metadata.mode, \"hex\"),\n\n                                    };\n                                    sharePromises.push( // eslint-disable-next-line promise/no-nesting\n                                    decrypt(tmpKey, _objectSpread(_objectSpread({}, metadata), {}, {\n                                      ciphertext: Buffer.from(Buffer.from(firstKey.Share, \"base64\").toString(\"binary\").padStart(64, \"0\"), \"hex\")\n                                    })).catch(function (err) {\n                                      return log.debug(\"share decryption\", err);\n                                    }));\n                                  } else {\n                                    sharePromises.push(Promise.resolve(Buffer.from(firstKey.Share.padStart(64, \"0\"), \"hex\")));\n                                  }\n                                } else {\n                                  sharePromises.push(Promise.resolve(undefined));\n                                }\n\n                                nodeIndexes.push(new BN(indexes[_i3], 16));\n                              }\n\n                              _context3.next = 8;\n                              return Promise.all(sharePromises);\n\n                            case 8:\n                              sharesResolved = _context3.sent;\n\n                              if (!sharedState.resolved) {\n                                _context3.next = 11;\n                                break;\n                              }\n\n                              return _context3.abrupt(\"return\", undefined);\n\n                            case 11:\n                              decryptedShares = sharesResolved.reduce(function (acc, curr, index) {\n                                if (curr) acc.push({\n                                  index: nodeIndexes[index],\n                                  value: new BN(curr)\n                                });\n                                return acc;\n                              }, []); // run lagrange interpolation on all subsets, faster in the optimistic scenario than berlekamp-welch due to early exit\n                              // run lagrange interpolation on all subsets, faster in the optimistic scenario than berlekamp-welch due to early exit\n\n                              allCombis = kCombinations(decryptedShares.length, ~~(endpoints.length / 2) + 1);\n                              privateKey = null;\n\n                              _loop = function _loop(j) {\n                                var currentCombi = allCombis[j];\n                                var currentCombiShares = decryptedShares.filter(function (v, index) {\n                                  return currentCombi.includes(index);\n                                });\n                                var shares = currentCombiShares.map(function (x) {\n                                  return x.value;\n                                });\n                                var indices = currentCombiShares.map(function (x) {\n                                  return x.index;\n                                });\n\n                                var derivedPrivateKey = _this.lagrangeInterpolation(shares, indices);\n\n                                if (!derivedPrivateKey) return \"continue\";\n                                var decryptedPubKey = getPublic(Buffer.from(derivedPrivateKey.toString(16, 64), \"hex\")).toString(\"hex\");\n                                var decryptedPubKeyX = decryptedPubKey.slice(2, 66);\n                                var decryptedPubKeyY = decryptedPubKey.slice(66);\n\n                                if (new BN(decryptedPubKeyX, 16).cmp(new BN(thresholdPublicKey.X, 16)) === 0 && new BN(decryptedPubKeyY, 16).cmp(new BN(thresholdPublicKey.Y, 16)) === 0) {\n                                  privateKey = derivedPrivateKey;\n                                  return \"break\";\n                                }\n                              };\n\n                              j = 0;\n\n                            case 16:\n                              if (!(j < allCombis.length)) {\n                                _context3.next = 25;\n                                break;\n                              }\n\n                              _ret = _loop(j);\n\n                              if (!(_ret === \"continue\")) {\n                                _context3.next = 20;\n                                break;\n                              }\n\n                              return _context3.abrupt(\"continue\", 22);\n\n                            case 20:\n                              if (!(_ret === \"break\")) {\n                                _context3.next = 22;\n                                break;\n                              }\n\n                              return _context3.abrupt(\"break\", 25);\n\n                            case 22:\n                              j += 1;\n                              _context3.next = 16;\n                              break;\n\n                            case 25:\n                              if (!(privateKey === undefined || privateKey === null)) {\n                                _context3.next = 27;\n                                break;\n                              }\n\n                              throw new Error(\"could not derive private key\");\n\n                            case 27:\n                              return _context3.abrupt(\"return\", privateKey);\n\n                            case 28:\n                              throw new Error(\"invalid\");\n\n                            case 29:\n                            case \"end\":\n                              return _context3.stop();\n                          }\n                        }\n                      }, _callee3);\n                    }));\n\n                    return function (_x10, _x11) {\n                      return _ref5.apply(this, arguments);\n                    };\n                  }());\n                }).then( /*#__PURE__*/function () {\n                  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(returnedKey) {\n                    var privateKey, decryptedPubKey, decryptedPubKeyX, decryptedPubKeyY, metadataNonce, _yield$_this$getNonce, nonce, ethAddress;\n\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            privateKey = returnedKey;\n\n                            if (privateKey) {\n                              _context4.next = 3;\n                              break;\n                            }\n\n                            throw new Error(\"Invalid private key returned\");\n\n                          case 3:\n                            decryptedPubKey = getPublic(Buffer.from(privateKey.toString(16, 64), \"hex\")).toString(\"hex\");\n                            decryptedPubKeyX = decryptedPubKey.slice(2, 66);\n                            decryptedPubKeyY = decryptedPubKey.slice(66);\n\n                            if (!_this.enableOneKey) {\n                              _context4.next = 14;\n                              break;\n                            }\n\n                            _context4.next = 9;\n                            return _this.getNonce(decryptedPubKeyX, decryptedPubKeyY, privateKey);\n\n                          case 9:\n                            _yield$_this$getNonce = _context4.sent;\n                            nonce = _yield$_this$getNonce.nonce;\n                            metadataNonce = new BN(nonce || \"0\", 16);\n                            _context4.next = 17;\n                            break;\n\n                          case 14:\n                            _context4.next = 16;\n                            return _this.getMetadata({\n                              pub_key_X: decryptedPubKeyX,\n                              pub_key_Y: decryptedPubKeyY\n                            });\n\n                          case 16:\n                            metadataNonce = _context4.sent;\n\n                          case 17:\n                            log.debug(\"> torus.js/retrieveShares\", {\n                              privKey: privateKey.toString(16),\n                              metadataNonce: metadataNonce.toString(16)\n                            });\n                            privateKey = privateKey.add(metadataNonce).umod(_this.ec.curve.n);\n                            ethAddress = _this.generateAddressFromPrivKey(privateKey);\n                            log.debug(\"> torus.js/retrieveShares\", {\n                              ethAddress: ethAddress,\n                              privKey: privateKey.toString(16)\n                            }); // return reconstructed private key and ethereum address\n\n                            return _context4.abrupt(\"return\", {\n                              ethAddress: ethAddress,\n                              privKey: privateKey.toString(\"hex\", 64),\n                              metadataNonce: metadataNonce\n                            });\n\n                          case 22:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x12) {\n                    return _ref6.apply(this, arguments);\n                  };\n                }()));\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function retrieveShares(_x5, _x6, _x7, _x8, _x9) {\n        return _retrieveShares.apply(this, arguments);\n      }\n\n      return retrieveShares;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function () {\n      var _getMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n        var options,\n            metadataResponse,\n            _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                options = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n                _context6.prev = 1;\n                _context6.next = 4;\n                return post(\"\".concat(this.metadataHost, \"/get\"), data, options, {\n                  useAPIKey: true\n                });\n\n              case 4:\n                metadataResponse = _context6.sent;\n\n                if (!(!metadataResponse || !metadataResponse.message)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", new BN(0));\n\n              case 7:\n                return _context6.abrupt(\"return\", new BN(metadataResponse.message, 16));\n\n              case 10:\n                _context6.prev = 10;\n                _context6.t0 = _context6[\"catch\"](1);\n                log.error(\"get metadata error\", _context6.t0);\n                return _context6.abrupt(\"return\", new BN(0));\n\n              case 14:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[1, 10]]);\n      }));\n\n      function getMetadata(_x13) {\n        return _getMetadata.apply(this, arguments);\n      }\n\n      return getMetadata;\n    }()\n  }, {\n    key: \"generateMetadataParams\",\n    value: function generateMetadataParams(message, privateKey) {\n      var key = this.ec.keyFromPrivate(privateKey.toString(\"hex\", 64));\n      var setData = {\n        data: message,\n        timestamp: new BN(~~(this.serverTimeOffset + Date.now() / 1000)).toString(16)\n      };\n      var sig = key.sign(keccak256(JsonStringify(setData)).slice(2));\n      return {\n        pub_key_X: key.getPublic().getX().toString(\"hex\"),\n        pub_key_Y: key.getPublic().getY().toString(\"hex\"),\n        set_data: setData,\n        signature: Buffer.from(sig.r.toString(16, 64) + sig.s.toString(16, 64) + new BN(\"\").toString(16, 2), \"hex\").toString(\"base64\")\n      };\n    }\n  }, {\n    key: \"setMetadata\",\n    value: function () {\n      var _setMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data) {\n        var options,\n            metadataResponse,\n            _args7 = arguments;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                options = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n                _context7.prev = 1;\n                _context7.next = 4;\n                return post(\"\".concat(this.metadataHost, \"/set\"), data, options, {\n                  useAPIKey: true\n                });\n\n              case 4:\n                metadataResponse = _context7.sent;\n                return _context7.abrupt(\"return\", metadataResponse.message);\n\n              case 8:\n                _context7.prev = 8;\n                _context7.t0 = _context7[\"catch\"](1);\n                log.error(\"set metadata error\", _context7.t0);\n                return _context7.abrupt(\"return\", \"\");\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[1, 8]]);\n      }));\n\n      function setMetadata(_x14) {\n        return _setMetadata.apply(this, arguments);\n      }\n\n      return setMetadata;\n    }()\n  }, {\n    key: \"lagrangeInterpolation\",\n    value: function lagrangeInterpolation(shares, nodeIndex) {\n      if (shares.length !== nodeIndex.length) {\n        return null;\n      }\n\n      var secret = new BN(0);\n\n      for (var i = 0; i < shares.length; i += 1) {\n        var upper = new BN(1);\n        var lower = new BN(1);\n\n        for (var j = 0; j < shares.length; j += 1) {\n          if (i !== j) {\n            upper = upper.mul(nodeIndex[j].neg());\n            upper = upper.umod(this.ec.curve.n);\n            var temp = nodeIndex[i].sub(nodeIndex[j]);\n            temp = temp.umod(this.ec.curve.n);\n            lower = lower.mul(temp).umod(this.ec.curve.n);\n          }\n        }\n\n        var delta = upper.mul(lower.invm(this.ec.curve.n)).umod(this.ec.curve.n);\n        delta = delta.mul(shares[i]).umod(this.ec.curve.n);\n        secret = secret.add(delta);\n      }\n\n      return secret.umod(this.ec.curve.n);\n    }\n  }, {\n    key: \"generateAddressFromPrivKey\",\n    value: function generateAddressFromPrivKey(privateKey) {\n      var key = this.ec.keyFromPrivate(privateKey.toString(\"hex\", 64), \"hex\");\n      var publicKey = key.getPublic().encode(\"hex\", false).slice(2);\n      log.info(publicKey, \"public key\");\n      var ethAddressLower = \"0x\".concat(keccak256(Buffer.from(publicKey, \"hex\")).slice(64 - 38));\n      return toChecksumAddress(ethAddressLower);\n    }\n  }, {\n    key: \"generateAddressFromPubKey\",\n    value: function generateAddressFromPubKey(publicKeyX, publicKeyY) {\n      var key = this.ec.keyFromPublic({\n        x: publicKeyX.toString(\"hex\", 64),\n        y: publicKeyY.toString(\"hex\", 64)\n      });\n      var publicKey = key.getPublic().encode(\"hex\", false).slice(2);\n      log.info(key.getPublic().encode(\"hex\", false), \"public key\");\n      var ethAddressLower = \"0x\".concat(keccak256(Buffer.from(publicKey, \"hex\")).slice(64 - 38));\n      return toChecksumAddress(ethAddressLower);\n    }\n    /**\n     * Note: use this function only with custom auth, don't use to lookup openlogin accounts.\n     */\n\n  }, {\n    key: \"getPublicAddress\",\n    value: function () {\n      var _getPublicAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(endpoints, torusNodePubs, _ref7) {\n        var verifier,\n            verifierId,\n            isExtended,\n            finalKeyResult,\n            isNewKey,\n            _ref8,\n            keyResult,\n            errorResult,\n            assignResult,\n            _nonce,\n            _finalKeyResult$keys$2,\n            X,\n            Y,\n            nonceResult,\n            nonce,\n            modifiedPubKey,\n            typeOfUser,\n            pubNonce,\n            address,\n            _args8 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                verifier = _ref7.verifier, verifierId = _ref7.verifierId;\n                isExtended = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : false;\n                log.debug(\"> torus.js/getPublicAddress\", {\n                  endpoints: endpoints,\n                  torusNodePubs: torusNodePubs,\n                  verifier: verifier,\n                  verifierId: verifierId,\n                  isExtended: isExtended\n                });\n                isNewKey = false;\n                _context8.next = 6;\n                return keyLookup(endpoints, verifier, verifierId);\n\n              case 6:\n                _context8.t0 = _context8.sent;\n\n                if (_context8.t0) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                _context8.t0 = {};\n\n              case 9:\n                _ref8 = _context8.t0;\n                keyResult = _ref8.keyResult;\n                errorResult = _ref8.errorResult;\n\n                if (!(errorResult && JSON.stringify(errorResult).includes(\"Verifier not supported\"))) {\n                  _context8.next = 16;\n                  break;\n                }\n\n                throw new Error(\"Verifier not supported. Check if you: \\n\\n      1. Are on the right network (Torus testnet/mainnet) \\n\\n      2. Have setup a verifier on dashboard.web3auth.io?\");\n\n              case 16:\n                if (!(errorResult && JSON.stringify(errorResult).includes(\"Verifier + VerifierID has not yet been assigned\"))) {\n                  _context8.next = 26;\n                  break;\n                }\n\n                _context8.next = 19;\n                return keyAssign({\n                  endpoints: endpoints,\n                  torusNodePubs: torusNodePubs,\n                  lastPoint: undefined,\n                  firstPoint: undefined,\n                  verifier: verifier,\n                  verifierId: verifierId,\n                  signerHost: this.signerHost,\n                  network: this.network\n                });\n\n              case 19:\n                _context8.next = 21;\n                return waitKeyLookup(endpoints, verifier, verifierId, 1000);\n\n              case 21:\n                assignResult = _context8.sent;\n                finalKeyResult = assignResult === null || assignResult === void 0 ? void 0 : assignResult.keyResult;\n                isNewKey = true;\n                _context8.next = 31;\n                break;\n\n              case 26:\n                if (!keyResult) {\n                  _context8.next = 30;\n                  break;\n                }\n\n                finalKeyResult = keyResult;\n                _context8.next = 31;\n                break;\n\n              case 30:\n                throw new Error(\"node results do not match at first lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 31:\n                log.debug(\"> torus.js/getPublicAddress\", {\n                  finalKeyResult: finalKeyResult,\n                  isNewKey: isNewKey\n                });\n\n                if (!finalKeyResult) {\n                  _context8.next = 69;\n                  break;\n                }\n\n                _finalKeyResult$keys$2 = finalKeyResult.keys[0], X = _finalKeyResult$keys$2.pub_key_X, Y = _finalKeyResult$keys$2.pub_key_Y;\n\n                if (!this.enableOneKey) {\n                  _context8.next = 57;\n                  break;\n                }\n\n                _context8.prev = 35;\n                _context8.next = 38;\n                return this.getOrSetNonce(X, Y, undefined, !isNewKey);\n\n              case 38:\n                nonceResult = _context8.sent;\n                nonce = new BN(nonceResult.nonce || \"0\", 16);\n                typeOfUser = nonceResult.typeOfUser;\n                _context8.next = 46;\n                break;\n\n              case 43:\n                _context8.prev = 43;\n                _context8.t1 = _context8[\"catch\"](35);\n                throw new GetOrSetNonceError();\n\n              case 46:\n                if (!(nonceResult.typeOfUser === \"v1\")) {\n                  _context8.next = 50;\n                  break;\n                }\n\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic());\n                _context8.next = 55;\n                break;\n\n              case 50:\n                if (!(nonceResult.typeOfUser === \"v2\")) {\n                  _context8.next = 54;\n                  break;\n                }\n\n                if (nonceResult.upgraded) {\n                  // OneKey is upgraded to 2/n, returned address is address of Torus key (postbox key), not tKey\n                  modifiedPubKey = this.ec.keyFromPublic({\n                    x: X,\n                    y: Y\n                  }).getPublic();\n                } else {\n                  modifiedPubKey = this.ec.keyFromPublic({\n                    x: X,\n                    y: Y\n                  }).getPublic().add(this.ec.keyFromPublic({\n                    x: nonceResult.pubNonce.x,\n                    y: nonceResult.pubNonce.y\n                  }).getPublic());\n                  pubNonce = nonceResult.pubNonce;\n                }\n\n                _context8.next = 55;\n                break;\n\n              case 54:\n                throw new Error(\"getOrSetNonce should always return typeOfUser.\");\n\n              case 55:\n                _context8.next = 62;\n                break;\n\n              case 57:\n                typeOfUser = \"v1\";\n                _context8.next = 60;\n                return this.getMetadata({\n                  pub_key_X: X,\n                  pub_key_Y: Y\n                });\n\n              case 60:\n                nonce = _context8.sent;\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic());\n\n              case 62:\n                X = modifiedPubKey.getX().toString(16);\n                Y = modifiedPubKey.getY().toString(16);\n                address = this.generateAddressFromPubKey(modifiedPubKey.getX(), modifiedPubKey.getY());\n                log.debug(\"> torus.js/getPublicAddress\", {\n                  X: X,\n                  Y: Y,\n                  address: address,\n                  typeOfUser: typeOfUser,\n                  nonce: (_nonce = nonce) === null || _nonce === void 0 ? void 0 : _nonce.toString(16),\n                  pubNonce: pubNonce\n                });\n\n                if (isExtended) {\n                  _context8.next = 68;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", address);\n\n              case 68:\n                return _context8.abrupt(\"return\", {\n                  typeOfUser: typeOfUser,\n                  address: address,\n                  X: X,\n                  Y: Y,\n                  metadataNonce: nonce,\n                  pubNonce: pubNonce\n                });\n\n              case 69:\n                throw new Error(\"node results do not match at final lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 70:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[35, 43]]);\n      }));\n\n      function getPublicAddress(_x15, _x16, _x17) {\n        return _getPublicAddress.apply(this, arguments);\n      }\n\n      return getPublicAddress;\n    }()\n    /**\n     * Internal functions for OneKey (OpenLogin v2), only call these functions if you know what you're doing\n     */\n\n  }, {\n    key: \"getOrSetNonce\",\n    value: function () {\n      var _getOrSetNonce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(X, Y, privKey) {\n        var getOnly,\n            data,\n            msg,\n            _args9 = arguments;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                getOnly = _args9.length > 3 && _args9[3] !== undefined ? _args9[3] : false;\n                msg = getOnly ? \"getNonce\" : \"getOrSetNonce\";\n\n                if (privKey) {\n                  data = this.generateMetadataParams(msg, privKey);\n                } else {\n                  data = {\n                    pub_key_X: X,\n                    pub_key_Y: Y,\n                    set_data: {\n                      data: msg\n                    }\n                  };\n                }\n\n                return _context9.abrupt(\"return\", post(\"\".concat(this.metadataHost, \"/get_or_set_nonce\"), data, undefined, {\n                  useAPIKey: true\n                }));\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getOrSetNonce(_x18, _x19, _x20) {\n        return _getOrSetNonce.apply(this, arguments);\n      }\n\n      return getOrSetNonce;\n    }()\n  }, {\n    key: \"getNonce\",\n    value: function () {\n      var _getNonce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(X, Y, privKey) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", this.getOrSetNonce(X, Y, privKey, true));\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getNonce(_x21, _x22, _x23) {\n        return _getNonce.apply(this, arguments);\n      }\n\n      return getNonce;\n    }()\n  }, {\n    key: \"getPostboxKeyFrom1OutOf1\",\n    value: function getPostboxKeyFrom1OutOf1(privKey, nonce) {\n      var privKeyBN = new BN(privKey, 16);\n      var nonceBN = new BN(nonce, 16);\n      return privKeyBN.sub(nonceBN).umod(this.ec.curve.n).toString(\"hex\");\n    }\n  }], [{\n    key: \"enableLogging\",\n    value: function enableLogging() {\n      var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (v) log.enableAll();else log.disableAll();\n    }\n  }, {\n    key: \"setAPIKey\",\n    value: function setAPIKey$1(apiKey) {\n      setAPIKey(apiKey);\n    }\n  }, {\n    key: \"setEmbedHost\",\n    value: function setEmbedHost$1(embedHost) {\n      setEmbedHost(embedHost);\n    }\n  }, {\n    key: \"isGetOrSetNonceError\",\n    value: function isGetOrSetNonceError(err) {\n      return err instanceof GetOrSetNonceError;\n    }\n  }]);\n\n  return Torus;\n}();\n\nexport { GetOrSetNonceError, Torus as default, kCombinations, keccak256, keyAssign, keyLookup, thresholdSame, waitKeyLookup };","map":{"version":3,"sources":["../src/loglevel.ts","../src/some.ts","../src/utils.ts","../src/torus.ts"],"names":["log","loglevel","str","SomeError","errors","responses","predicate","Some","finishedCount","sharedState","resolved","errorArr","promises","resultArr","resolve","predicateError","id","error","z","acc","capitalizeFirstLetter","msg","reject","GetOrSetNonceError","kCombinations","set","length","k","combs","tailCombs","i","j","thresholdSame","hashMap","arr","JsonStringify","keyLookup","endpoints","lookupPromises","generateJsonRPCObject","verifier","verifier_id","verifierId","lookupShares","errorResult","x2","keyResult","x3","Promise","JSON","waitKeyLookup","setTimeout","keyAssign","torusNodePubs","lastPoint","firstPoint","signerHost","network","nodeNum","Math","initialPoint","data","signedData","post","headers","pubKeyX","pubKeyY","useAPIKey","acceptedErrorMsgs","hash","createKeccakHash","Torus","enableOneKey","metadataHost","allowHost","serverTimeOffset","v","setAPIKey","setEmbedHost","err","doesKeyAssign","isNewKey","assignResult","finalKeyResult","pub_key_X","X","Y","nonceResult","nonce","modifiedPubKey","x","y","finalX","finalY","address","typeOfUser","pubNonce","upgraded","privKeyHex","metadataNonce","torusKeyHex","customKeyHex","torusKey","privKey","customKey","newMetadataNonce","extraParams","promiseArr","get","verifierParams","tmpKey","generatePrivate","pubKey","getPublic","tokenCommitment","keccak256","p","messageprefix","tokencommitment","temppubx","temppuby","verifieridentifier","completedRequests","promiseArrRequest","nodeSigs","encrypted","item","idtoken","nodesignatures","thresholdPublicKey","sharePromises","nodeIndexes","shareResponses","currentShareResponse","a","b","firstKey","metadata","ephemPublicKey","Buffer","iv","mac","decrypt","ciphertext","indexes","sharesResolved","decryptedShares","index","value","allCombis","privateKey","currentCombi","currentCombiShares","shares","indices","derivedPrivateKey","decryptedPubKey","decryptedPubKeyX","decryptedPubKeyY","pub_key_Y","ethAddress","options","metadataResponse","message","key","setData","timestamp","Date","sig","stringify","set_data","signature","nodeIndex","secret","upper","lower","temp","delta","publicKey","ethAddressLower","toChecksumAddress","publicKeyX","publicKeyY","isExtended","getOnly","privKeyBN","nonceBN"],"mappings":"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","sourcesContent":["import _typeof from '@babel/runtime/helpers/typeof';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport { generatePrivate, getPublic, decrypt } from '@toruslabs/eccrypto';\nimport { post, generateJsonRPCObject, get, setAPIKey, setEmbedHost } from '@toruslabs/http-helpers';\nimport BN from 'bn.js';\nimport { ec } from 'elliptic';\nimport JsonStringify from 'json-stable-stringify';\nimport { toChecksumAddress } from 'web3-utils';\nimport loglevel from 'loglevel';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport createKeccakHash from 'keccak';\n\nvar log = loglevel.getLogger(\"torus.js\");\nlog.disableAll();\n\nfunction _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct$1() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar SomeError = /*#__PURE__*/function (_Error) {\n  _inherits(SomeError, _Error);\n\n  var _super = _createSuper$1(SomeError);\n\n  function SomeError(_ref) {\n    var _this;\n\n    var errors = _ref.errors,\n        responses = _ref.responses,\n        predicate = _ref.predicate;\n\n    _classCallCheck(this, SomeError);\n\n    _this = _super.call(this, \"Unable to resolve enough promises.\");\n\n    _defineProperty(_assertThisInitialized(_this), \"errors\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"responses\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"predicate\", void 0);\n\n    _this.errors = errors;\n    _this.responses = responses;\n    _this.predicate = predicate;\n    return _this;\n  }\n\n  return _createClass(SomeError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar Some = function Some(promises, predicate) {\n  return new Promise(function (resolve, reject) {\n    var finishedCount = 0;\n    var sharedState = {\n      resolved: false\n    };\n    var errorArr = new Array(promises.length).fill(undefined);\n    var resultArr = new Array(promises.length).fill(undefined);\n    var predicateError;\n    return promises.forEach(function (x, index) {\n      return x.then(function (resp) {\n        resultArr[index] = resp;\n        return undefined;\n      }).catch(function (error) {\n        errorArr[index] = error;\n      }) // eslint-disable-next-line promise/no-return-in-finally\n      .finally(function () {\n        if (sharedState.resolved) return;\n        return predicate(resultArr.slice(0), sharedState).then(function (data) {\n          sharedState.resolved = true;\n          resolve(data);\n          return undefined;\n        }).catch(function (error) {\n          // log only the last predicate error\n          predicateError = error;\n        }).finally(function () {\n          finishedCount += 1;\n\n          if (finishedCount === promises.length) {\n            var errors = Object.values(resultArr.reduce(function (acc, z) {\n              if (z) {\n                var _error$data;\n\n                var id = z.id,\n                    error = z.error;\n\n                if ((error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.length) > 0) {\n                  if (error.data.startsWith(\"Error occurred while verifying params\")) acc[id] = capitalizeFirstLetter(error.data);else acc[id] = error.data;\n                }\n              }\n\n              return acc;\n            }, {}));\n\n            if (errors.length > 0) {\n              // Format-able errors\n              var msg = errors.length > 1 ? \"\\n\".concat(errors.map(function (it) {\n                return \"\\u2022 \".concat(it);\n              }).join(\"\\n\")) : errors[0];\n              reject(new Error(msg));\n            } else {\n              var _predicateError;\n\n              reject(new SomeError({\n                errors: errorArr,\n                responses: resultArr,\n                predicate: ((_predicateError = predicateError) === null || _predicateError === void 0 ? void 0 : _predicateError.message) || predicateError\n              }));\n            }\n          }\n        });\n      });\n    });\n  });\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar GetOrSetNonceError = /*#__PURE__*/function (_Error) {\n  _inherits(GetOrSetNonceError, _Error);\n\n  var _super = _createSuper(GetOrSetNonceError);\n\n  function GetOrSetNonceError() {\n    _classCallCheck(this, GetOrSetNonceError);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(GetOrSetNonceError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar kCombinations = function kCombinations(s, k) {\n  var set = s;\n\n  if (typeof set === \"number\") {\n    set = Array.from({\n      length: set\n    }, function (_, i) {\n      return i;\n    });\n  }\n\n  if (k > set.length || k <= 0) {\n    return [];\n  }\n\n  if (k === set.length) {\n    return [set];\n  }\n\n  if (k === 1) {\n    return set.reduce(function (acc, cur) {\n      return [].concat(_toConsumableArray(acc), [[cur]]);\n    }, []);\n  }\n\n  var combs = [];\n  var tailCombs = [];\n\n  for (var i = 0; i <= set.length - k + 1; i += 1) {\n    tailCombs = kCombinations(set.slice(i + 1), k - 1);\n\n    for (var j = 0; j < tailCombs.length; j += 1) {\n      combs.push([set[i]].concat(_toConsumableArray(tailCombs[j])));\n    }\n  }\n\n  return combs;\n};\nvar thresholdSame = function thresholdSame(arr, t) {\n  var hashMap = {};\n\n  for (var i = 0; i < arr.length; i += 1) {\n    var str = JsonStringify(arr[i]);\n    hashMap[str] = hashMap[str] ? hashMap[str] + 1 : 1;\n\n    if (hashMap[str] === t) {\n      return arr[i];\n    }\n  }\n\n  return undefined;\n};\nvar keyLookup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoints, verifier, verifierId) {\n    var lookupPromises;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            lookupPromises = endpoints.map(function (x) {\n              return post(x, generateJsonRPCObject(\"VerifierLookupRequest\", {\n                verifier: verifier,\n                verifier_id: verifierId.toString()\n              })).catch(function (err) {\n                return log.error(\"lookup request failed\", err);\n              });\n            });\n            return _context.abrupt(\"return\", Some(lookupPromises, function (lookupResults) {\n              var lookupShares = lookupResults.filter(function (x1) {\n                return x1;\n              });\n              var errorResult = thresholdSame(lookupShares.map(function (x2) {\n                return x2 && x2.error;\n              }), ~~(endpoints.length / 2) + 1);\n              var keyResult = thresholdSame(lookupShares.map(function (x3) {\n                return x3 && x3.result;\n              }), ~~(endpoints.length / 2) + 1);\n\n              if (keyResult || errorResult) {\n                return Promise.resolve({\n                  keyResult: keyResult,\n                  errorResult: errorResult\n                });\n              }\n\n              return Promise.reject(new Error(\"invalid results \".concat(JSON.stringify(lookupResults))));\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function keyLookup(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar waitKeyLookup = function waitKeyLookup(endpoints, verifier, verifierId, timeout) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      keyLookup(endpoints, verifier, verifierId).then(resolve).catch(reject);\n    }, timeout);\n  });\n};\nvar keyAssign = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var endpoints, torusNodePubs, lastPoint, firstPoint, verifier, verifierId, signerHost, network, nodeNum, initialPoint, data, signedData, acceptedErrorMsgs;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            endpoints = _ref2.endpoints, torusNodePubs = _ref2.torusNodePubs, lastPoint = _ref2.lastPoint, firstPoint = _ref2.firstPoint, verifier = _ref2.verifier, verifierId = _ref2.verifierId, signerHost = _ref2.signerHost, network = _ref2.network;\n\n            if (lastPoint === undefined) {\n              nodeNum = Math.floor(Math.random() * endpoints.length);\n              initialPoint = nodeNum;\n            } else {\n              nodeNum = lastPoint % endpoints.length;\n            }\n\n            if (!(nodeNum === firstPoint)) {\n              _context2.next = 4;\n              break;\n            }\n\n            throw new Error(\"Looped through all\");\n\n          case 4:\n            if (firstPoint !== undefined) initialPoint = firstPoint;\n            data = generateJsonRPCObject(\"KeyAssign\", {\n              verifier: verifier,\n              verifier_id: verifierId.toString()\n            });\n            _context2.prev = 6;\n            _context2.next = 9;\n            return post(signerHost, data, {\n              headers: {\n                pubKeyX: torusNodePubs[nodeNum].X,\n                pubKeyY: torusNodePubs[nodeNum].Y,\n                network: network\n              }\n            }, {\n              useAPIKey: true\n            });\n\n          case 9:\n            signedData = _context2.sent;\n            _context2.next = 12;\n            return post(endpoints[nodeNum], _objectSpread$1(_objectSpread$1({}, data), signedData), {\n              headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\"\n              }\n            });\n\n          case 12:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](6);\n            log.error(_context2.t0);\n            acceptedErrorMsgs = [// Slow node\n            \"Timed out\", // Happens when the node is not reachable (dns issue etc)\n            \"TypeError: Failed to fetch\", \"TypeError: cancelled\", \"TypeError: NetworkError when attempting to fetch resource.\" // Firefox\n            ];\n\n            if (!acceptedErrorMsgs.includes(_context2.t0.message)) {\n              _context2.next = 21;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", keyAssign({\n              endpoints: endpoints,\n              torusNodePubs: torusNodePubs,\n              lastPoint: nodeNum + 1,\n              firstPoint: initialPoint,\n              verifier: verifier,\n              verifierId: verifierId,\n              signerHost: signerHost,\n              network: network\n            }));\n\n          case 21:\n            throw new Error(\"Sorry, the Torus Network that powers Web3Auth is currently very busy.\\n    We will generate your key in time. Pls try again later. \\n\\n    \".concat(_context2.t0.message || \"\"));\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[6, 15]]);\n  }));\n\n  return function keyAssign(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nfunction keccak256(a) {\n  var hash = createKeccakHash(\"keccak256\").update(a).digest().toString(\"hex\");\n  return \"0x\".concat(hash);\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// of Torus nodes to handle malicious node responses\n\nvar Torus = /*#__PURE__*/function () {\n  function Torus() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$enableOneKey = _ref.enableOneKey,\n        enableOneKey = _ref$enableOneKey === void 0 ? false : _ref$enableOneKey,\n        _ref$metadataHost = _ref.metadataHost,\n        metadataHost = _ref$metadataHost === void 0 ? \"https://metadata.tor.us\" : _ref$metadataHost,\n        _ref$allowHost = _ref.allowHost,\n        allowHost = _ref$allowHost === void 0 ? \"https://signer.tor.us/api/allow\" : _ref$allowHost,\n        _ref$signerHost = _ref.signerHost,\n        signerHost = _ref$signerHost === void 0 ? \"https://signer.tor.us/api/sign\" : _ref$signerHost,\n        _ref$serverTimeOffset = _ref.serverTimeOffset,\n        serverTimeOffset = _ref$serverTimeOffset === void 0 ? 0 : _ref$serverTimeOffset,\n        _ref$network = _ref.network,\n        network = _ref$network === void 0 ? \"mainnet\" : _ref$network;\n\n    _classCallCheck(this, Torus);\n\n    _defineProperty(this, \"metadataHost\", void 0);\n\n    _defineProperty(this, \"allowHost\", void 0);\n\n    _defineProperty(this, \"serverTimeOffset\", void 0);\n\n    _defineProperty(this, \"enableOneKey\", void 0);\n\n    _defineProperty(this, \"signerHost\", void 0);\n\n    _defineProperty(this, \"network\", void 0);\n\n    _defineProperty(this, \"ec\", void 0);\n\n    this.ec = new ec(\"secp256k1\");\n    this.metadataHost = metadataHost;\n    this.allowHost = allowHost;\n    this.enableOneKey = enableOneKey;\n    this.serverTimeOffset = serverTimeOffset || 0; // ms\n\n    this.signerHost = signerHost;\n    this.network = network;\n  }\n\n  _createClass(Torus, [{\n    key: \"getUserTypeAndAddress\",\n    value:\n    /**\n     * Note: use this function only for openlogin tkey account lookups.\n     */\n    function () {\n      var _getUserTypeAndAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoints, torusNodePubs, _ref2) {\n        var verifier,\n            verifierId,\n            doesKeyAssign,\n            _ref3,\n            keyResult,\n            errorResult,\n            isNewKey,\n            finalKeyResult,\n            assignResult,\n            _finalKeyResult$keys$,\n            X,\n            Y,\n            nonceResult,\n            nonce,\n            modifiedPubKey,\n            finalX,\n            finalY,\n            address,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                verifier = _ref2.verifier, verifierId = _ref2.verifierId;\n                doesKeyAssign = _args.length > 3 && _args[3] !== undefined ? _args[3] : false;\n                _context.next = 4;\n                return keyLookup(endpoints, verifier, verifierId);\n\n              case 4:\n                _context.t0 = _context.sent;\n\n                if (_context.t0) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.t0 = {};\n\n              case 7:\n                _ref3 = _context.t0;\n                keyResult = _ref3.keyResult;\n                errorResult = _ref3.errorResult;\n                isNewKey = false;\n\n                if (!(errorResult && JSON.stringify(errorResult).includes(\"Verifier + VerifierID has not yet been assigned\"))) {\n                  _context.next = 23;\n                  break;\n                }\n\n                if (doesKeyAssign) {\n                  _context.next = 14;\n                  break;\n                }\n\n                throw new Error(\"Verifier + VerifierID has not yet been assigned\");\n\n              case 14:\n                _context.next = 16;\n                return keyAssign({\n                  endpoints: endpoints,\n                  torusNodePubs: torusNodePubs,\n                  lastPoint: undefined,\n                  firstPoint: undefined,\n                  verifier: verifier,\n                  verifierId: verifierId,\n                  signerHost: this.signerHost,\n                  network: this.network\n                });\n\n              case 16:\n                _context.next = 18;\n                return waitKeyLookup(endpoints, verifier, verifierId, 1000);\n\n              case 18:\n                assignResult = _context.sent;\n                finalKeyResult = assignResult === null || assignResult === void 0 ? void 0 : assignResult.keyResult;\n                isNewKey = true;\n                _context.next = 28;\n                break;\n\n              case 23:\n                if (!keyResult) {\n                  _context.next = 27;\n                  break;\n                }\n\n                finalKeyResult = keyResult;\n                _context.next = 28;\n                break;\n\n              case 27:\n                throw new Error(\"node results do not match at first lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 28:\n                if (!finalKeyResult) {\n                  _context.next = 58;\n                  break;\n                }\n\n                _finalKeyResult$keys$ = finalKeyResult.keys[0], X = _finalKeyResult$keys$.pub_key_X, Y = _finalKeyResult$keys$.pub_key_Y;\n                _context.prev = 30;\n                _context.next = 33;\n                return this.getOrSetNonce(X, Y, undefined, !isNewKey);\n\n              case 33:\n                nonceResult = _context.sent;\n                nonce = new BN(nonceResult.nonce || \"0\", 16);\n                _context.next = 40;\n                break;\n\n              case 37:\n                _context.prev = 37;\n                _context.t1 = _context[\"catch\"](30);\n                throw new GetOrSetNonceError();\n\n              case 40:\n                if (!(nonceResult.typeOfUser === \"v1\")) {\n                  _context.next = 44;\n                  break;\n                }\n\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic());\n                _context.next = 49;\n                break;\n\n              case 44:\n                if (!(nonceResult.typeOfUser === \"v2\")) {\n                  _context.next = 48;\n                  break;\n                }\n\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPublic({\n                  x: nonceResult.pubNonce.x,\n                  y: nonceResult.pubNonce.y\n                }).getPublic());\n                _context.next = 49;\n                break;\n\n              case 48:\n                throw new Error(\"getOrSetNonce should always return typeOfUser.\");\n\n              case 49:\n                finalX = modifiedPubKey.getX().toString(16);\n                finalY = modifiedPubKey.getY().toString(16);\n                address = this.generateAddressFromPubKey(modifiedPubKey.getX(), modifiedPubKey.getY());\n\n                if (!(nonceResult.typeOfUser === \"v1\")) {\n                  _context.next = 56;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  typeOfUser: nonceResult.typeOfUser,\n                  nonce: nonce,\n                  X: finalX,\n                  Y: finalY,\n                  address: address\n                });\n\n              case 56:\n                if (!(nonceResult.typeOfUser === \"v2\")) {\n                  _context.next = 58;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", {\n                  typeOfUser: nonceResult.typeOfUser,\n                  nonce: nonce,\n                  pubNonce: nonceResult.pubNonce,\n                  upgraded: nonceResult.upgraded,\n                  X: finalX,\n                  Y: finalY,\n                  address: address\n                });\n\n              case 58:\n                throw new Error(\"node results do not match at final lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 59:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[30, 37]]);\n      }));\n\n      function getUserTypeAndAddress(_x, _x2, _x3) {\n        return _getUserTypeAndAddress.apply(this, arguments);\n      }\n\n      return getUserTypeAndAddress;\n    }()\n  }, {\n    key: \"setCustomKey\",\n    value: function () {\n      var _setCustomKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref4) {\n        var privKeyHex, metadataNonce, torusKeyHex, customKeyHex, torusKey, privKey, customKey, newMetadataNonce, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                privKeyHex = _ref4.privKeyHex, metadataNonce = _ref4.metadataNonce, torusKeyHex = _ref4.torusKeyHex, customKeyHex = _ref4.customKeyHex;\n\n                if (torusKeyHex) {\n                  torusKey = new BN(torusKeyHex, 16);\n                } else {\n                  privKey = new BN(privKeyHex, 16);\n                  torusKey = privKey.sub(metadataNonce).umod(this.ec.curve.n);\n                }\n\n                customKey = new BN(customKeyHex, 16);\n                newMetadataNonce = customKey.sub(torusKey).umod(this.ec.curve.n);\n                data = this.generateMetadataParams(newMetadataNonce.toString(16), torusKey);\n                _context2.next = 7;\n                return this.setMetadata(data);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setCustomKey(_x4) {\n        return _setCustomKey.apply(this, arguments);\n      }\n\n      return setCustomKey;\n    }()\n  }, {\n    key: \"retrieveShares\",\n    value: function () {\n      var _retrieveShares = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(endpoints, indexes, verifier, verifierParams, idToken) {\n        var _this = this;\n\n        var extraParams,\n            promiseArr,\n            tmpKey,\n            pubKey,\n            pubKeyX,\n            pubKeyY,\n            tokenCommitment,\n            i,\n            p,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                extraParams = _args5.length > 5 && _args5[5] !== undefined ? _args5[5] : {};\n                promiseArr = [];\n                _context5.next = 4;\n                return get(this.allowHost, {\n                  headers: {\n                    verifier: verifier,\n                    verifier_id: verifierParams.verifier_id,\n                    network: this.network\n                  }\n                }, {\n                  useAPIKey: true\n                });\n\n              case 4:\n                /*\n                  CommitmentRequestParams struct {\n                    MessagePrefix      string `json:\"messageprefix\"`\n                    TokenCommitment    string `json:\"tokencommitment\"`\n                    TempPubX           string `json:\"temppubx\"`\n                    TempPubY           string `json:\"temppuby\"`\n                    VerifierIdentifier string `json:\"verifieridentifier\"`\n                  }\n                  */\n                // generate temporary private and public key that is used to secure receive shares\n                tmpKey = generatePrivate();\n                pubKey = getPublic(tmpKey).toString(\"hex\");\n                pubKeyX = pubKey.slice(2, 66);\n                pubKeyY = pubKey.slice(66);\n                tokenCommitment = keccak256(idToken); // make commitment requests to endpoints\n\n                for (i = 0; i < endpoints.length; i += 1) {\n                  p = post(endpoints[i], generateJsonRPCObject(\"CommitmentRequest\", {\n                    messageprefix: \"mug00\",\n                    tokencommitment: tokenCommitment.slice(2),\n                    temppubx: pubKeyX,\n                    temppuby: pubKeyY,\n                    verifieridentifier: verifier\n                  })).catch(function (err) {\n                    log.error(\"commitment\", err);\n                  });\n                  promiseArr.push(p);\n                }\n                /*\n                  ShareRequestParams struct {\n                    Item []bijson.RawMessage `json:\"item\"`\n                  }\n                  ShareRequestItem struct {\n                    IDToken            string          `json:\"idtoken\"`\n                    NodeSignatures     []NodeSignature `json:\"nodesignatures\"`\n                    VerifierIdentifier string          `json:\"verifieridentifier\"`\n                  }\n                  NodeSignature struct {\n                    Signature   string\n                    Data        string\n                    NodePubKeyX string\n                    NodePubKeyY string\n                  }\n                  CommitmentRequestResult struct {\n                    Signature string `json:\"signature\"`\n                    Data      string `json:\"data\"`\n                    NodePubX  string `json:\"nodepubx\"`\n                    NodePubY  string `json:\"nodepuby\"`\n                  }\n                  */\n                // send share request once k + t number of commitment requests have completed\n\n\n                return _context5.abrupt(\"return\", Some(promiseArr, function (resultArr) {\n                  var completedRequests = resultArr.filter(function (x) {\n                    if (!x || _typeof(x) !== \"object\") {\n                      return false;\n                    }\n\n                    if (x.error) {\n                      return false;\n                    }\n\n                    return true;\n                  });\n\n                  if (completedRequests.length >= ~~(endpoints.length / 4) * 3 + 1) {\n                    return Promise.resolve(resultArr);\n                  }\n\n                  return Promise.reject(new Error(\"invalid \".concat(JSON.stringify(resultArr))));\n                }).then(function (responses) {\n                  var promiseArrRequest = [];\n                  var nodeSigs = [];\n\n                  for (var _i = 0; _i < responses.length; _i += 1) {\n                    if (responses[_i]) nodeSigs.push(responses[_i].result);\n                  }\n\n                  for (var _i2 = 0; _i2 < endpoints.length; _i2 += 1) {\n                    // eslint-disable-next-line promise/no-nesting\n                    var _p = post(endpoints[_i2], generateJsonRPCObject(\"ShareRequest\", {\n                      encrypted: \"yes\",\n                      item: [_objectSpread(_objectSpread({}, verifierParams), {}, {\n                        idtoken: idToken,\n                        nodesignatures: nodeSigs,\n                        verifieridentifier: verifier\n                      }, extraParams)]\n                    })).catch(function (err) {\n                      return log.error(\"share req\", err);\n                    });\n\n                    promiseArrRequest.push(_p);\n                  }\n\n                  return Some(promiseArrRequest, /*#__PURE__*/function () {\n                    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(shareResponses, sharedState) {\n                      var completedRequests, thresholdPublicKey, sharePromises, nodeIndexes, _i3, _currentShareResponse, _currentShareResponse2, currentShareResponse, firstKey, metadata, sharesResolved, decryptedShares, allCombis, privateKey, _loop, j, _ret;\n\n                      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                        while (1) {\n                          switch (_context3.prev = _context3.next) {\n                            case 0:\n                              /*\n                                  ShareRequestResult struct {\n                                    Keys []KeyAssignment\n                                  }\n                                          / KeyAssignmentPublic -\n                                  type KeyAssignmentPublic struct {\n                                    Index     big.Int\n                                    PublicKey common.Point\n                                    Threshold int\n                                    Verifiers map[string][]string // Verifier => VerifierID\n                                  }\n                                         // KeyAssignment -\n                                  type KeyAssignment struct {\n                                    KeyAssignmentPublic\n                                    Share big.Int // Or Si\n                                  }\n                                */\n                              // check if threshold number of nodes have returned the same user public key\n                              completedRequests = shareResponses.filter(function (x) {\n                                return x;\n                              });\n                              thresholdPublicKey = thresholdSame(shareResponses.map(function (x) {\n                                return x && x.result && x.result.keys[0].PublicKey;\n                              }), ~~(endpoints.length / 2) + 1); // optimistically run lagrange interpolation once threshold number of shares have been received\n                              // this is matched against the user public key to ensure that shares are consistent\n\n                              if (!(completedRequests.length >= ~~(endpoints.length / 2) + 1 && thresholdPublicKey)) {\n                                _context3.next = 28;\n                                break;\n                              }\n\n                              sharePromises = [];\n                              nodeIndexes = [];\n\n                              for (_i3 = 0; _i3 < shareResponses.length; _i3 += 1) {\n                                currentShareResponse = shareResponses[_i3];\n\n                                if ((currentShareResponse === null || currentShareResponse === void 0 ? void 0 : (_currentShareResponse = currentShareResponse.result) === null || _currentShareResponse === void 0 ? void 0 : (_currentShareResponse2 = _currentShareResponse.keys) === null || _currentShareResponse2 === void 0 ? void 0 : _currentShareResponse2.length) > 0) {\n                                  currentShareResponse.result.keys.sort(function (a, b) {\n                                    return new BN(a.Index, 16).cmp(new BN(b.Index, 16));\n                                  });\n                                  firstKey = currentShareResponse.result.keys[0];\n\n                                  if (firstKey.Metadata) {\n                                    metadata = {\n                                      ephemPublicKey: Buffer.from(firstKey.Metadata.ephemPublicKey, \"hex\"),\n                                      iv: Buffer.from(firstKey.Metadata.iv, \"hex\"),\n                                      mac: Buffer.from(firstKey.Metadata.mac, \"hex\") // mode: Buffer.from(firstKey.Metadata.mode, \"hex\"),\n\n                                    };\n                                    sharePromises.push( // eslint-disable-next-line promise/no-nesting\n                                    decrypt(tmpKey, _objectSpread(_objectSpread({}, metadata), {}, {\n                                      ciphertext: Buffer.from(Buffer.from(firstKey.Share, \"base64\").toString(\"binary\").padStart(64, \"0\"), \"hex\")\n                                    })).catch(function (err) {\n                                      return log.debug(\"share decryption\", err);\n                                    }));\n                                  } else {\n                                    sharePromises.push(Promise.resolve(Buffer.from(firstKey.Share.padStart(64, \"0\"), \"hex\")));\n                                  }\n                                } else {\n                                  sharePromises.push(Promise.resolve(undefined));\n                                }\n\n                                nodeIndexes.push(new BN(indexes[_i3], 16));\n                              }\n\n                              _context3.next = 8;\n                              return Promise.all(sharePromises);\n\n                            case 8:\n                              sharesResolved = _context3.sent;\n\n                              if (!sharedState.resolved) {\n                                _context3.next = 11;\n                                break;\n                              }\n\n                              return _context3.abrupt(\"return\", undefined);\n\n                            case 11:\n                              decryptedShares = sharesResolved.reduce(function (acc, curr, index) {\n                                if (curr) acc.push({\n                                  index: nodeIndexes[index],\n                                  value: new BN(curr)\n                                });\n                                return acc;\n                              }, []); // run lagrange interpolation on all subsets, faster in the optimistic scenario than berlekamp-welch due to early exit\n\n                              // run lagrange interpolation on all subsets, faster in the optimistic scenario than berlekamp-welch due to early exit\n                              allCombis = kCombinations(decryptedShares.length, ~~(endpoints.length / 2) + 1);\n                              privateKey = null;\n\n                              _loop = function _loop(j) {\n                                var currentCombi = allCombis[j];\n                                var currentCombiShares = decryptedShares.filter(function (v, index) {\n                                  return currentCombi.includes(index);\n                                });\n                                var shares = currentCombiShares.map(function (x) {\n                                  return x.value;\n                                });\n                                var indices = currentCombiShares.map(function (x) {\n                                  return x.index;\n                                });\n\n                                var derivedPrivateKey = _this.lagrangeInterpolation(shares, indices);\n\n                                if (!derivedPrivateKey) return \"continue\";\n                                var decryptedPubKey = getPublic(Buffer.from(derivedPrivateKey.toString(16, 64), \"hex\")).toString(\"hex\");\n                                var decryptedPubKeyX = decryptedPubKey.slice(2, 66);\n                                var decryptedPubKeyY = decryptedPubKey.slice(66);\n\n                                if (new BN(decryptedPubKeyX, 16).cmp(new BN(thresholdPublicKey.X, 16)) === 0 && new BN(decryptedPubKeyY, 16).cmp(new BN(thresholdPublicKey.Y, 16)) === 0) {\n                                  privateKey = derivedPrivateKey;\n                                  return \"break\";\n                                }\n                              };\n\n                              j = 0;\n\n                            case 16:\n                              if (!(j < allCombis.length)) {\n                                _context3.next = 25;\n                                break;\n                              }\n\n                              _ret = _loop(j);\n\n                              if (!(_ret === \"continue\")) {\n                                _context3.next = 20;\n                                break;\n                              }\n\n                              return _context3.abrupt(\"continue\", 22);\n\n                            case 20:\n                              if (!(_ret === \"break\")) {\n                                _context3.next = 22;\n                                break;\n                              }\n\n                              return _context3.abrupt(\"break\", 25);\n\n                            case 22:\n                              j += 1;\n                              _context3.next = 16;\n                              break;\n\n                            case 25:\n                              if (!(privateKey === undefined || privateKey === null)) {\n                                _context3.next = 27;\n                                break;\n                              }\n\n                              throw new Error(\"could not derive private key\");\n\n                            case 27:\n                              return _context3.abrupt(\"return\", privateKey);\n\n                            case 28:\n                              throw new Error(\"invalid\");\n\n                            case 29:\n                            case \"end\":\n                              return _context3.stop();\n                          }\n                        }\n                      }, _callee3);\n                    }));\n\n                    return function (_x10, _x11) {\n                      return _ref5.apply(this, arguments);\n                    };\n                  }());\n                }).then( /*#__PURE__*/function () {\n                  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(returnedKey) {\n                    var privateKey, decryptedPubKey, decryptedPubKeyX, decryptedPubKeyY, metadataNonce, _yield$_this$getNonce, nonce, ethAddress;\n\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            privateKey = returnedKey;\n\n                            if (privateKey) {\n                              _context4.next = 3;\n                              break;\n                            }\n\n                            throw new Error(\"Invalid private key returned\");\n\n                          case 3:\n                            decryptedPubKey = getPublic(Buffer.from(privateKey.toString(16, 64), \"hex\")).toString(\"hex\");\n                            decryptedPubKeyX = decryptedPubKey.slice(2, 66);\n                            decryptedPubKeyY = decryptedPubKey.slice(66);\n\n                            if (!_this.enableOneKey) {\n                              _context4.next = 14;\n                              break;\n                            }\n\n                            _context4.next = 9;\n                            return _this.getNonce(decryptedPubKeyX, decryptedPubKeyY, privateKey);\n\n                          case 9:\n                            _yield$_this$getNonce = _context4.sent;\n                            nonce = _yield$_this$getNonce.nonce;\n                            metadataNonce = new BN(nonce || \"0\", 16);\n                            _context4.next = 17;\n                            break;\n\n                          case 14:\n                            _context4.next = 16;\n                            return _this.getMetadata({\n                              pub_key_X: decryptedPubKeyX,\n                              pub_key_Y: decryptedPubKeyY\n                            });\n\n                          case 16:\n                            metadataNonce = _context4.sent;\n\n                          case 17:\n                            log.debug(\"> torus.js/retrieveShares\", {\n                              privKey: privateKey.toString(16),\n                              metadataNonce: metadataNonce.toString(16)\n                            });\n                            privateKey = privateKey.add(metadataNonce).umod(_this.ec.curve.n);\n                            ethAddress = _this.generateAddressFromPrivKey(privateKey);\n                            log.debug(\"> torus.js/retrieveShares\", {\n                              ethAddress: ethAddress,\n                              privKey: privateKey.toString(16)\n                            }); // return reconstructed private key and ethereum address\n\n                            return _context4.abrupt(\"return\", {\n                              ethAddress: ethAddress,\n                              privKey: privateKey.toString(\"hex\", 64),\n                              metadataNonce: metadataNonce\n                            });\n\n                          case 22:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x12) {\n                    return _ref6.apply(this, arguments);\n                  };\n                }()));\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function retrieveShares(_x5, _x6, _x7, _x8, _x9) {\n        return _retrieveShares.apply(this, arguments);\n      }\n\n      return retrieveShares;\n    }()\n  }, {\n    key: \"getMetadata\",\n    value: function () {\n      var _getMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n        var options,\n            metadataResponse,\n            _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                options = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n                _context6.prev = 1;\n                _context6.next = 4;\n                return post(\"\".concat(this.metadataHost, \"/get\"), data, options, {\n                  useAPIKey: true\n                });\n\n              case 4:\n                metadataResponse = _context6.sent;\n\n                if (!(!metadataResponse || !metadataResponse.message)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", new BN(0));\n\n              case 7:\n                return _context6.abrupt(\"return\", new BN(metadataResponse.message, 16));\n\n              case 10:\n                _context6.prev = 10;\n                _context6.t0 = _context6[\"catch\"](1);\n                log.error(\"get metadata error\", _context6.t0);\n                return _context6.abrupt(\"return\", new BN(0));\n\n              case 14:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[1, 10]]);\n      }));\n\n      function getMetadata(_x13) {\n        return _getMetadata.apply(this, arguments);\n      }\n\n      return getMetadata;\n    }()\n  }, {\n    key: \"generateMetadataParams\",\n    value: function generateMetadataParams(message, privateKey) {\n      var key = this.ec.keyFromPrivate(privateKey.toString(\"hex\", 64));\n      var setData = {\n        data: message,\n        timestamp: new BN(~~(this.serverTimeOffset + Date.now() / 1000)).toString(16)\n      };\n      var sig = key.sign(keccak256(JsonStringify(setData)).slice(2));\n      return {\n        pub_key_X: key.getPublic().getX().toString(\"hex\"),\n        pub_key_Y: key.getPublic().getY().toString(\"hex\"),\n        set_data: setData,\n        signature: Buffer.from(sig.r.toString(16, 64) + sig.s.toString(16, 64) + new BN(\"\").toString(16, 2), \"hex\").toString(\"base64\")\n      };\n    }\n  }, {\n    key: \"setMetadata\",\n    value: function () {\n      var _setMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data) {\n        var options,\n            metadataResponse,\n            _args7 = arguments;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                options = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n                _context7.prev = 1;\n                _context7.next = 4;\n                return post(\"\".concat(this.metadataHost, \"/set\"), data, options, {\n                  useAPIKey: true\n                });\n\n              case 4:\n                metadataResponse = _context7.sent;\n                return _context7.abrupt(\"return\", metadataResponse.message);\n\n              case 8:\n                _context7.prev = 8;\n                _context7.t0 = _context7[\"catch\"](1);\n                log.error(\"set metadata error\", _context7.t0);\n                return _context7.abrupt(\"return\", \"\");\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[1, 8]]);\n      }));\n\n      function setMetadata(_x14) {\n        return _setMetadata.apply(this, arguments);\n      }\n\n      return setMetadata;\n    }()\n  }, {\n    key: \"lagrangeInterpolation\",\n    value: function lagrangeInterpolation(shares, nodeIndex) {\n      if (shares.length !== nodeIndex.length) {\n        return null;\n      }\n\n      var secret = new BN(0);\n\n      for (var i = 0; i < shares.length; i += 1) {\n        var upper = new BN(1);\n        var lower = new BN(1);\n\n        for (var j = 0; j < shares.length; j += 1) {\n          if (i !== j) {\n            upper = upper.mul(nodeIndex[j].neg());\n            upper = upper.umod(this.ec.curve.n);\n            var temp = nodeIndex[i].sub(nodeIndex[j]);\n            temp = temp.umod(this.ec.curve.n);\n            lower = lower.mul(temp).umod(this.ec.curve.n);\n          }\n        }\n\n        var delta = upper.mul(lower.invm(this.ec.curve.n)).umod(this.ec.curve.n);\n        delta = delta.mul(shares[i]).umod(this.ec.curve.n);\n        secret = secret.add(delta);\n      }\n\n      return secret.umod(this.ec.curve.n);\n    }\n  }, {\n    key: \"generateAddressFromPrivKey\",\n    value: function generateAddressFromPrivKey(privateKey) {\n      var key = this.ec.keyFromPrivate(privateKey.toString(\"hex\", 64), \"hex\");\n      var publicKey = key.getPublic().encode(\"hex\", false).slice(2);\n      log.info(publicKey, \"public key\");\n      var ethAddressLower = \"0x\".concat(keccak256(Buffer.from(publicKey, \"hex\")).slice(64 - 38));\n      return toChecksumAddress(ethAddressLower);\n    }\n  }, {\n    key: \"generateAddressFromPubKey\",\n    value: function generateAddressFromPubKey(publicKeyX, publicKeyY) {\n      var key = this.ec.keyFromPublic({\n        x: publicKeyX.toString(\"hex\", 64),\n        y: publicKeyY.toString(\"hex\", 64)\n      });\n      var publicKey = key.getPublic().encode(\"hex\", false).slice(2);\n      log.info(key.getPublic().encode(\"hex\", false), \"public key\");\n      var ethAddressLower = \"0x\".concat(keccak256(Buffer.from(publicKey, \"hex\")).slice(64 - 38));\n      return toChecksumAddress(ethAddressLower);\n    }\n    /**\n     * Note: use this function only with custom auth, don't use to lookup openlogin accounts.\n     */\n\n  }, {\n    key: \"getPublicAddress\",\n    value: function () {\n      var _getPublicAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(endpoints, torusNodePubs, _ref7) {\n        var verifier,\n            verifierId,\n            isExtended,\n            finalKeyResult,\n            isNewKey,\n            _ref8,\n            keyResult,\n            errorResult,\n            assignResult,\n            _nonce,\n            _finalKeyResult$keys$2,\n            X,\n            Y,\n            nonceResult,\n            nonce,\n            modifiedPubKey,\n            typeOfUser,\n            pubNonce,\n            address,\n            _args8 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                verifier = _ref7.verifier, verifierId = _ref7.verifierId;\n                isExtended = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : false;\n                log.debug(\"> torus.js/getPublicAddress\", {\n                  endpoints: endpoints,\n                  torusNodePubs: torusNodePubs,\n                  verifier: verifier,\n                  verifierId: verifierId,\n                  isExtended: isExtended\n                });\n                isNewKey = false;\n                _context8.next = 6;\n                return keyLookup(endpoints, verifier, verifierId);\n\n              case 6:\n                _context8.t0 = _context8.sent;\n\n                if (_context8.t0) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                _context8.t0 = {};\n\n              case 9:\n                _ref8 = _context8.t0;\n                keyResult = _ref8.keyResult;\n                errorResult = _ref8.errorResult;\n\n                if (!(errorResult && JSON.stringify(errorResult).includes(\"Verifier not supported\"))) {\n                  _context8.next = 16;\n                  break;\n                }\n\n                throw new Error(\"Verifier not supported. Check if you: \\n\\n      1. Are on the right network (Torus testnet/mainnet) \\n\\n      2. Have setup a verifier on dashboard.web3auth.io?\");\n\n              case 16:\n                if (!(errorResult && JSON.stringify(errorResult).includes(\"Verifier + VerifierID has not yet been assigned\"))) {\n                  _context8.next = 26;\n                  break;\n                }\n\n                _context8.next = 19;\n                return keyAssign({\n                  endpoints: endpoints,\n                  torusNodePubs: torusNodePubs,\n                  lastPoint: undefined,\n                  firstPoint: undefined,\n                  verifier: verifier,\n                  verifierId: verifierId,\n                  signerHost: this.signerHost,\n                  network: this.network\n                });\n\n              case 19:\n                _context8.next = 21;\n                return waitKeyLookup(endpoints, verifier, verifierId, 1000);\n\n              case 21:\n                assignResult = _context8.sent;\n                finalKeyResult = assignResult === null || assignResult === void 0 ? void 0 : assignResult.keyResult;\n                isNewKey = true;\n                _context8.next = 31;\n                break;\n\n              case 26:\n                if (!keyResult) {\n                  _context8.next = 30;\n                  break;\n                }\n\n                finalKeyResult = keyResult;\n                _context8.next = 31;\n                break;\n\n              case 30:\n                throw new Error(\"node results do not match at first lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 31:\n                log.debug(\"> torus.js/getPublicAddress\", {\n                  finalKeyResult: finalKeyResult,\n                  isNewKey: isNewKey\n                });\n\n                if (!finalKeyResult) {\n                  _context8.next = 69;\n                  break;\n                }\n\n                _finalKeyResult$keys$2 = finalKeyResult.keys[0], X = _finalKeyResult$keys$2.pub_key_X, Y = _finalKeyResult$keys$2.pub_key_Y;\n\n                if (!this.enableOneKey) {\n                  _context8.next = 57;\n                  break;\n                }\n\n                _context8.prev = 35;\n                _context8.next = 38;\n                return this.getOrSetNonce(X, Y, undefined, !isNewKey);\n\n              case 38:\n                nonceResult = _context8.sent;\n                nonce = new BN(nonceResult.nonce || \"0\", 16);\n                typeOfUser = nonceResult.typeOfUser;\n                _context8.next = 46;\n                break;\n\n              case 43:\n                _context8.prev = 43;\n                _context8.t1 = _context8[\"catch\"](35);\n                throw new GetOrSetNonceError();\n\n              case 46:\n                if (!(nonceResult.typeOfUser === \"v1\")) {\n                  _context8.next = 50;\n                  break;\n                }\n\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic());\n                _context8.next = 55;\n                break;\n\n              case 50:\n                if (!(nonceResult.typeOfUser === \"v2\")) {\n                  _context8.next = 54;\n                  break;\n                }\n\n                if (nonceResult.upgraded) {\n                  // OneKey is upgraded to 2/n, returned address is address of Torus key (postbox key), not tKey\n                  modifiedPubKey = this.ec.keyFromPublic({\n                    x: X,\n                    y: Y\n                  }).getPublic();\n                } else {\n                  modifiedPubKey = this.ec.keyFromPublic({\n                    x: X,\n                    y: Y\n                  }).getPublic().add(this.ec.keyFromPublic({\n                    x: nonceResult.pubNonce.x,\n                    y: nonceResult.pubNonce.y\n                  }).getPublic());\n                  pubNonce = nonceResult.pubNonce;\n                }\n\n                _context8.next = 55;\n                break;\n\n              case 54:\n                throw new Error(\"getOrSetNonce should always return typeOfUser.\");\n\n              case 55:\n                _context8.next = 62;\n                break;\n\n              case 57:\n                typeOfUser = \"v1\";\n                _context8.next = 60;\n                return this.getMetadata({\n                  pub_key_X: X,\n                  pub_key_Y: Y\n                });\n\n              case 60:\n                nonce = _context8.sent;\n                modifiedPubKey = this.ec.keyFromPublic({\n                  x: X,\n                  y: Y\n                }).getPublic().add(this.ec.keyFromPrivate(nonce.toString(16)).getPublic());\n\n              case 62:\n                X = modifiedPubKey.getX().toString(16);\n                Y = modifiedPubKey.getY().toString(16);\n                address = this.generateAddressFromPubKey(modifiedPubKey.getX(), modifiedPubKey.getY());\n                log.debug(\"> torus.js/getPublicAddress\", {\n                  X: X,\n                  Y: Y,\n                  address: address,\n                  typeOfUser: typeOfUser,\n                  nonce: (_nonce = nonce) === null || _nonce === void 0 ? void 0 : _nonce.toString(16),\n                  pubNonce: pubNonce\n                });\n\n                if (isExtended) {\n                  _context8.next = 68;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", address);\n\n              case 68:\n                return _context8.abrupt(\"return\", {\n                  typeOfUser: typeOfUser,\n                  address: address,\n                  X: X,\n                  Y: Y,\n                  metadataNonce: nonce,\n                  pubNonce: pubNonce\n                });\n\n              case 69:\n                throw new Error(\"node results do not match at final lookup \".concat(JSON.stringify(keyResult || {}), \", \").concat(JSON.stringify(errorResult || {})));\n\n              case 70:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[35, 43]]);\n      }));\n\n      function getPublicAddress(_x15, _x16, _x17) {\n        return _getPublicAddress.apply(this, arguments);\n      }\n\n      return getPublicAddress;\n    }()\n    /**\n     * Internal functions for OneKey (OpenLogin v2), only call these functions if you know what you're doing\n     */\n\n  }, {\n    key: \"getOrSetNonce\",\n    value: function () {\n      var _getOrSetNonce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(X, Y, privKey) {\n        var getOnly,\n            data,\n            msg,\n            _args9 = arguments;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                getOnly = _args9.length > 3 && _args9[3] !== undefined ? _args9[3] : false;\n                msg = getOnly ? \"getNonce\" : \"getOrSetNonce\";\n\n                if (privKey) {\n                  data = this.generateMetadataParams(msg, privKey);\n                } else {\n                  data = {\n                    pub_key_X: X,\n                    pub_key_Y: Y,\n                    set_data: {\n                      data: msg\n                    }\n                  };\n                }\n\n                return _context9.abrupt(\"return\", post(\"\".concat(this.metadataHost, \"/get_or_set_nonce\"), data, undefined, {\n                  useAPIKey: true\n                }));\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getOrSetNonce(_x18, _x19, _x20) {\n        return _getOrSetNonce.apply(this, arguments);\n      }\n\n      return getOrSetNonce;\n    }()\n  }, {\n    key: \"getNonce\",\n    value: function () {\n      var _getNonce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(X, Y, privKey) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", this.getOrSetNonce(X, Y, privKey, true));\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getNonce(_x21, _x22, _x23) {\n        return _getNonce.apply(this, arguments);\n      }\n\n      return getNonce;\n    }()\n  }, {\n    key: \"getPostboxKeyFrom1OutOf1\",\n    value: function getPostboxKeyFrom1OutOf1(privKey, nonce) {\n      var privKeyBN = new BN(privKey, 16);\n      var nonceBN = new BN(nonce, 16);\n      return privKeyBN.sub(nonceBN).umod(this.ec.curve.n).toString(\"hex\");\n    }\n  }], [{\n    key: \"enableLogging\",\n    value: function enableLogging() {\n      var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (v) log.enableAll();else log.disableAll();\n    }\n  }, {\n    key: \"setAPIKey\",\n    value: function setAPIKey$1(apiKey) {\n      setAPIKey(apiKey);\n    }\n  }, {\n    key: \"setEmbedHost\",\n    value: function setEmbedHost$1(embedHost) {\n      setEmbedHost(embedHost);\n    }\n  }, {\n    key: \"isGetOrSetNonceError\",\n    value: function isGetOrSetNonceError(err) {\n      return err instanceof GetOrSetNonceError;\n    }\n  }]);\n\n  return Torus;\n}();\n\nexport { GetOrSetNonceError, Torus as default, kCombinations, keccak256, keyAssign, keyLookup, thresholdSame, waitKeyLookup };\n//# sourceMappingURL=torusUtils.esm.js.map\n"]},"metadata":{},"sourceType":"module"}