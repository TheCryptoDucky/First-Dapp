{"ast":null,"code":"import loglevel from 'loglevel';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign, encrypt, decrypt } from '@toruslabs/eccrypto';\nimport { get } from '@toruslabs/http-helpers';\nimport { setupMultiplex, PostMessageStream, SafeEventEmitter, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback } from '@toruslabs/openlogin-jrpc';\nimport { base64url, keccak, safeatob, randomId, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport merge from 'lodash.merge';\nimport pump from 'pump';\nconst modalDOMElementID = \"openlogin-modal\";\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\"\n};\nconst ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\"\n};\nconst OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  DEVELOPMENT: \"development\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\"\n};\nloglevel.setLevel(\"error\");\nvar log = loglevel.getLogger(\"openlogin\");\n\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        resolve();\n      });\n    }\n  });\n}\n\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nasync function whitelistUrl(clientId, appKey, origin) {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n  return base64url.encode(sig);\n}\n\nfunction getHashQueryParams() {\n  let replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const result = {};\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(key => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash));\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(key => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n\n  return result;\n}\n\nfunction awaitReq(id, windowRef) {\n  return new Promise((resolve, reject) => {\n    if (!windowRef) reject(new Error(\"Unable to open window\"));\n    let closedByHandler = false;\n    const closedMonitor = setInterval(() => {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n\n    const handler = ev => {\n      const {\n        pid\n      } = ev.data;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n\n    window.addEventListener(\"message\", handler);\n  });\n}\n\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n\n  return url.toString();\n}\n\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return error && ( // everything except Firefox\n    error.code === 22 || // Firefox\n    error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededErro r\" || // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\n\nconst sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nconst localStorageAvailable = storageAvailable(\"localStorage\");\n\nfunction preloadIframe(url) {\n  try {\n    if (typeof document === \"undefined\") return;\n    const openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.error(error);\n  }\n}\n\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\n\nclass Modal {\n  constructor(modalUrl) {\n    _defineProperty(this, \"modalUrl\", void 0);\n\n    _defineProperty(this, \"iframeElem\", void 0);\n\n    _defineProperty(this, \"initialized\", false);\n\n    _defineProperty(this, \"modalZIndex\", 99999);\n\n    _defineProperty(this, \"mux\", void 0);\n\n    _defineProperty(this, \"verifierStream\", void 0);\n\n    this.modalUrl = modalUrl;\n  }\n\n  async init() {\n    await this.initIFrame(this.modalUrl);\n    this.setupStream();\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.mux = setupMultiplex(new PostMessageStream({\n      name: \"modal_iframe_rpc\",\n      target: \"modal_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.modalUrl).origin\n    }));\n    this.verifierStream = this.mux.createStream(\"verifier\");\n  }\n\n  async initIFrame(src) {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      log.info(\"already initialized, removing previous modal iframe\");\n    }\n\n    this.iframeElem = htmlToElement(\"<iframe\\n        id=\".concat(modalDOMElementID, \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(src, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n\n    this._hideModal();\n\n    document.body.appendChild(this.iframeElem);\n    return new Promise(resolve => {\n      this.iframeElem.onload = () => {\n        this.initialized = true;\n        resolve();\n      };\n    });\n  }\n\n  _showModal() {\n    const style = {};\n    style.display = \"block\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref => {\n      let [k, v] = _ref;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  _hideModal() {\n    const style = {};\n    style.display = \"none\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref2 => {\n      let [k, v] = _ref2;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  async _prompt(clientId, whiteLabel, loginConfig, cb) {\n    this._showModal();\n\n    const modalHandler = chunk => {\n      this._hideModal();\n\n      cb(chunk);\n    };\n\n    handleStream(this.verifierStream, \"data\", modalHandler);\n    this.verifierStream.write({\n      name: \"prompt\",\n      clientId,\n      whiteLabel,\n      loginConfig\n    });\n  }\n\n  async cleanup() {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n\n    this.initialized = false;\n  }\n\n}\n\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", {});\n  }\n\n  getItem(key) {\n    return this.store[key];\n  }\n\n  setItem(key, value) {\n    this.store[key] = value;\n  }\n\n}\n\nclass OpenLoginStore {\n  // eslint-disable-next-line no-use-before-define\n  constructor(storage) {\n    _defineProperty(this, \"storage\", void 0);\n\n    this.storage = storage;\n\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {// Storage is not available\n    }\n  }\n\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new this(localStorageAvailable ? localStorage : new MemoryStore());\n    }\n\n    return this.instance;\n  }\n\n  toJSON() {\n    return this.storage.getItem(storeKey);\n  }\n\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.setItem(storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore() {\n    return JSON.parse(this.storage.getItem(storeKey));\n  }\n\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    return store[key];\n  }\n\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    store[key] = value;\n    this.storage.setItem(storeKey, JSON.stringify(store));\n  }\n\n}\n\n_defineProperty(OpenLoginStore, \"instance\", void 0);\n\nclass Provider extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"iframeElem\", null);\n\n    _defineProperty(this, \"rpcStream\", void 0);\n\n    _defineProperty(this, \"iframeUrl\", void 0);\n\n    _defineProperty(this, \"rpcEngine\", void 0);\n\n    _defineProperty(this, \"initialized\", void 0);\n\n    _defineProperty(this, \"mux\", void 0);\n  }\n\n  init(_ref) {\n    let {\n      iframeElem,\n      iframeUrl\n    } = _ref;\n    this.iframeElem = iframeElem;\n    this.iframeUrl = iframeUrl;\n    this.setupStream();\n    this.initialized = true;\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.rpcStream = new PostMessageStream({\n      name: \"embed_rpc\",\n      target: \"iframe_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.iframeUrl).origin\n    });\n    this.mux = setupMultiplex(this.rpcStream);\n    const JRPCConnection = createStreamMiddleware();\n    pump(JRPCConnection.stream, this.mux.createStream(\"jrpc\"), JRPCConnection.stream, error => {\n      log.error(\"JRPC connection broken\", error);\n    });\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(JRPCConnection.middleware);\n    this.rpcEngine = rpcEngine;\n  }\n\n  cleanup() {\n    this.iframeElem = null;\n    this.initialized = false;\n  }\n\n  _rpcRequest(payload, callback) {\n    if (!payload.jsonrpc) {\n      payload.jsonrpc = \"2.0\";\n    }\n\n    if (!payload.id) {\n      payload.id = randomId();\n    }\n\n    this.rpcEngine.handle(payload, callback);\n  }\n\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\npreloadIframe(\"https://app.openlogin.com/sdk-modal\");\n\nclass OpenLogin {\n  constructor(options) {\n    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig;\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"modal\", void 0);\n\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: () => true // work around for web3\n\n    });\n\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options._iframeUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n\n    this.modal = new Modal(\"\".concat(options._iframeUrl, \"/sdk-modal\"));\n    this.initState(_objectSpread(_objectSpread({}, options), {}, {\n      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : \"\".concat(options._iframeUrl, \"/start\"),\n      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : \"\".concat(options._iframeUrl, \"/popup-window\"),\n      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(window.location.pathname),\n      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,\n      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : {\n        [window.location.origin]: \"\"\n      },\n      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},\n      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {}\n    }));\n  }\n\n  get privKey() {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  initState(options) {\n    this.state = {\n      uxMode: options.uxMode,\n      network: options.network,\n      store: OpenLoginStore.getInstance(),\n      iframeUrl: options._iframeUrl,\n      startUrl: options._startUrl,\n      popupUrl: options._popupUrl,\n      clientId: options.clientId,\n      redirectUrl: options.redirectUrl,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n      originData: options.originData,\n      loginConfig: options.loginConfig,\n      support3PC: !options.no3PC,\n      whiteLabel: options.whiteLabel\n    };\n  }\n\n  async init() {\n    if (this.state.network === OPENLOGIN_NETWORK.TESTNET) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(\"%c WARNING! You are on testnet. Please set network: 'mainnet' in production\", \"color: #FF0000\");\n    }\n\n    if (this.state.support3PC) {\n      await Promise.all([this.modal.init(), this.updateOriginData()]);\n      this.provider.init({\n        iframeElem: this.modal.iframeElem,\n        iframeUrl: this.state.iframeUrl\n      });\n\n      this._syncState(await this._getData());\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n\n      const res = await this._check3PCSupport();\n      this.state.support3PC = !!res.support3PC;\n    } else {\n      await this.updateOriginData();\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n    }\n  }\n\n  async updateOriginData() {\n    const filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n    Object.keys(filteredOriginData).forEach(key => {\n      if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n    });\n    const [whitelist, whiteLabel] = await Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n\n    this._syncState({\n      originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),\n      whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)\n    });\n  }\n\n  async getWhitelist() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelist\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.signed_urls;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async getWhiteLabel() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelabel\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.whiteLabel;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async _fastLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({}, defaultParams), params);\n\n    const res = await this.request({\n      params: [_objectSpread(_objectSpread({}, loginParams), {}, {\n        fastLogin: true\n      })],\n      method: OPENLOGIN_METHOD.LOGIN,\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = res.privKey;\n    return res;\n  }\n\n  async login(params) {\n    if (params !== null && params !== void 0 && params.loginProvider) {\n      return this._selectedLogin(params);\n    }\n\n    return this._modal(params);\n  }\n\n  async _selectedLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({\n      loginProvider: params.loginProvider\n    }, defaultParams), params); // fast login flow\n    // if (this.state.store.get(\"touchIDPreference\") === \"enabled\" && !loginParams.extraLoginOptions?.login_hint) {\n    //   return this._fastLogin(loginParams);\n    // }\n\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGIN,\n      allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      params: [loginParams]\n    });\n    this.state.privKey = res.privKey;\n\n    if (res.store) {\n      this._syncState(res);\n    } else if (this.state.privKey && this.state.support3PC) {\n      this._syncState(await this._getData());\n    }\n\n    return {\n      privKey: this.privKey\n    };\n  }\n\n  async logout() {\n    let logoutParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const params = {}; // defaults\n\n    params.redirectUrl = this.state.redirectUrl;\n    params._clientId = this.state.clientId;\n\n    if (logoutParams.clientId) {\n      params._clientId = logoutParams.clientId;\n    }\n\n    if (logoutParams.fastLogin !== undefined) {\n      params.fastLogin = logoutParams.fastLogin;\n    }\n\n    if (logoutParams.redirectUrl !== undefined) {\n      params.redirectUrl = logoutParams.redirectUrl;\n    }\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGOUT,\n      params: [params],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC, ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = \"\"; // if (!params.fastLogin) this.state.store.set(\"touchIDPreference\", \"disabled\");\n\n    return res;\n  }\n\n  async request(args) {\n    var _params$0$redirectUrl;\n\n    const pid = randomId();\n    let {\n      params\n    } = args; // Note: _origin is added later in postMessageStream for jrpc requests\n    // do not add it here since its used for checking postMessage constraints\n\n    const session = {};\n    if (params.length !== 1) throw new Error(\"request params array should have only one element\");\n    const {\n      startUrl,\n      popupUrl,\n      method,\n      allowedInteractions\n    } = args;\n    if (allowedInteractions.length === 0) throw new Error(\"no allowed interactions\");\n\n    if (this.state.clientId) {\n      session._clientId = this.state.clientId;\n    }\n\n    if (this.privKey) {\n      const userData = {\n        clientId: session._clientId,\n        timestamp: Date.now().toString()\n      };\n      const sig = await sign(Buffer.from(this.privKey, \"hex\"), Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\"));\n      session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n      session._userSig = base64url.encode(sig);\n      session._userData = userData;\n    }\n\n    session._originData = this.state.originData;\n    session._whiteLabelData = this.state.whiteLabel;\n    session._loginConfig = this.state.loginConfig; // add in session data (allow overrides)\n\n    params = [_objectSpread(_objectSpread({}, session), params[0])]; // use JRPC where possible\n\n    if (this.state.support3PC && allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC)) {\n      return this._jrpcRequest({\n        method,\n        params\n      });\n    } // set origin\n\n\n    params[0]._origin = new URL((_params$0$redirectUrl = params[0].redirectUrl) !== null && _params$0$redirectUrl !== void 0 ? _params$0$redirectUrl : this.state.redirectUrl).origin; // preset params\n\n    if (this.state.support3PC) {\n      // set params first if 3PC supported\n      await this._setPIDData(pid, params); // eslint-disable-next-line require-atomic-updates\n\n      params = [{}];\n    }\n\n    if (!startUrl || !popupUrl) {\n      throw new Error(\"no url for redirect / popup flow\");\n    } // method and pid are always in URL hash params\n    // convert params from JSON to base64\n\n\n    if (this.state.uxMode === UX_MODE.REDIRECT) {\n      // if redirects preferred, check for redirect flows first, then check for popup flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return {};\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n    } else {\n      // if popups preferred, check for popup flows first, then check for redirect flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return null;\n      }\n    }\n\n    throw new Error(\"no matching allowed interactions\");\n  }\n\n  async _jrpcRequest(args) {\n    // await this.initialized;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw new Error(\"invalid request args\");\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw new Error(\"invalid request method\");\n    }\n\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error(\"invalid request params\");\n    }\n\n    if (params.length === 0) {\n      params.push({});\n    }\n\n    return new Promise((resolve, reject) => {\n      this.provider._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  async _check3PCSupport() {\n    return this._jrpcRequest({\n      method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n      params: [{\n        _originData: this.state.originData\n      }]\n    });\n  }\n\n  async _setPIDData(pid, data) {\n    await this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.SET_PID_DATA,\n      params: [{\n        pid,\n        data: data[0]\n      }]\n    });\n  }\n\n  async _getData() {\n    return this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.GET_DATA,\n      params: [{}]\n    });\n  }\n\n  _syncState(newState) {\n    if (newState.store) {\n      if (typeof newState.store !== \"object\") {\n        throw new Error(\"expected store to be an object\");\n      }\n\n      Object.keys(newState.store).forEach(key => {\n        // if privKey is available then user is not logged out, but in popup mode store info is not available.\n        // so we don't want to overwrite the local store if privKey is available\n        // and if latest iframe store data is not available\n        if (newState.privKey) {\n          if (newState.store[key]) {\n            this.state.store.set(key, newState.store[key]);\n          }\n        } else {\n          this.state.store.set(key, newState.store[key]);\n        }\n      });\n    }\n\n    const {\n      store\n    } = this.state;\n    this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {\n      store\n    });\n  }\n\n  async _modal(params) {\n    return new Promise((resolve, reject) => {\n      this.modal._prompt(this.state.clientId, this.state.whiteLabel, this.state.loginConfig, async chunk => {\n        if (chunk.cancel) {\n          reject(new Error(\"user canceled login\"));\n        } else {\n          try {\n            const selectedLoginResponse = await this._selectedLogin(merge(params, chunk));\n            resolve(selectedLoginResponse);\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n  }\n\n  async _cleanup() {\n    await this.modal.cleanup();\n    this.provider.cleanup();\n  }\n\n  async encrypt(message, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in encrypt\");\n      }\n    }\n\n    return encrypt(getPublic(Buffer.from(privKey, \"hex\")), message);\n  }\n\n  async decrypt(ciphertext, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in decrypt\");\n      }\n    }\n\n    return decrypt(Buffer.from(privKey, \"hex\"), ciphertext);\n  }\n\n  async getUserInfo() {\n    if (this.privKey) {\n      const storeData = this.state.store.getStore();\n      const userInfo = {\n        email: storeData.email || \"\",\n        name: storeData.name || \"\",\n        profileImage: storeData.profileImage || \"\",\n        aggregateVerifier: storeData.aggregateVerifier || \"\",\n        verifier: storeData.verifier || \"\",\n        verifierId: storeData.verifierId || \"\",\n        typeOfLogin: storeData.typeOfLogin || \"\",\n        dappShare: storeData.dappShare || \"\"\n      };\n      return userInfo;\n    }\n\n    throw new Error(\"user should be logged in to fetch userInfo\");\n  }\n\n  async getEncodedLoginUrl(loginParams) {\n    const {\n      redirectUrl\n    } = loginParams;\n    const {\n      clientId\n    } = this.state;\n\n    if (!this.state.originData[origin]) {\n      await this.updateOriginData();\n    }\n\n    const dataObject = _objectSpread({\n      _clientId: clientId,\n      _origin: new URL(redirectUrl).origin,\n      _originData: this.state.originData,\n      redirectUrl\n    }, loginParams);\n\n    const b64Params = jsonToBase64(dataObject);\n    const hashParams = {\n      b64Params,\n      _method: \"openlogin_login\"\n    };\n    return constructURL({\n      baseURL: \"\".concat(this.state.iframeUrl, \"/start\"),\n      hash: hashParams\n    });\n  }\n\n}\n\nexport { ALLOWED_INTERACTIONS, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_METHOD, OPENLOGIN_NETWORK, OpenLoginStore, Provider, UX_MODE, awaitReq, constructURL, OpenLogin as default, documentReady, getHashQueryParams, getPopupFeatures, htmlToElement, localStorageAvailable, log as loglevel, modalDOMElementID, preloadIframe, sessionStorageAvailable, storageAvailable, storeKey, whitelistUrl };","map":{"version":3,"sources":["../src/constants.ts","../src/loglevel.ts","../src/utils.ts","../src/Modal.ts","../src/MemoryStore.ts","../src/OpenLoginStore.ts","../src/Provider.ts","../src/OpenLogin.ts"],"names":["modalDOMElementID","storeKey","UX_MODE","POPUP","REDIRECT","OPENLOGIN_METHOD","LOGIN","LOGOUT","CHECK_3PC_SUPPORT","SET_PID_DATA","GET_DATA","ALLOWED_INTERACTIONS","JRPC","OPENLOGIN_NETWORK","MAINNET","TESTNET","CYAN","DEVELOPMENT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","WEBAUTHN","JWT","MFA_LEVELS","DEFAULT","OPTIONAL","MANDATORY","NONE","loglevel","resolve","document","htmlToElement","html","template","window","trimmedHtml","appKeyBuf","Buffer","appKey","base64url","getPublic","sig","sign","keccak","replaceUrl","result","url","key","queryResult","queryParams","JSON","safeatob","Object","log","hash","hashUrl","hashResult","hashParams","cleanUrl","reject","closedByHandler","closedMonitor","setInterval","windowRef","clearInterval","handler","ev","pid","id","query","h","constructURL","storageExists","storageLength","storage","x","error","sessionStorageAvailable","storageAvailable","localStorageAvailable","openloginIframeHtml","getPopupFeatures","dualScreenLeft","dualScreenTop","w","width","height","systemZoom","left","Math","top","features","handleStream","handlerWrapper","chunk","handle","Modal","constructor","init","setupStream","setupMultiplex","name","target","targetWindow","targetOrigin","origin","initIFrame","documentReady","documentIFrameElem","_showModal","style","k","_hideModal","_prompt","modalHandler","cb","loginConfig","cleanup","MemoryStore","getItem","setItem","OpenLoginStore","getInstance","toJSON","resetStore","currStore","getStore","get","store","set","iframeUrl","JRPCConnection","createStreamMiddleware","pump","rpcEngine","createIdRemapMiddleware","_rpcRequest","payload","randomId","preloadIframe","deleteProperty","options","no3PC","_iframeUrl","_startUrl","_popupUrl","redirectUrl","uxMode","replaceUrlOnRedirect","originData","whiteLabel","privKey","initState","network","startUrl","popupUrl","clientId","support3PC","console","Promise","iframeElem","getHashQueryParams","res","updateOriginData","filteredOriginData","whitelist","getWhitelist","getWhiteLabel","_fastLogin","defaultParams","loginParams","params","fastLogin","method","allowedInteractions","login","_selectedLogin","loginProvider","logout","logoutParams","request","session","userData","timestamp","Date","setTimeout","baseURL","b64Params","jsonToBase64","_pid","_method","u","awaitReq","_jrpcRequest","Array","getRpcPromiseCallback","_check3PCSupport","_originData","_setPIDData","data","_getData","_syncState","newState","_modal","selectedLoginResponse","merge","_cleanup","encrypt","decrypt","getUserInfo","storeData","userInfo","email","profileImage","aggregateVerifier","verifier","verifierId","typeOfLogin","dappShare","getEncodedLoginUrl","dataObject","_clientId","_origin"],"mappings":";;;;;;;;AAGO,MAAMA,iBAAiB,GAAvB,iBAAA;AAEA,MAAMC,QAAQ,GAAd,iBAAA;AASA,MAAMC,OAAO,GAAG;EACrBC,KAAK,EADgB,OAAA;EAErBC,QAAQ,EAAE;AAFW,CAAhB;AAOA,MAAMC,gBAAgB,GAAG;EAC9BC,KAAK,EADyB,iBAAA;EAE9BC,MAAM,EAFwB,kBAAA;EAG9BC,iBAAiB,EAHa,6BAAA;EAI9BC,YAAY,EAJkB,wBAAA;EAK9BC,QAAQ,EAAE;AALoB,CAAzB;AAaA,MAAMC,oBAAoB,GAAG;EAClCR,KAAK,EAD6B,OAAA;EAElCC,QAAQ,EAF0B,UAAA;EAGlCQ,IAAI,EAAE;AAH4B,CAA7B;AAoDA,MAAMC,iBAAiB,GAAG;EAC/BC,OAAO,EADwB,SAAA;EAE/BC,OAAO,EAFwB,SAAA;EAG/BC,IAAI,EAH2B,MAAA;EAI/BC,WAAW,EAAE;AAJkB,CAA1B;AAuHA,MAAMC,cAAc,GAAG;EAC5BC,MAAM,EADsB,QAAA;EAE5BC,QAAQ,EAFoB,UAAA;EAG5BC,MAAM,EAHsB,QAAA;EAI5BC,OAAO,EAJqB,SAAA;EAK5BC,MAAM,EALsB,QAAA;EAM5BC,KAAK,EANuB,OAAA;EAO5BC,IAAI,EAPwB,MAAA;EAQ5BC,MAAM,EARsB,QAAA;EAS5BC,KAAK,EATuB,OAAA;EAU5BC,QAAQ,EAVoB,UAAA;EAW5BC,OAAO,EAXqB,SAAA;EAY5BC,KAAK,EAZuB,OAAA;EAa5BC,MAAM,EAbsB,QAAA;EAc5BC,kBAAkB,EAdU,oBAAA;EAe5BC,QAAQ,EAfoB,UAAA;EAgB5BC,GAAG,EAAE;AAhBuB,CAAvB;AA2BA,MAAMC,UAAU,GAAG;EACxBC,OAAO,EADiB,SAAA;EAExBC,QAAQ,EAFgB,UAAA;EAGxBC,SAAS,EAHe,WAAA;EAIxBC,IAAI,EAAE;AAJkB,CAAnB;ACtOPC,QAAQ,CAARA,QAAAA,CAAAA,OAAAA;AAEA,IAAA,GAAA,GAAeA,QAAQ,CAARA,SAAAA,CAAf,WAAeA,CAAf;;ACEO,eAAA,aAAA,GAA4B;EACjC,OAAO,IAAA,OAAA,CAAmBC,OAAD,IAAY;IACnC,IAAIC,QAAQ,CAARA,UAAAA,KAAJ,SAAA,EAAuC;MACrCD,OAAO;IADT,CAAA,MAEO;MACLC,QAAQ,CAARA,gBAAAA,CAAAA,kBAAAA,EAA8C,MAAK;QACjDD,OAAO;MADTC,CAAAA;IAGD;EAPH,CAAO,CAAP;AASD;;AAEYC,MAAAA,aAAa,GAAuBC,IAApB,IAAuC;EAClE,MAAMC,QAAQ,GAAGC,MAAM,CAANA,QAAAA,CAAAA,aAAAA,CAAjB,UAAiBA,CAAjB;EACA,MAAMC,WAAW,GAAGH,IAAI,CAF0C,IAE9CA,EAApB,CAFkE,CAAA;;EAGlEC,QAAQ,CAARA,SAAAA,GAAAA,WAAAA;EACA,OAAOA,QAAQ,CAARA,OAAAA,CAAP,UAAA;AAJK,CAAMF;;AAON,eAAA,YAAA,CAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAA4E;EACjF,MAAMK,SAAS,GAAGC,MAAM,CAANA,IAAAA,CAAYC,MAAM,CAANA,QAAAA,CAAAA,EAAAA,EAAZD,GAAYC,CAAZD,EAAlB,KAAkBA,CAAlB;EACA,IAAIE,SAAS,CAATA,MAAAA,CAAiBC,SAAS,CAA1BD,SAA0B,CAA1BA,MAAJ,QAAA,EAAyD,MAAM,IAAA,KAAA,CAAN,iBAAM,CAAN;EACzD,MAAME,GAAG,GAAG,MAAMC,IAAI,CAAA,SAAA,EAAYL,MAAM,CAANA,IAAAA,CAAYM,MAAM,CAANA,WAAM,CAANA,CAAAA,MAAAA,CAAAA,MAAAA,EAAAA,MAAAA,CAAZN,KAAYM,CAAZN,EAAlC,KAAkCA,CAAZ,CAAtB;EACA,OAAOE,SAAS,CAATA,MAAAA,CAAP,GAAOA,CAAP;AACD;;AAEe,SAAA,kBAAA,GAAqC;EAAA,IAAlBK,UAAkB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAL,KAAK;EACnD,MAAMC,MAAM,GAAZ,EAAA;EAEA,MAAMC,GAAG,GAAG,IAAA,GAAA,CAAQZ,MAAM,CAANA,QAAAA,CAApB,IAAY,CAAZ;EACAY,GAAG,CAAHA,YAAAA,CAAAA,OAAAA,CAAyB,CAAA,KAAA,EAAA,GAAA,KAAe;IACtC,IAAIC,GAAG,KAAP,QAAA,EAAsB;MACpBF,MAAM,CAANA,GAAM,CAANA,GAAAA,KAAAA;IACD;EAHHC,CAAAA;EAKA,MAAME,WAAW,GAAGF,GAAG,CAAHA,YAAAA,CAAAA,GAAAA,CAApB,QAAoBA,CAApB;;EACA,IAAA,WAAA,EAAiB;IACf,IAAI;MACF,MAAMG,WAAW,GAAGC,IAAI,CAAJA,KAAAA,CAAWC,QAAQ,CAAvC,WAAuC,CAAnBD,CAApB;MACAE,MAAM,CAANA,IAAAA,CAAAA,WAAAA,EAAAA,OAAAA,CAAkCL,GAAD,IAAQ;QACvCF,MAAM,CAANA,GAAM,CAANA,GAAcI,WAAW,CAAzBJ,GAAyB,CAAzBA;MADFO,CAAAA;IAFF,CAAA,CAKE,OAAA,KAAA,EAAc;MACdC,GAAG,CAAHA,KAAAA,CAAAA,KAAAA;IACD;EACF;;EAED,MAAMC,IAAI,GAAGR,GAAG,CAAHA,IAAAA,CAAAA,SAAAA,CAAb,CAAaA,CAAb;EACA,MAAMS,OAAO,GAAG,IAAA,GAAA,CAAWrB,GAAAA,MAAAA,CAAAA,MAAM,CAANA,QAAAA,CAAX,MAAWA,EAA2BoB,IAA3BpB,EAA2BoB,MAA3BpB,CAA3B,IAA2BA,CAAX,CAAhB;EACAqB,OAAO,CAAPA,YAAAA,CAAAA,OAAAA,CAA6B,CAAA,KAAA,EAAA,GAAA,KAAe;IAC1C,IAAIR,GAAG,KAAP,QAAA,EAAsB;MACpBF,MAAM,CAANA,GAAM,CAANA,GAAAA,KAAAA;IACD;EAHHU,CAAAA;EAKA,MAAMC,UAAU,GAAGD,OAAO,CAAPA,YAAAA,CAAAA,GAAAA,CAAnB,QAAmBA,CAAnB;;EAEA,IAAA,UAAA,EAAgB;IACd,IAAI;MACF,MAAME,UAAU,GAAGP,IAAI,CAAJA,KAAAA,CAAWC,QAAQ,CAAtC,UAAsC,CAAnBD,CAAnB;MACAE,MAAM,CAANA,IAAAA,CAAAA,UAAAA,EAAAA,OAAAA,CAAiCL,GAAD,IAAQ;QACtCF,MAAM,CAANA,GAAM,CAANA,GAAcY,UAAU,CAAxBZ,GAAwB,CAAxBA;MADFO,CAAAA;IAFF,CAAA,CAKE,OAAA,KAAA,EAAc;MACdC,GAAG,CAAHA,KAAAA,CAAAA,KAAAA;IACD;EACF;;EAED,IAAA,UAAA,EAAgB;IACd,MAAMK,QAAQ,GAAGxB,MAAM,CAANA,QAAAA,CAAAA,MAAAA,GAAyBA,MAAM,CAANA,QAAAA,CAA1C,QAAA;IACAA,MAAM,CAANA,OAAAA,CAAAA,YAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAAAA,QAAAA;EACD;;EAED,OAAA,MAAA;AACD;;AAEe,SAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAyC;EACvD,OAAO,IAAA,OAAA,CAAY,CAAA,OAAA,EAAA,MAAA,KAAoB;IACrC,IAAI,CAAJ,SAAA,EAAgByB,MAAM,CAAC,IAAA,KAAA,CAAPA,uBAAO,CAAD,CAANA;IAChB,IAAIC,eAAe,GAAnB,KAAA;IACA,MAAMC,aAAa,GAAGC,WAAW,CAAC,MAAK;MACrC,IAAI,CAAA,eAAA,IAAoBC,SAAS,CAAjC,MAAA,EAA0C;QACxCC,aAAa,CAAbA,aAAa,CAAbA;QACAL,MAAM,CAAC,IAAA,KAAA,CAAPA,mBAAO,CAAD,CAANA;MACD;IAJ8B,CAAA,EAAjC,GAAiC,CAAjC;;IAMA,MAAMM,OAAO,GAAIC,EAAD,IAA4D;MAC1E,MAAM;QAAEC;MAAF,IAAUD,EAAE,CAAlB,IAAA;MACA,IAAIE,EAAE,KAAN,GAAA,EAAgB;MAChBlC,MAAM,CAANA,mBAAAA,CAAAA,SAAAA,EAAAA,OAAAA;MACA0B,eAAe,GAAfA,IAAAA;MACAI,aAAa,CAAbA,aAAa,CAAbA;MACAD,SAAS,CAATA,KAAAA;;MACA,IAAIG,EAAE,CAAFA,IAAAA,CAAAA,IAAAA,IAAgBA,EAAE,CAAFA,IAAAA,CAAAA,IAAAA,CAApB,KAAA,EAAwC;QACtCP,MAAM,CAAC,IAAA,KAAA,CAAUO,EAAE,CAAFA,IAAAA,CAAAA,IAAAA,CAAjBP,KAAO,CAAD,CAANA;MADF,CAAA,MAEO;QACL9B,OAAO,CAACqC,EAAE,CAAFA,IAAAA,CAARrC,IAAO,CAAPA;MACD;IAXH,CAAA;;IAcAK,MAAM,CAANA,gBAAAA,CAAAA,SAAAA,EAAAA,OAAAA;EAvBF,CAAO,CAAP;AAyBD;;AAEK,SAAA,YAAA,CAAA,MAAA,EAAmH;EACvH,MAAM;IAAA,OAAA;IAAA,KAAA;IAAkBoB;EAAlB,IAAN,MAAA;EAEA,MAAMR,GAAG,GAAG,IAAA,GAAA,CAAZ,OAAY,CAAZ;;EACA,IAAA,KAAA,EAAW;IACTM,MAAM,CAANA,IAAAA,CAAAA,KAAAA,EAAAA,OAAAA,CAA4BL,GAAD,IAAQ;MACjCD,GAAG,CAAHA,YAAAA,CAAAA,MAAAA,CAAAA,GAAAA,EAA6BuB,KAAK,CAAlCvB,GAAkC,CAAlCA;IADFM,CAAAA;EAGD;;EACD,IAAA,IAAA,EAAU;IACR,MAAMkB,CAAC,GAAG,IAAA,GAAA,CAAQC,YAAY,CAAC;MAAA,OAAA;MAAWF,KAAK,EAAEf;IAAlB,CAAD,CAApB,EAAA,YAAA,CAAV,QAAU,EAAV;IACAR,GAAG,CAAHA,IAAAA,GAAAA,CAAAA;EACD;;EACD,OAAOA,GAAG,CAAV,QAAOA,EAAP;AACD;;AAEK,SAAA,gBAAA,CAAA,IAAA,EAAuC;EAC3C,IAAI0B,aAAa,GAAjB,KAAA;EACA,IAAIC,aAAa,GAAjB,CAAA;EACA,IAAA,OAAA;;EACA,IAAI;IACFC,OAAO,GAAGxC,MAAM,CAAhBwC,IAAgB,CAAhBA;IACAF,aAAa,GAAbA,IAAAA;IACAC,aAAa,GAAGC,OAAO,CAAvBD,MAAAA;IACA,MAAME,CAAC,GAAP,kBAAA;IACAD,OAAO,CAAPA,OAAAA,CAAAA,CAAAA,EAAAA,CAAAA;IACAA,OAAO,CAAPA,UAAAA,CAAAA,CAAAA;IACA,OAAA,IAAA;EAPF,CAAA,CAQE,OAAA,KAAA,EAAc;IACd,OACEE,KAAK,MAAA;IAEJA,KAAK,CAALA,IAAAA,KAAAA,EAAAA,IAAAA;IAECA,KAAK,CAALA,IAAAA,KAFDA,IAAAA,IAAAA;IAIC;IACAA,KAAK,CAALA,IAAAA,KALDA,qBAAAA,IAAAA;IAOCA,KAAK,CAALA,IAAAA,KATFA,4BAAK,CAALA,IAAAA;IAAAA,aAAAA,IAYAH,aAAa,KAbf,CAAA;EAeD;AACF;;MAEYI,uBAAuB,GAAGC,gBAAgB,CAAhD,gBAAgD,C;MAC1CC,qBAAqB,GAAGD,gBAAgB,CAA9C,cAA8C,C;;AAE/C,SAAA,aAAA,CAAA,GAAA,EAAmC;EACvC,IAAI;IACF,IAAI,OAAA,QAAA,KAAJ,WAAA,EAAqC;IACrC,MAAME,mBAAmB,GAAGlD,QAAQ,CAARA,aAAAA,CAA5B,MAA4BA,CAA5B;IACAkD,mBAAmB,CAAnBA,IAAAA,GAAAA,GAAAA;IACAA,mBAAmB,CAAnBA,WAAAA,GAAAA,WAAAA;IACAA,mBAAmB,CAAnBA,IAAAA,GAAAA,WAAAA;IACAA,mBAAmB,CAAnBA,GAAAA,GAAAA,UAAAA;;IACA,IAAIA,mBAAmB,CAAnBA,OAAAA,IAA+BA,mBAAmB,CAAnBA,OAAAA,CAAnC,QAAA,EAAyE;MACvE,IAAIA,mBAAmB,CAAnBA,OAAAA,CAAAA,QAAAA,CAAJ,UAAIA,CAAJ,EAAsD;QACpDlD,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAAAA,mBAAAA;MACD;IACF;EAXH,CAAA,CAYE,OAAA,KAAA,EAAc;IACduB,GAAG,CAAHA,KAAAA,CAAAA,KAAAA;EACD;AACF;;SAEe4B,gB,GAAgB;EAC9B;EACA,MAAMC,cAAc,GAAGhD,MAAM,CAANA,UAAAA,KAAAA,SAAAA,GAAkCA,MAAM,CAAxCA,UAAAA,GAAsDA,MAAM,CAAnF,OAAA;EACA,MAAMiD,aAAa,GAAGjD,MAAM,CAANA,SAAAA,KAAAA,SAAAA,GAAiCA,MAAM,CAAvCA,SAAAA,GAAoDA,MAAM,CAAhF,OAAA;EAEA,MAAMkD,CAAC,GAAP,IAAA;EACA,MAAMd,CAAC,GAAP,GAAA;EAEA,MAAMe,KAAK,GAAGnD,MAAM,CAANA,UAAAA,GACVA,MAAM,CADIA,UAAAA,GAEVJ,QAAQ,CAARA,eAAAA,CAAAA,WAAAA,GACAA,QAAQ,CAARA,eAAAA,CADAA,WAAAA,GAEAI,MAAM,CAANA,MAAAA,CAJJ,KAAA;EAMA,MAAMoD,MAAM,GAAGpD,MAAM,CAANA,WAAAA,GACXA,MAAM,CADKA,WAAAA,GAEXJ,QAAQ,CAARA,eAAAA,CAAAA,YAAAA,GACAA,QAAQ,CAARA,eAAAA,CADAA,YAAAA,GAEAI,MAAM,CAANA,MAAAA,CAJJ,MAAA;EAMA,MAAMqD,UAAU,GApBc,CAoB9B,CApB8B,CAAA;;EAsB9B,MAAMC,IAAI,GAAGC,IAAI,CAAJA,GAAAA,CAAS,CAACJ,KAAK,GAAN,CAAA,IAAA,CAAA,GAAA,UAAA,GAAtB,cAAaI,CAAb;EACA,MAAMC,GAAG,GAAGD,IAAI,CAAJA,GAAAA,CAAS,CAACH,MAAM,GAAP,CAAA,IAAA,CAAA,GAAA,UAAA,GAArB,aAAYG,CAAZ;EACA,MAAME,QAAQ,GAAA,6DAAA,MAAA,CAAgErB,CAAC,GAAjE,UAAA,EAAA,SAAA,EAAA,MAAA,CAAwFc,CAAC,GAAzF,UAAA,EAAA,OAAA,EAAA,MAAA,CAAA,GAAA,EAAA,QAAA,EAAA,MAAA,CAAd,IAAc,CAAd;EACA,OAAA,QAAA;AACD;;ACrMM,MAAMQ,YAAY,GAAG,CAAA,MAAA,EAAA,SAAA,EAAA,OAAA,KAAkF;EAC5G,MAAMC,cAAc,GAAIC,KAAD,IAAmB;IACxC7B,OAAO,CAAPA,KAAO,CAAPA;IACA8B,MAAM,CAANA,cAAAA,CAAAA,SAAAA,EAAAA,cAAAA;EAFF,CAAA;;EAIAA,MAAM,CAANA,EAAAA,CAAAA,SAAAA,EAAAA,cAAAA;AALK,CAAA;;MAQMC,K,CAAK;EAahBC,WAAAA,CAAAA,QAAAA,EAA4B;IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EARd,KAQc,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EANd,KAMc,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,KAAA,CAAA,CAAA;;IAC1B,KAAA,QAAA,GAAA,QAAA;EACD;;EAES,MAAJC,IAAI,GAAA;IACR,MAAM,KAAA,UAAA,CAAgB,KAAtB,QAAM,CAAN;IACA,KAAA,WAAA;EACD;;EAEDC,WAAW,GAAA;IACT,IAAI,KAAA,UAAA,KAAJ,IAAA,EAA8B,MAAM,IAAA,KAAA,CAAN,gBAAM,CAAN;IAC9B,KAAA,GAAA,GAAWC,cAAc,CACvB,IAAA,iBAAA,CAAsB;MACpBC,IAAI,EADgB,kBAAA;MAEpBC,MAAM,EAFc,WAAA;MAGpBC,YAAY,EAAE,KAAA,UAAA,CAHM,aAAA;MAIpBC,YAAY,EAAE,IAAA,GAAA,CAAQ,KAAR,QAAA,EAAuBC;IAJjB,CAAtB,CADuB,CAAzB;IAQA,KAAA,cAAA,GAAsB,KAAA,GAAA,CAAA,YAAA,CAAtB,UAAsB,CAAtB;EACD;;EAEe,MAAVC,UAAU,CAAA,GAAA,EAAY;IAC1B,MAAMC,aAAN,EAAA;IACA,MAAMC,kBAAkB,GAAG9E,QAAQ,CAARA,cAAAA,CAA3B,iBAA2BA,CAA3B;;IACA,IAAA,kBAAA,EAAwB;MACtB8E,kBAAkB,CAAlBA,MAAAA;MACAvD,GAAG,CAAHA,IAAAA,CAAAA,qDAAAA;IACD;;IACD,KAAA,UAAA,GAAkBtB,aAAa,CAAA,uBAAA,MAAA,CAAA,iBAAA,EAAA,iDAAA,EAAA,MAAA,CAAA,GAAA,EAAA,qJAAA,EAAA,MAAA,CAM8B,KAAA,WAAA,CAN9B,QAM8B,EAN9B,EAA/B,sBAA+B,CAAA,CAA/B;;IASA,KAAA,UAAA;;IACAD,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAA0B,KAA1BA,UAAAA;IACA,OAAO,IAAA,OAAA,CAAmBD,OAAD,IAAY;MACnC,KAAA,UAAA,CAAA,MAAA,GAAyB,MAAK;QAC5B,KAAA,WAAA,GAAA,IAAA;QACAA,OAAO;MAFT,CAAA;IADF,CAAO,CAAP;EAMD;;EAEDgF,UAAU,GAAA;IACR,MAAMC,KAAK,GAAX,EAAA;IACAA,KAAK,CAALA,OAAAA,GAAAA,OAAAA;IACAA,KAAK,CAALA,QAAAA,GAAAA,OAAAA;IACAA,KAAK,CAALA,KAAAA,GAAAA,MAAAA;IACAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;IACAA,KAAK,CAALA,GAAAA,GAAAA,KAAAA;IACAA,KAAK,CAALA,KAAAA,GAAAA,KAAAA;IACAA,KAAK,CAALA,IAAAA,GAAAA,KAAAA;IACAA,KAAK,CAALA,MAAAA,GAAAA,KAAAA;IACAA,KAAK,CAALA,MAAAA,GAAAA,GAAAA;IACAA,KAAK,CAALA,SAAK,CAALA,GAAmB,KAAnBA,WAAAA;IACA,KAAA,UAAA,CAAA,YAAA,CAAA,OAAA,EAEE,MAAM,CAAN,OAAA,CAAA,KAAA,EAAA,GAAA,CACO,IAAA,IAAA;MAAA,IAAC,CAAA,CAAA,EAAD,CAAC,IAAD,IAAA;MAAA,OAAeC,GAAAA,MAAAA,CAAf,CAAeA,EAAf,GAAeA,EAAf,MAAeA,CAAf,CAAeA,CAAf;IADP,CAAA,EAAA,IAAA,CAFF,GAEE,CAFF;EAMD;;EAEDC,UAAU,GAAA;IACR,MAAMF,KAAK,GAAX,EAAA;IACAA,KAAK,CAALA,OAAAA,GAAAA,MAAAA;IACAA,KAAK,CAALA,QAAAA,GAAAA,OAAAA;IACAA,KAAK,CAALA,KAAAA,GAAAA,MAAAA;IACAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;IACAA,KAAK,CAALA,GAAAA,GAAAA,KAAAA;IACAA,KAAK,CAALA,KAAAA,GAAAA,KAAAA;IACAA,KAAK,CAALA,IAAAA,GAAAA,KAAAA;IACAA,KAAK,CAALA,MAAAA,GAAAA,KAAAA;IACAA,KAAK,CAALA,MAAAA,GAAAA,GAAAA;IACAA,KAAK,CAALA,SAAK,CAALA,GAAmB,KAAnBA,WAAAA;IACA,KAAA,UAAA,CAAA,YAAA,CAAA,OAAA,EAEE,MAAM,CAAN,OAAA,CAAA,KAAA,EAAA,GAAA,CACO,KAAA,IAAA;MAAA,IAAC,CAAA,CAAA,EAAD,CAAC,IAAD,KAAA;MAAA,OAAeC,GAAAA,MAAAA,CAAf,CAAeA,EAAf,GAAeA,EAAf,MAAeA,CAAf,CAAeA,CAAf;IADP,CAAA,EAAA,IAAA,CAFF,GAEE,CAFF;EAMD;;EAEY,MAAPE,OAAO,CAAA,QAAA,EAAA,UAAA,EAAA,WAAA,EAAA,EAAA,EAA8G;IACzH,KAAA,UAAA;;IACA,MAAMC,YAAY,GAAIpB,KAAD,IAAU;MAC7B,KAAA,UAAA;;MACAqB,EAAE,CAAFA,KAAE,CAAFA;IAFF,CAAA;;IAIAvB,YAAY,CAAC,KAAD,cAAA,EAAA,MAAA,EAAZA,YAAY,CAAZA;IACA,KAAA,cAAA,CAAA,KAAA,CAA0B;MACxBS,IAAI,EADoB,QAAA;MAAA,QAAA;MAAA,UAAA;MAIxBe;IAJwB,CAA1B;EAMD;;EAEY,MAAPC,OAAO,GAAA;IACX,MAAMV,aAAN,EAAA;IACA,MAAMC,kBAAkB,GAAG9E,QAAQ,CAARA,cAAAA,CAA3B,iBAA2BA,CAA3B;;IACA,IAAA,kBAAA,EAAwB;MACtB8E,kBAAkB,CAAlBA,MAAAA;MACA,KAAA,UAAA,GAAA,IAAA;IACD;;IACD,KAAA,WAAA,GAAA,KAAA;EACD;;AA5He;;MCZLU,W,CAAW;EAAA,WAAA,GAAA;IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,EAAA,CAAA;EAAA;;EAGtBC,OAAO,CAAA,GAAA,EAAY;IACjB,OAAO,KAAA,KAAA,CAAP,GAAO,CAAP;EACD;;EAEDC,OAAO,CAAA,GAAA,EAAA,KAAA,EAA2B;IAChC,KAAA,KAAA,CAAA,GAAA,IAAA,KAAA;EACD;;AATqB;;ACGV,MAAA,cAAA,CAAqB;EACjC;EAKAvB,WAAAA,CAAAA,OAAAA,EAAmC;IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;;IACjC,KAAA,OAAA,GAAA,OAAA;;IACA,IAAI;MACF,IAAI,CAACvB,OAAO,CAAPA,OAAAA,CAAL,QAAKA,CAAL,EAAgC;QAC9B,KAAA,UAAA;MACD;IAHH,CAAA,CAIE,OAAA,KAAA,EAAc,CAAA;IAEf;EACF;;EAEiB,OAAXgD,WAAW,GAAA;IAChB,IAAI,CAAC,KAAL,QAAA,EAAoB;MAClB,KAAA,QAAA,GAAgB,IAAA,IAAA,CAAS3C,qBAAqB,GAAA,YAAA,GAAkB,IAAhE,WAAgE,EAAhD,CAAhB;IACD;;IACD,OAAO,KAAP,QAAA;EACD;;EAED4C,MAAM,GAAA;IACJ,OAAO,KAAA,OAAA,CAAA,OAAA,CAAP,QAAO,CAAP;EACD;;EAEDC,UAAU,GAAA;IACR,MAAMC,SAAS,GAAG,KAAlB,QAAkB,EAAlB;IACA,KAAA,OAAA,CAAA,OAAA,CAAA,QAAA,EAA+B3E,IAAI,CAAJA,SAAAA,CAA/B,EAA+BA,CAA/B;IACA,OAAA,SAAA;EACD;;EAED4E,QAAQ,GAAA;IACN,OAAO5E,IAAI,CAAJA,KAAAA,CAAW,KAAA,OAAA,CAAA,OAAA,CAAlB,QAAkB,CAAXA,CAAP;EACD;;EAED6E,GAAG,CAAA,GAAA,EAAe;IAChB,MAAMC,KAAK,GAAG9E,IAAI,CAAJA,KAAAA,CAAW,KAAA,OAAA,CAAA,OAAA,CAAzB,QAAyB,CAAXA,CAAd;IACA,OAAO8E,KAAK,CAAZ,GAAY,CAAZ;EACD;;EAEDC,GAAG,CAAA,GAAA,EAAA,KAAA,EAAyB;IAC1B,MAAMD,KAAK,GAAG9E,IAAI,CAAJA,KAAAA,CAAW,KAAA,OAAA,CAAA,OAAA,CAAzB,QAAyB,CAAXA,CAAd;IACA8E,KAAK,CAALA,GAAK,CAALA,GAAAA,KAAAA;IACA,KAAA,OAAA,CAAA,OAAA,CAAA,QAAA,EAA+B9E,IAAI,CAAJA,SAAAA,CAA/B,KAA+BA,CAA/B;EACD;;AA/CgC;;gBAAduE,c,EAAAA,U,EAAAA,KAAAA,C;;ACWA,MAAA,QAAA,SAAA,gBAAA,CAAiC;EAAA,WAAA,GAAA;IAAA,MAAA,GAAA,SAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,IAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA;EAAA;;EAapDvB,IAAI,CAAgF,IAAhF,EAAgF;IAAA,IAA/E;MAAA,UAAA;MAAcgC;IAAd,IAA+E,IAAA;IAClF,KAAA,UAAA,GAAA,UAAA;IACA,KAAA,SAAA,GAAA,SAAA;IACA,KAAA,WAAA;IACA,KAAA,WAAA,GAAA,IAAA;EACD;;EAED/B,WAAW,GAAA;IACT,IAAI,KAAA,UAAA,KAAJ,IAAA,EAA8B,MAAM,IAAA,KAAA,CAAN,gBAAM,CAAN;IAC9B,KAAA,SAAA,GAAiB,IAAA,iBAAA,CAAsB;MACrCE,IAAI,EADiC,WAAA;MAErCC,MAAM,EAF+B,YAAA;MAGrCC,YAAY,EAAE,KAAA,UAAA,CAHuB,aAAA;MAIrCC,YAAY,EAAE,IAAA,GAAA,CAAQ,KAAR,SAAA,EAAwBC;IAJD,CAAtB,CAAjB;IAOA,KAAA,GAAA,GAAWL,cAAc,CAAC,KAA1B,SAAyB,CAAzB;IAEA,MAAM+B,cAAc,GAAGC,sBAAvB,EAAA;IACAC,IAAI,CACFF,cAAc,CADZ,MAAA,EAEF,KAAA,GAAA,CAAA,YAAA,CAFE,MAEF,CAFE,EAGFA,cAAc,CAHZ,MAAA,EAIDvD,KAAD,IAAU;MACRvB,GAAG,CAAHA,KAAAA,CAAAA,wBAAAA,EAAAA,KAAAA;IALJgF,CAAI,CAAJA;IASA,MAAMC,SAAS,GAAG,IAAlB,UAAkB,EAAlB;IACAA,SAAS,CAATA,IAAAA,CAAeC,uBAAfD,EAAAA;IACAA,SAAS,CAATA,IAAAA,CAAeH,cAAc,CAA7BG,UAAAA;IACA,KAAA,SAAA,GAAA,SAAA;EACD;;EAEDjB,OAAO,GAAA;IACL,KAAA,UAAA,GAAA,IAAA;IACA,KAAA,WAAA,GAAA,KAAA;EACD;;EAEDmB,WAAW,CAAA,OAAA,EAAA,QAAA,EAAsE;IAC/E,IAAI,CAACC,OAAO,CAAZ,OAAA,EAAsB;MACpBA,OAAO,CAAPA,OAAAA,GAAAA,KAAAA;IACD;;IACD,IAAI,CAACA,OAAO,CAAZ,EAAA,EAAiB;MACfA,OAAO,CAAPA,EAAAA,GAAaC,QAAbD,EAAAA;IACD;;IACD,KAAA,SAAA,CAAA,MAAA,CAAA,OAAA,EAAA,QAAA;EACD;;AA5DmD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWtDE,aAAa,CAAbA,qCAAa,CAAbA;;AAsBA,MAAA,SAAA,CAAe;EAOb1C,WAAAA,CAAAA,OAAAA,EAAqC;IAAA,IAAA,cAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,oBAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;IACnC,KAAA,QAAA,GAAgB,IAAA,KAAA,CAAU,IAAV,QAAU,EAAV,EAA0B;MACxC2C,cAAc,EAAE,MADwB,IAAA,CAAA;;IAAA,CAA1B,CAAhB;;IAGA,IAAI,CAACC,OAAO,CAAZ,UAAA,EAAyB;MACvB,IAAIA,OAAO,CAAPA,OAAAA,KAAoB5I,iBAAiB,CAAzC,OAAA,EAAmD;QACjD4I,OAAO,CAAPA,UAAAA,GAAAA,2BAAAA;MADF,CAAA,MAEO,IAAIA,OAAO,CAAPA,OAAAA,KAAoB5I,iBAAiB,CAAzC,IAAA,EAAgD;QACrD4I,OAAO,CAAPA,UAAAA,GAAAA,4BAAAA;MADK,CAAA,MAEA,IAAIA,OAAO,CAAPA,OAAAA,KAAoB5I,iBAAiB,CAAzC,OAAA,EAAmD;QACxD4I,OAAO,CAAPA,UAAAA,GAAAA,4BAAAA;MADK,CAAA,MAEA,IAAIA,OAAO,CAAPA,OAAAA,KAAoB5I,iBAAiB,CAAzC,WAAA,EAAuD;QAC5D4I,OAAO,CAAPA,UAAAA,GAAAA,uBAAAA;MACD;IACF;;IACD,IAAI,CAACA,OAAO,CAAZ,UAAA,EAAyB;MACvB,MAAM,IAAA,KAAA,CAAN,mCAAM,CAAN;IACD;;IACD,KAAA,KAAA,GAAa,IAAA,KAAA,CAAA,GAAA,MAAA,CAAaA,OAAO,CAApB,UAAA,EAAb,YAAa,CAAA,CAAb;IACA,KAAA,SAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA;MAEEC,KAAK,EAAED,CAAAA,cAAAA,GAAAA,OAAO,CAAT,KAAEA,MAAF,IAAEA,IAAF,cAAA,KAAA,KAAA,CAAEA,GAAF,cAAEA,GAFT,KAAA;MAGEE,UAAU,EAAEF,OAAO,CAHrB,UAAA;MAIEG,SAAS,EAAA,CAAA,kBAAA,GAAEH,OAAO,CAAT,SAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,kBAAA,GAAA,GAAA,MAAA,CAA0BA,OAAO,CAAjC,UAAA,EAJX,QAIW,CAJX;MAKEI,SAAS,EAAA,CAAA,kBAAA,GAAEJ,OAAO,CAAT,SAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,kBAAA,GAAA,GAAA,MAAA,CAA0BA,OAAO,CAAjC,UAAA,EALX,eAKW,CALX;MAMEK,WAAW,EAAA,CAAA,oBAAA,GAAEL,OAAO,CAAT,WAAA,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,oBAAA,GAAA,GAAA,MAAA,CAA4B3G,MAAM,CAANA,QAAAA,CAA5B,QAAA,EAAA,IAAA,EAAA,MAAA,CAAyDA,MAAM,CAANA,QAAAA,CAAzD,IAAA,EAAA,MAAA,CAAgFA,MAAM,CAANA,QAAAA,CAN7F,QAMa,CANb;MAOEiH,MAAM,EAAA,CAAA,eAAA,GAAEN,OAAO,CAAT,MAAA,MAAoBvJ,IAApB,IAAoBA,eAAAA,KAAAA,KAAAA,CAApB,GAAoBA,eAApB,GAAoBA,OAAO,CAPnC,QAAA;MAQE8J,oBAAoB,EAAEP,CAAAA,qBAAAA,GAAAA,OAAO,CAAT,oBAAEA,MAAF,IAAEA,IAAF,qBAAA,KAAA,KAAA,CAAEA,GAAF,qBAAEA,GARxB,IAAA;MASEQ,UAAU,EAAER,CAAAA,mBAAAA,GAAAA,OAAO,CAAT,UAAEA,MAAsB,IAAtBA,IAAsB,mBAAA,KAAA,KAAA,CAAtBA,GAAsB,mBAAtBA,GAAsB;QAAE,CAAC3G,MAAM,CAANA,QAAAA,CAAD,MAAA,GAA0B;MAA5B,CATpC;MAUEoH,UAAU,EAAET,CAAAA,mBAAAA,GAAAA,OAAO,CAAT,UAAEA,MAAF,IAAEA,IAAF,mBAAA,KAAA,KAAA,CAAEA,GAAF,mBAAEA,GAVd,EAAA;MAWEzB,WAAW,EAAEyB,CAAAA,oBAAAA,GAAAA,OAAO,CAAT,WAAEA,MAAuB,IAAvBA,IAAuB,oBAAA,KAAA,KAAA,CAAvBA,GAAuB,oBAAvBA,GAAuB;IAXtC,CAAA,CAAA;EAaD;;EAEU,IAAPU,OAAO,GAAA;IACT,OAAO,KAAA,KAAA,CAAA,OAAA,GAAqB,KAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EAArB,GAAqB,CAArB,GAAP,EAAA;EACD;;EAEDC,SAAS,CAAA,OAAA,EAAoC;IAC3C,KAAA,KAAA,GAAa;MACXL,MAAM,EAAEN,OAAO,CADJ,MAAA;MAEXY,OAAO,EAAEZ,OAAO,CAFL,OAAA;MAGXb,KAAK,EAAEP,cAAc,CAHV,WAGJA,EAHI;MAIXS,SAAS,EAAEW,OAAO,CAJP,UAAA;MAKXa,QAAQ,EAAEb,OAAO,CALN,SAAA;MAMXc,QAAQ,EAAEd,OAAO,CANN,SAAA;MAOXe,QAAQ,EAAEf,OAAO,CAPN,QAAA;MAQXK,WAAW,EAAEL,OAAO,CART,WAAA;MASXO,oBAAoB,EAAEP,OAAO,CATlB,oBAAA;MAUXQ,UAAU,EAAER,OAAO,CAVR,UAAA;MAWXzB,WAAW,EAAEyB,OAAO,CAXT,WAAA;MAYXgB,UAAU,EAAE,CAAChB,OAAO,CAZT,KAAA;MAaXS,UAAU,EAAET,OAAO,CAACS;IAbT,CAAb;EAeD;;EAES,MAAJpD,IAAI,GAAA;IACR,IAAI,KAAA,KAAA,CAAA,OAAA,KAAuBjG,iBAAiB,CAA5C,OAAA,EAAsD;MACpD;MACA;MACA6J,OAAO,CAAPA,GAAAA,CAAAA,6EAAAA,EAAAA,gBAAAA;IACD;;IACD,IAAI,KAAA,KAAA,CAAJ,UAAA,EAA2B;MACzB,MAAMC,OAAO,CAAPA,GAAAA,CAAY,CAAC,KAAA,KAAA,CAAD,IAAC,EAAD,EAAoB,KAAtC,gBAAsC,EAApB,CAAZA,CAAN;MACA,KAAA,QAAA,CAAA,IAAA,CAAmB;QAAEC,UAAU,EAAE,KAAA,KAAA,CAAd,UAAA;QAAqC9B,SAAS,EAAE,KAAA,KAAA,CAAWA;MAA3D,CAAnB;;MACA,KAAA,UAAA,CAAgB,MAAM,KAAtB,QAAsB,EAAtB;;MACA,KAAA,UAAA,CAAgB+B,kBAAkB,CAAC,KAAA,KAAA,CAAnC,oBAAkC,CAAlC;;MACA,MAAMC,GAAG,GAAG,MAAM,KAAlB,gBAAkB,EAAlB;MACA,KAAA,KAAA,CAAA,UAAA,GAAwB,CAAC,CAACA,GAAG,CAA7B,UAAA;IANF,CAAA,MAOO;MACL,MAAM,KAAN,gBAAM,EAAN;;MACA,KAAA,UAAA,CAAgBD,kBAAkB,CAAC,KAAA,KAAA,CAAnC,oBAAkC,CAAlC;IACD;EACF;;EAEqB,MAAhBE,gBAAgB,GAAA;IACpB,MAAMC,kBAAkB,GAAGlH,IAAI,CAAJA,KAAAA,CAAWA,IAAI,CAAJA,SAAAA,CAAe,KAAA,KAAA,CAArD,UAAsCA,CAAXA,CAA3B;IACAE,MAAM,CAANA,IAAAA,CAAAA,kBAAAA,EAAAA,OAAAA,CAAyCL,GAAD,IAAQ;MAC9C,IAAIqH,kBAAkB,CAAlBA,GAAkB,CAAlBA,KAAJ,EAAA,EAAoC,OAAOA,kBAAkB,CAAzB,GAAyB,CAAzB;IADtChH,CAAAA;IAGA,MAAM,CAAA,SAAA,EAAA,UAAA,IAA0B,MAAM2G,OAAO,CAAPA,GAAAA,CAAY,CAAC,KAAD,YAAC,EAAD,EAAsB,KAAxE,aAAwE,EAAtB,CAAZA,CAAtC;;IACA,KAAA,UAAA,CAAgB;MAAEV,UAAU,EAAOgB,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAP,SAAOA,CAAAA,EAAnB,kBAAmBA,CAAnB;MAAuDf,UAAU,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,UAAA,CAAA,EAAsB,KAAA,KAAA,CAAtB,UAAA;IAAjE,CAAhB;EACD;;EAEiB,MAAZgB,YAAY,GAAA;IAChB,IAAI;MACF,MAAM;QAAEV;MAAF,IAAe,KAArB,KAAA;;MACA,IAAI,CAAJ,QAAA,EAAe;QACb,MAAM,IAAA,KAAA,CAAN,sBAAM,CAAN;MACD;;MACD,MAAM9G,GAAG,GAAG,IAAA,GAAA,CAAZ,wCAAY,CAAZ;MACAA,GAAG,CAAHA,YAAAA,CAAAA,MAAAA,CAAAA,YAAAA,EAAsC,KAAA,KAAA,CAAtCA,QAAAA;MACA,MAAMoH,GAAG,GAAG,MAAMnC,GAAG,CAA8BjF,GAAG,CAAtD,IAAqB,CAArB;MACA,OAAOoH,GAAG,CAAV,WAAA;IARF,CAAA,CASE,OAAA,CAAA,EAAU;MACV;MACA,OAAA,EAAA;IACD;EACF;;EAEkB,MAAbK,aAAa,GAAA;IACjB,IAAI;MACF,MAAM;QAAEX;MAAF,IAAe,KAArB,KAAA;;MACA,IAAI,CAAJ,QAAA,EAAe;QACb,MAAM,IAAA,KAAA,CAAN,sBAAM,CAAN;MACD;;MACD,MAAM9G,GAAG,GAAG,IAAA,GAAA,CAAZ,yCAAY,CAAZ;MACAA,GAAG,CAAHA,YAAAA,CAAAA,MAAAA,CAAAA,YAAAA,EAAsC,KAAA,KAAA,CAAtCA,QAAAA;MACA,MAAMoH,GAAG,GAAG,MAAMnC,GAAG,CAAiCjF,GAAG,CAAzD,IAAqB,CAArB;MACA,OAAOoH,GAAG,CAAV,UAAA;IARF,CAAA,CASE,OAAA,CAAA,EAAU;MACV;MACA,OAAA,EAAA;IACD;EACF;;EAEe,MAAVM,UAAU,CAAA,MAAA,EAAoC;IAClD,MAAMC,aAAa,GAAuB;MACxCvB,WAAW,EAAE,KAAA,KAAA,CAAWA;IADgB,CAA1C;;IAIA,MAAMwB,WAAW,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,aAAA,CAAA,EAAjB,MAAiB,CAAjB;;IAKA,MAAMR,GAAG,GAAG,MAAM,KAAA,OAAA,CAAkC;MAClDS,MAAM,EAAE,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA;QAAmBC,SAAS,EAAE;MAA9B,CAAA,CAAA,CAD0C;MAElDC,MAAM,EAAEpL,gBAAgB,CAF0B,KAAA;MAGlDiK,QAAQ,EAAE,KAAA,KAAA,CAHwC,QAAA;MAIlDC,QAAQ,EAAE,KAAA,KAAA,CAJwC,QAAA;MAKlDmB,mBAAmB,EAAE,CAAC/K,oBAAoB,CAArB,KAAA,EAA6BA,oBAAoB,CAAjD,QAAA;IAL6B,CAAlC,CAAlB;IAQA,KAAA,KAAA,CAAA,OAAA,GAAqBmK,GAAG,CAAxB,OAAA;IACA,OAAA,GAAA;EACD;;EAEU,MAALa,KAAK,CAAA,MAAA,EAAmD;IAC5D,IAAIJ,MAAJ,KAAIA,IAAAA,IAAAA,MAAJ,KAAA,KAAA,CAAIA,IAAAA,MAAM,CAAV,aAAA,EAA2B;MACzB,OAAO,KAAA,cAAA,CAAP,MAAO,CAAP;IACD;;IACD,OAAO,KAAA,MAAA,CAAP,MAAO,CAAP;EACD;;EAEmB,MAAdK,cAAc,CAAA,MAAA,EAAkD;IACpE,MAAMP,aAAa,GAAuB;MACxCvB,WAAW,EAAE,KAAA,KAAA,CAAWA;IADgB,CAA1C;;IAIA,MAAMwB,WAAW,GAAA,aAAA,CAAA,aAAA,CAAA;MACfO,aAAa,EAAEN,MAAM,CAACM;IADP,CAAA,EAAA,aAAA,CAAA,EALmD,MAKnD,CAAjB,CALoE,CAAA;IAYpE;IACA;IACA;;;IAEA,MAAMf,GAAG,GAAG,MAAM,KAAA,OAAA,CAAkE;MAClFW,MAAM,EAAEpL,gBAAgB,CAD0D,KAAA;MAElFqL,mBAAmB,EAAE,CAACxL,OAAO,CAAR,QAAA,EAAmBA,OAAO,CAFmC,KAE7D,CAF6D;MAGlFoK,QAAQ,EAAE,KAAA,KAAA,CAHwE,QAAA;MAIlFC,QAAQ,EAAE,KAAA,KAAA,CAJwE,QAAA;MAKlFgB,MAAM,EAAE,CAAA,WAAA;IAL0E,CAAlE,CAAlB;IAOA,KAAA,KAAA,CAAA,OAAA,GAAqBT,GAAG,CAAxB,OAAA;;IACA,IAAIA,GAAG,CAAP,KAAA,EAAe;MACb,KAAA,UAAA,CAAA,GAAA;IADF,CAAA,MAEO,IAAI,KAAA,KAAA,CAAA,OAAA,IAAsB,KAAA,KAAA,CAA1B,UAAA,EAAiD;MACtD,KAAA,UAAA,CAAgB,MAAM,KAAtB,QAAsB,EAAtB;IACD;;IACD,OAAO;MAAEX,OAAO,EAAE,KAAKA;IAAhB,CAAP;EACD;;EAEW,MAAN2B,MAAM,GAA2E;IAAA,IAA1EC,YAA0E,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAAE;IACrF,MAAMR,MAAM,GADyE,EACrF,CADqF,CAAA;;IAGrFA,MAAM,CAANA,WAAAA,GAAqB,KAAA,KAAA,CAArBA,WAAAA;IACAA,MAAM,CAANA,SAAAA,GAAmB,KAAA,KAAA,CAAnBA,QAAAA;;IAEA,IAAIQ,YAAY,CAAhB,QAAA,EAA2B;MACzBR,MAAM,CAANA,SAAAA,GAAmBQ,YAAY,CAA/BR,QAAAA;IACD;;IACD,IAAIQ,YAAY,CAAZA,SAAAA,KAAJ,SAAA,EAA0C;MACxCR,MAAM,CAANA,SAAAA,GAAmBQ,YAAY,CAA/BR,SAAAA;IACD;;IACD,IAAIQ,YAAY,CAAZA,WAAAA,KAAJ,SAAA,EAA4C;MAC1CR,MAAM,CAANA,WAAAA,GAAqBQ,YAAY,CAAjCR,WAAAA;IACD;;IAED,MAAMT,GAAG,GAAG,MAAM,KAAA,OAAA,CAAmB;MACnCW,MAAM,EAAEpL,gBAAgB,CADW,MAAA;MAEnCkL,MAAM,EAAE,CAF2B,MAE3B,CAF2B;MAGnCjB,QAAQ,EAAE,KAAA,KAAA,CAHyB,QAAA;MAInCC,QAAQ,EAAE,KAAA,KAAA,CAJyB,QAAA;MAKnCmB,mBAAmB,EAAE,CAAC/K,oBAAoB,CAArB,IAAA,EAA4BA,oBAAoB,CAAhD,KAAA,EAAwDA,oBAAoB,CAA5E,QAAA;IALc,CAAnB,CAAlB;IAQA,KAAA,KAAA,CAAA,OAAA,GAxBqF,EAwBrF,CAxBqF,CAAA;;IA0BrF,OAAA,GAAA;EACD;;EAEY,MAAPqL,OAAO,CAAA,IAAA,EAAuB;IAAA,IAAA,qBAAA;;IAClC,MAAMjH,GAAG,GAAGuE,QAAZ,EAAA;IACA,IAAI;MAAEiC;IAAF,IAF8B,IAElC,CAFkC,CAAA;IAKlC;;IACA,MAAMU,OAAO,GAAb,EAAA;IACA,IAAIV,MAAM,CAANA,MAAAA,KAAJ,CAAA,EAAyB,MAAM,IAAA,KAAA,CAAN,mDAAM,CAAN;IACzB,MAAM;MAAA,QAAA;MAAA,QAAA;MAAA,MAAA;MAA8BG;IAA9B,IAAN,IAAA;IACA,IAAIA,mBAAmB,CAAnBA,MAAAA,KAAJ,CAAA,EAAsC,MAAM,IAAA,KAAA,CAAN,yBAAM,CAAN;;IAEtC,IAAI,KAAA,KAAA,CAAJ,QAAA,EAAyB;MACvBO,OAAO,CAAPA,SAAAA,GAAoB,KAAA,KAAA,CAApBA,QAAAA;IACD;;IAED,IAAI,KAAJ,OAAA,EAAkB;MAChB,MAAMC,QAAQ,GAAG;QACf1B,QAAQ,EAAEyB,OAAO,CADF,SAAA;QAEfE,SAAS,EAAEC,IAAI,CAAJA,GAAAA,GAAAA,QAAAA;MAFI,CAAjB;MAIA,MAAM/I,GAAG,GAAG,MAAMC,IAAI,CACpBL,MAAM,CAANA,IAAAA,CAAY,KAAZA,OAAAA,EADoB,KACpBA,CADoB,EAEpBA,MAAM,CAANA,IAAAA,CAAYM,MAAM,CAANA,WAAM,CAANA,CAAAA,MAAAA,CAA2BO,IAAI,CAAJA,SAAAA,CAA3BP,QAA2BO,CAA3BP,EAAAA,MAAAA,CAAZN,KAAYM,CAAZN,EAFF,KAEEA,CAFoB,CAAtB;MAIAgJ,OAAO,CAAPA,KAAAA,GAAgB7I,SAAS,CAACH,MAAM,CAANA,IAAAA,CAAY,KAAZA,OAAAA,EAAVG,KAAUH,CAAD,CAATG,CAAAA,QAAAA,CAAhB6I,KAAgB7I,CAAhB6I;MACAA,OAAO,CAAPA,QAAAA,GAAmB9I,SAAS,CAATA,MAAAA,CAAnB8I,GAAmB9I,CAAnB8I;MACAA,OAAO,CAAPA,SAAAA,GAAAA,QAAAA;IACD;;IAEDA,OAAO,CAAPA,WAAAA,GAAsB,KAAA,KAAA,CAAtBA,UAAAA;IACAA,OAAO,CAAPA,eAAAA,GAA0B,KAAA,KAAA,CAA1BA,UAAAA;IACAA,OAAO,CAAPA,YAAAA,GAAuB,KAAA,KAAA,CA/BW,WA+BlCA,CA/BkC,CAAA;;IAkClCV,MAAM,GAAG,CAAMU,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAN,OAAMA,CAAAA,EAAYV,MAAM,CAlCC,CAkCD,CAAlBU,CAAN,CAATV,CAlCkC,CAAA;;IAsClC,IAAI,KAAA,KAAA,CAAA,UAAA,IAAyBG,mBAAmB,CAAnBA,QAAAA,CAA6B/K,oBAAoB,CAA9E,IAA6B+K,CAA7B,EAAsF;MACpF,OAAO,KAAA,YAAA,CAAgD;QAAA,MAAA;QAAUH;MAAV,CAAhD,CAAP;IAvCgC,CAAA,CAAA;;;IA2ClCA,MAAM,CAANA,CAAM,CAANA,CAAAA,OAAAA,GAAoB,IAAA,GAAA,CAAA,CAAA,qBAAA,GAASA,MAAM,CAANA,CAAM,CAANA,CAAT,WAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAA6C,KAAA,KAAA,CAA7C,WAAA,EA3Cc,MA2ClCA,CA3CkC,CAAA;;IA8ClC,IAAI,KAAA,KAAA,CAAJ,UAAA,EAA2B;MACzB;MACA,MAAM,KAAA,WAAA,CAAA,GAAA,EAFmB,MAEnB,CAAN,CAFyB,CAAA;;MAIzBA,MAAM,GAAG,CAATA,EAAS,CAATA;IACD;;IAED,IAAI,CAAA,QAAA,IAAa,CAAjB,QAAA,EAA4B;MAC1B,MAAM,IAAA,KAAA,CAAN,kCAAM,CAAN;IAtDgC,CAAA,CAAA;IA0DlC;;;IAEA,IAAI,KAAA,KAAA,CAAA,MAAA,KAAsBrL,OAAO,CAAjC,QAAA,EAA4C;MAC1C;MAEA,IAAIwL,mBAAmB,CAAnBA,QAAAA,CAA6B/K,oBAAoB,CAArD,QAAI+K,CAAJ,EAAiE;QAC/D;QACAW,UAAU,CAAC,MAAK;UACdvJ,MAAM,CAANA,QAAAA,CAAAA,IAAAA,GAAuBqC,YAAY,CAAC;YAClCmH,OAAO,EAD2B,QAAA;YAElCpI,IAAI,EAAE;cAAEqI,SAAS,EAAEC,YAAY,CAACjB,MAAM,CAAhC,CAAgC,CAAP,CAAzB;cAAsCkB,IAAI,EAA1C,GAAA;cAAiDC,OAAO,EAAEjB;YAA1D;UAF4B,CAAD,CAAnC3I;QADQ,CAAA,EAAVuJ,EAAU,CAAVA;QAMA,OAAA,EAAA;MACD;;MAED,IAAIX,mBAAmB,CAAnBA,QAAAA,CAA6B/K,oBAAoB,CAArD,KAAI+K,CAAJ,EAA8D;QAC5D,MAAMiB,CAAC,GAAG,IAAA,GAAA,CACRxH,YAAY,CAAC;UACXmH,OAAO,EADI,QAAA;UAEXpI,IAAI,EAAE;YAAEqI,SAAS,EAAEC,YAAY,CAACjB,MAAM,CAAhC,CAAgC,CAAP,CAAzB;YAAsCkB,IAAI,EAA1C,GAAA;YAAiDC,OAAO,EAAEjB;UAA1D;QAFK,CAAD,CADJ,CAAV;QAMA,MAAM9G,SAAS,GAAG7B,MAAM,CAANA,IAAAA,CAAY6J,CAAC,CAAb7J,QAAY6J,EAAZ7J,EAAAA,QAAAA,EAAoC+C,gBAAtD,EAAkB/C,CAAlB;QACA,OAAO8J,QAAQ,CAAA,GAAA,EAAf,SAAe,CAAf;MACD;IAvBH,CAAA,MAwBO;MACL;MAEA,IAAIlB,mBAAmB,CAAnBA,QAAAA,CAA6B/K,oBAAoB,CAArD,KAAI+K,CAAJ,EAA8D;QAC5D,MAAMiB,CAAC,GAAG,IAAA,GAAA,CACRxH,YAAY,CAAC;UACXmH,OAAO,EADI,QAAA;UAEXpI,IAAI,EAAE;YAAEqI,SAAS,EAAEC,YAAY,CAACjB,MAAM,CAAhC,CAAgC,CAAP,CAAzB;YAAsCkB,IAAI,EAA1C,GAAA;YAAiDC,OAAO,EAAEjB;UAA1D;QAFK,CAAD,CADJ,CAAV;QAMA,MAAM9G,SAAS,GAAG7B,MAAM,CAANA,IAAAA,CAAY6J,CAAC,CAAb7J,QAAY6J,EAAZ7J,EAAAA,QAAAA,EAAoC+C,gBAAtD,EAAkB/C,CAAlB;QACA,OAAO8J,QAAQ,CAAA,GAAA,EAAf,SAAe,CAAf;MACD;;MAED,IAAIlB,mBAAmB,CAAnBA,QAAAA,CAA6B/K,oBAAoB,CAArD,QAAI+K,CAAJ,EAAiE;QAC/D;QACAW,UAAU,CAAC,MAAK;UACdvJ,MAAM,CAANA,QAAAA,CAAAA,IAAAA,GAAuBqC,YAAY,CAAC;YAClCmH,OAAO,EAD2B,QAAA;YAElCpI,IAAI,EAAE;cAAEqI,SAAS,EAAEC,YAAY,CAACjB,MAAM,CAAhC,CAAgC,CAAP,CAAzB;cAAsCkB,IAAI,EAA1C,GAAA;cAAiDC,OAAO,EAAEjB;YAA1D;UAF4B,CAAD,CAAnC3I;QADQ,CAAA,EAAVuJ,EAAU,CAAVA;QAMA,OAAA,IAAA;MACD;IACF;;IAED,MAAM,IAAA,KAAA,CAAN,kCAAM,CAAN;EACD;;EAEiB,MAAZQ,YAAY,CAAA,IAAA,EAA2B;IAC3C;IACA,IAAI,CAAA,IAAA,IAAS,OAAA,IAAA,KAAT,QAAA,IAAqCC,KAAK,CAALA,OAAAA,CAAzC,IAAyCA,CAAzC,EAA8D;MAC5D,MAAM,IAAA,KAAA,CAAN,sBAAM,CAAN;IACD;;IAED,MAAM;MAAA,MAAA;MAAUvB;IAAV,IAAN,IAAA;;IAEA,IAAI,OAAA,MAAA,KAAA,QAAA,IAA8BE,MAAM,CAANA,MAAAA,KAAlC,CAAA,EAAuD;MACrD,MAAM,IAAA,KAAA,CAAN,wBAAM,CAAN;IACD;;IAED,IAAIF,MAAM,KAANA,SAAAA,IAAwB,CAACuB,KAAK,CAALA,OAAAA,CAA7B,MAA6BA,CAA7B,EAAoD;MAClD,MAAM,IAAA,KAAA,CAAN,wBAAM,CAAN;IACD;;IAED,IAAIvB,MAAM,CAANA,MAAAA,KAAJ,CAAA,EAAyB;MACvBA,MAAM,CAANA,IAAAA,CAAAA,EAAAA;IACD;;IAED,OAAO,IAAA,OAAA,CAAe,CAAA,OAAA,EAAA,MAAA,KAAoB;MACxC,KAAA,QAAA,CAAA,WAAA,CAA0B;QAAA,MAAA;QAAUA;MAAV,CAA1B,EAA8CwB,qBAAqB,CAAA,OAAA,EAAnE,MAAmE,CAAnE;IADF,CAAO,CAAP;EAGD;;EAEqB,MAAhBC,gBAAgB,GAAA;IACpB,OAAO,KAAA,YAAA,CAAsE;MAC3EvB,MAAM,EAAEpL,gBAAgB,CADmD,iBAAA;MAE3EkL,MAAM,EAAE,CAAC;QAAE0B,WAAW,EAAE,KAAA,KAAA,CAAWhD;MAA1B,CAAD;IAFmE,CAAtE,CAAP;EAID;;EAEgB,MAAXiD,WAAW,CAAA,GAAA,EAAA,IAAA,EAA6C;IAC5D,MAAM,KAAA,OAAA,CAAa;MACjBxB,mBAAmB,EAAE,CAAC/K,oBAAoB,CADzB,IACI,CADJ;MAEjB8K,MAAM,EAAEpL,gBAAgB,CAFP,YAAA;MAGjBkL,MAAM,EAAE,CACN;QAAA,GAAA;QAEE4B,IAAI,EAAEA,IAAI,CAAA,CAAA;MAFZ,CADM;IAHS,CAAb,CAAN;EAUD;;EAEa,MAARC,QAAQ,GAAA;IACZ,OAAO,KAAA,OAAA,CAAsC;MAC3C1B,mBAAmB,EAAE,CAAC/K,oBAAoB,CADC,IACtB,CADsB;MAE3C8K,MAAM,EAAEpL,gBAAgB,CAFmB,QAAA;MAG3CkL,MAAM,EAAE,CAAA,EAAA;IAHmC,CAAtC,CAAP;EAKD;;EAED8B,UAAU,CAAA,QAAA,EAAkC;IAC1C,IAAIC,QAAQ,CAAZ,KAAA,EAAoB;MAClB,IAAI,OAAOA,QAAQ,CAAf,KAAA,KAAJ,QAAA,EAAwC;QACtC,MAAM,IAAA,KAAA,CAAN,gCAAM,CAAN;MACD;;MACDtJ,MAAM,CAANA,IAAAA,CAAYsJ,QAAQ,CAApBtJ,KAAAA,EAAAA,OAAAA,CAAqCL,GAAD,IAAQ;QAC1C;QACA;QACA;QACA,IAAI2J,QAAQ,CAAZ,OAAA,EAAsB;UACpB,IAAIA,QAAQ,CAARA,KAAAA,CAAJ,GAAIA,CAAJ,EAAyB;YACvB,KAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAA0BA,QAAQ,CAARA,KAAAA,CAA1B,GAA0BA,CAA1B;UACD;QAHH,CAAA,MAIO;UACL,KAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAA0BA,QAAQ,CAARA,KAAAA,CAA1B,GAA0BA,CAA1B;QACD;MAVHtJ,CAAAA;IAYD;;IACD,MAAM;MAAE4E;IAAF,IAAY,KAAlB,KAAA;IACA,KAAA,KAAA,GAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAkB,KAAlB,KAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA;MAA2CA;IAA3C,CAAA,CAAA;EACD;;EAEW,MAAN2E,MAAM,CAAA,MAAA,EAAmD;IAG7D,OAAO,IAAA,OAAA,CAAiC,CAAA,OAAA,EAAA,MAAA,KAAoB;MAC1D,KAAA,KAAA,CAAA,OAAA,CAAmB,KAAA,KAAA,CAAnB,QAAA,EAAwC,KAAA,KAAA,CAAxC,UAAA,EAA+D,KAAA,KAAA,CAA/D,WAAA,EAAuF,MAAA,KAAA,IAAqD;QAC1I,IAAI7G,KAAK,CAAT,MAAA,EAAkB;UAChBnC,MAAM,CAAC,IAAA,KAAA,CAAPA,qBAAO,CAAD,CAANA;QADF,CAAA,MAEO;UACL,IAAI;YACF,MAAMiJ,qBAAqB,GAAG,MAAM,KAAA,cAAA,CAAoBC,KAAK,CAAA,MAAA,EAA7D,KAA6D,CAAzB,CAApC;YACAhL,OAAO,CAAPA,qBAAO,CAAPA;UAFF,CAAA,CAGE,OAAA,KAAA,EAAc;YACd8B,MAAM,CAANA,KAAM,CAANA;UACD;QACF;MAVH,CAAA;IADF,CAAO,CAAP;EAcD;;EAEa,MAARmJ,QAAQ,GAAA;IACZ,MAAM,KAAA,KAAA,CAAN,OAAM,EAAN;IACA,KAAA,QAAA,CAAA,OAAA;EACD;;EAEY,MAAPC,OAAO,CAAA,OAAA,EAAA,UAAA,EAAqC;IAChD,IAAIxD,OAAO,GAAX,UAAA;;IACA,IAAI,CAAJ,OAAA,EAAc;MACZA,OAAO,GAAG,KAAVA,OAAAA;IAH8C,CAAA,CAAA;;;IAMhD,IAAI,CAAC,oBAAA,IAAA,CAAL,OAAK,CAAL,EAAwC;MACtC,IAAIA,OAAO,KAAPA,EAAAA,IAAkBA,OAAO,KAA7B,SAAA,EAA6C;QAC3C,MAAM,IAAA,KAAA,CAAN,6BAAM,CAAN;MADF,CAAA,MAEO;QACL,MAAM,IAAA,KAAA,CAAN,gCAAM,CAAN;MACD;IACF;;IACD,OAAOwD,OAAO,CAACvK,SAAS,CAACH,MAAM,CAANA,IAAAA,CAAAA,OAAAA,EAAX,KAAWA,CAAD,CAAV,EAAd,OAAc,CAAd;EACD;;EAEY,MAAP2K,OAAO,CAAA,UAAA,EAAA,UAAA,EAAuC;IAClD,IAAIzD,OAAO,GAAX,UAAA;;IACA,IAAI,CAAJ,OAAA,EAAc;MACZA,OAAO,GAAG,KAAVA,OAAAA;IAHgD,CAAA,CAAA;;;IAMlD,IAAI,CAAC,oBAAA,IAAA,CAAL,OAAK,CAAL,EAAwC;MACtC,IAAIA,OAAO,KAAPA,EAAAA,IAAkBA,OAAO,KAA7B,SAAA,EAA6C;QAC3C,MAAM,IAAA,KAAA,CAAN,6BAAM,CAAN;MADF,CAAA,MAEO;QACL,MAAM,IAAA,KAAA,CAAN,gCAAM,CAAN;MACD;IACF;;IACD,OAAOyD,OAAO,CAAC3K,MAAM,CAANA,IAAAA,CAAAA,OAAAA,EAAD,KAACA,CAAD,EAAd,UAAc,CAAd;EACD;;EAEgB,MAAX4K,WAAW,GAAA;IACf,IAAI,KAAJ,OAAA,EAAkB;MAChB,MAAMC,SAAS,GAAG,KAAA,KAAA,CAAA,KAAA,CAAlB,QAAkB,EAAlB;MACA,MAAMC,QAAQ,GAAsB;QAClCC,KAAK,EAAGF,SAAS,CAATA,KAAAA,IAD0B,EAAA;QAElC7G,IAAI,EAAG6G,SAAS,CAATA,IAAAA,IAF2B,EAAA;QAGlCG,YAAY,EAAGH,SAAS,CAATA,YAAAA,IAHmB,EAAA;QAIlCI,iBAAiB,EAAGJ,SAAS,CAATA,iBAAAA,IAJc,EAAA;QAKlCK,QAAQ,EAAGL,SAAS,CAATA,QAAAA,IALuB,EAAA;QAMlCM,UAAU,EAAGN,SAAS,CAATA,UAAAA,IANqB,EAAA;QAOlCO,WAAW,EAAGP,SAAS,CAATA,WAAAA,IAPoB,EAAA;QAQlCQ,SAAS,EAAGR,SAAS,CAATA,SAAAA,IAAkC;MARZ,CAApC;MAWA,OAAA,QAAA;IACD;;IACD,MAAM,IAAA,KAAA,CAAN,4CAAM,CAAN;EACD;;EAEuB,MAAlBS,kBAAkB,CAAA,WAAA,EAAuD;IAC7E,MAAM;MAAEzE;IAAF,IAAN,WAAA;IACA,MAAM;MAAEU;IAAF,IAAe,KAArB,KAAA;;IACA,IAAI,CAAC,KAAA,KAAA,CAAA,UAAA,CAAL,MAAK,CAAL,EAAoC;MAClC,MAAM,KAAN,gBAAM,EAAN;IACD;;IACD,MAAMgE,UAAU,GAAA,aAAA,CAAA;MACdC,SAAS,EADK,QAAA;MAEdC,OAAO,EAAE,IAAA,GAAA,CAAA,WAAA,EAFK,MAAA;MAGdzB,WAAW,EAAE,KAAA,KAAA,CAHC,UAAA;MAIdnD;IAJc,CAAA,EAAhB,WAAgB,CAAhB;;IAQA,MAAMyC,SAAS,GAAGC,YAAY,CAA9B,UAA8B,CAA9B;IACA,MAAMnI,UAAU,GAAG;MAAA,SAAA;MAEjBqI,OAAO,EAAE;IAFQ,CAAnB;IAKA,OAAOvH,YAAY,CAAC;MAAEmH,OAAO,EAAK,GAAA,MAAA,CAAA,KAAA,KAAA,CAAL,SAAK,EAAd,QAAc,CAAd;MAA4CpI,IAAI,EAAEG;IAAlD,CAAD,CAAnB;EACD;;AAjfY","sourcesContent":["import loglevel from 'loglevel';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign, encrypt, decrypt } from '@toruslabs/eccrypto';\nimport { get } from '@toruslabs/http-helpers';\nimport { setupMultiplex, PostMessageStream, SafeEventEmitter, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback } from '@toruslabs/openlogin-jrpc';\nimport { base64url, keccak, safeatob, randomId, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport merge from 'lodash.merge';\nimport pump from 'pump';\n\nconst modalDOMElementID = \"openlogin-modal\";\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\"\n};\nconst ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\"\n};\nconst OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  DEVELOPMENT: \"development\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\"\n};\n\nloglevel.setLevel(\"error\");\nvar log = loglevel.getLogger(\"openlogin\");\n\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        resolve();\n      });\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nasync function whitelistUrl(clientId, appKey, origin) {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n  return base64url.encode(sig);\n}\nfunction getHashQueryParams() {\n  let replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const result = {};\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(key => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash));\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(key => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n\n  return result;\n}\nfunction awaitReq(id, windowRef) {\n  return new Promise((resolve, reject) => {\n    if (!windowRef) reject(new Error(\"Unable to open window\"));\n    let closedByHandler = false;\n    const closedMonitor = setInterval(() => {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n\n    const handler = ev => {\n      const {\n        pid\n      } = ev.data;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n\n    window.addEventListener(\"message\", handler);\n  });\n}\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n\n  return url.toString();\n}\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return error && ( // everything except Firefox\n    error.code === 22 || // Firefox\n    error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededErro r\" || // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\nconst sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nconst localStorageAvailable = storageAvailable(\"localStorage\");\nfunction preloadIframe(url) {\n  try {\n    if (typeof document === \"undefined\") return;\n    const openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.error(error);\n  }\n}\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\nclass Modal {\n  constructor(modalUrl) {\n    _defineProperty(this, \"modalUrl\", void 0);\n\n    _defineProperty(this, \"iframeElem\", void 0);\n\n    _defineProperty(this, \"initialized\", false);\n\n    _defineProperty(this, \"modalZIndex\", 99999);\n\n    _defineProperty(this, \"mux\", void 0);\n\n    _defineProperty(this, \"verifierStream\", void 0);\n\n    this.modalUrl = modalUrl;\n  }\n\n  async init() {\n    await this.initIFrame(this.modalUrl);\n    this.setupStream();\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.mux = setupMultiplex(new PostMessageStream({\n      name: \"modal_iframe_rpc\",\n      target: \"modal_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.modalUrl).origin\n    }));\n    this.verifierStream = this.mux.createStream(\"verifier\");\n  }\n\n  async initIFrame(src) {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      log.info(\"already initialized, removing previous modal iframe\");\n    }\n\n    this.iframeElem = htmlToElement(\"<iframe\\n        id=\".concat(modalDOMElementID, \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(src, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n\n    this._hideModal();\n\n    document.body.appendChild(this.iframeElem);\n    return new Promise(resolve => {\n      this.iframeElem.onload = () => {\n        this.initialized = true;\n        resolve();\n      };\n    });\n  }\n\n  _showModal() {\n    const style = {};\n    style.display = \"block\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref => {\n      let [k, v] = _ref;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  _hideModal() {\n    const style = {};\n    style.display = \"none\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref2 => {\n      let [k, v] = _ref2;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  async _prompt(clientId, whiteLabel, loginConfig, cb) {\n    this._showModal();\n\n    const modalHandler = chunk => {\n      this._hideModal();\n\n      cb(chunk);\n    };\n\n    handleStream(this.verifierStream, \"data\", modalHandler);\n    this.verifierStream.write({\n      name: \"prompt\",\n      clientId,\n      whiteLabel,\n      loginConfig\n    });\n  }\n\n  async cleanup() {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n\n    this.initialized = false;\n  }\n\n}\n\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", {});\n  }\n\n  getItem(key) {\n    return this.store[key];\n  }\n\n  setItem(key, value) {\n    this.store[key] = value;\n  }\n\n}\n\nclass OpenLoginStore {\n  // eslint-disable-next-line no-use-before-define\n  constructor(storage) {\n    _defineProperty(this, \"storage\", void 0);\n\n    this.storage = storage;\n\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {// Storage is not available\n    }\n  }\n\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new this(localStorageAvailable ? localStorage : new MemoryStore());\n    }\n\n    return this.instance;\n  }\n\n  toJSON() {\n    return this.storage.getItem(storeKey);\n  }\n\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.setItem(storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore() {\n    return JSON.parse(this.storage.getItem(storeKey));\n  }\n\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    return store[key];\n  }\n\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    store[key] = value;\n    this.storage.setItem(storeKey, JSON.stringify(store));\n  }\n\n}\n\n_defineProperty(OpenLoginStore, \"instance\", void 0);\n\nclass Provider extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"iframeElem\", null);\n\n    _defineProperty(this, \"rpcStream\", void 0);\n\n    _defineProperty(this, \"iframeUrl\", void 0);\n\n    _defineProperty(this, \"rpcEngine\", void 0);\n\n    _defineProperty(this, \"initialized\", void 0);\n\n    _defineProperty(this, \"mux\", void 0);\n  }\n\n  init(_ref) {\n    let {\n      iframeElem,\n      iframeUrl\n    } = _ref;\n    this.iframeElem = iframeElem;\n    this.iframeUrl = iframeUrl;\n    this.setupStream();\n    this.initialized = true;\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.rpcStream = new PostMessageStream({\n      name: \"embed_rpc\",\n      target: \"iframe_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.iframeUrl).origin\n    });\n    this.mux = setupMultiplex(this.rpcStream);\n    const JRPCConnection = createStreamMiddleware();\n    pump(JRPCConnection.stream, this.mux.createStream(\"jrpc\"), JRPCConnection.stream, error => {\n      log.error(\"JRPC connection broken\", error);\n    });\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(JRPCConnection.middleware);\n    this.rpcEngine = rpcEngine;\n  }\n\n  cleanup() {\n    this.iframeElem = null;\n    this.initialized = false;\n  }\n\n  _rpcRequest(payload, callback) {\n    if (!payload.jsonrpc) {\n      payload.jsonrpc = \"2.0\";\n    }\n\n    if (!payload.id) {\n      payload.id = randomId();\n    }\n\n    this.rpcEngine.handle(payload, callback);\n  }\n\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\npreloadIframe(\"https://app.openlogin.com/sdk-modal\");\n\nclass OpenLogin {\n  constructor(options) {\n    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig;\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"modal\", void 0);\n\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: () => true // work around for web3\n\n    });\n\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options._iframeUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n\n    this.modal = new Modal(\"\".concat(options._iframeUrl, \"/sdk-modal\"));\n    this.initState(_objectSpread(_objectSpread({}, options), {}, {\n      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : \"\".concat(options._iframeUrl, \"/start\"),\n      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : \"\".concat(options._iframeUrl, \"/popup-window\"),\n      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(window.location.pathname),\n      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,\n      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : {\n        [window.location.origin]: \"\"\n      },\n      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},\n      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {}\n    }));\n  }\n\n  get privKey() {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  initState(options) {\n    this.state = {\n      uxMode: options.uxMode,\n      network: options.network,\n      store: OpenLoginStore.getInstance(),\n      iframeUrl: options._iframeUrl,\n      startUrl: options._startUrl,\n      popupUrl: options._popupUrl,\n      clientId: options.clientId,\n      redirectUrl: options.redirectUrl,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n      originData: options.originData,\n      loginConfig: options.loginConfig,\n      support3PC: !options.no3PC,\n      whiteLabel: options.whiteLabel\n    };\n  }\n\n  async init() {\n    if (this.state.network === OPENLOGIN_NETWORK.TESTNET) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(\"%c WARNING! You are on testnet. Please set network: 'mainnet' in production\", \"color: #FF0000\");\n    }\n\n    if (this.state.support3PC) {\n      await Promise.all([this.modal.init(), this.updateOriginData()]);\n      this.provider.init({\n        iframeElem: this.modal.iframeElem,\n        iframeUrl: this.state.iframeUrl\n      });\n\n      this._syncState(await this._getData());\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n\n      const res = await this._check3PCSupport();\n      this.state.support3PC = !!res.support3PC;\n    } else {\n      await this.updateOriginData();\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n    }\n  }\n\n  async updateOriginData() {\n    const filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n    Object.keys(filteredOriginData).forEach(key => {\n      if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n    });\n    const [whitelist, whiteLabel] = await Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n\n    this._syncState({\n      originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),\n      whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)\n    });\n  }\n\n  async getWhitelist() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelist\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.signed_urls;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async getWhiteLabel() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelabel\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.whiteLabel;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async _fastLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({}, defaultParams), params);\n\n    const res = await this.request({\n      params: [_objectSpread(_objectSpread({}, loginParams), {}, {\n        fastLogin: true\n      })],\n      method: OPENLOGIN_METHOD.LOGIN,\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = res.privKey;\n    return res;\n  }\n\n  async login(params) {\n    if (params !== null && params !== void 0 && params.loginProvider) {\n      return this._selectedLogin(params);\n    }\n\n    return this._modal(params);\n  }\n\n  async _selectedLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({\n      loginProvider: params.loginProvider\n    }, defaultParams), params); // fast login flow\n    // if (this.state.store.get(\"touchIDPreference\") === \"enabled\" && !loginParams.extraLoginOptions?.login_hint) {\n    //   return this._fastLogin(loginParams);\n    // }\n\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGIN,\n      allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      params: [loginParams]\n    });\n    this.state.privKey = res.privKey;\n\n    if (res.store) {\n      this._syncState(res);\n    } else if (this.state.privKey && this.state.support3PC) {\n      this._syncState(await this._getData());\n    }\n\n    return {\n      privKey: this.privKey\n    };\n  }\n\n  async logout() {\n    let logoutParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const params = {}; // defaults\n\n    params.redirectUrl = this.state.redirectUrl;\n    params._clientId = this.state.clientId;\n\n    if (logoutParams.clientId) {\n      params._clientId = logoutParams.clientId;\n    }\n\n    if (logoutParams.fastLogin !== undefined) {\n      params.fastLogin = logoutParams.fastLogin;\n    }\n\n    if (logoutParams.redirectUrl !== undefined) {\n      params.redirectUrl = logoutParams.redirectUrl;\n    }\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGOUT,\n      params: [params],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC, ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = \"\"; // if (!params.fastLogin) this.state.store.set(\"touchIDPreference\", \"disabled\");\n\n    return res;\n  }\n\n  async request(args) {\n    var _params$0$redirectUrl;\n\n    const pid = randomId();\n    let {\n      params\n    } = args; // Note: _origin is added later in postMessageStream for jrpc requests\n    // do not add it here since its used for checking postMessage constraints\n\n    const session = {};\n    if (params.length !== 1) throw new Error(\"request params array should have only one element\");\n    const {\n      startUrl,\n      popupUrl,\n      method,\n      allowedInteractions\n    } = args;\n    if (allowedInteractions.length === 0) throw new Error(\"no allowed interactions\");\n\n    if (this.state.clientId) {\n      session._clientId = this.state.clientId;\n    }\n\n    if (this.privKey) {\n      const userData = {\n        clientId: session._clientId,\n        timestamp: Date.now().toString()\n      };\n      const sig = await sign(Buffer.from(this.privKey, \"hex\"), Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\"));\n      session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n      session._userSig = base64url.encode(sig);\n      session._userData = userData;\n    }\n\n    session._originData = this.state.originData;\n    session._whiteLabelData = this.state.whiteLabel;\n    session._loginConfig = this.state.loginConfig; // add in session data (allow overrides)\n\n    params = [_objectSpread(_objectSpread({}, session), params[0])]; // use JRPC where possible\n\n    if (this.state.support3PC && allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC)) {\n      return this._jrpcRequest({\n        method,\n        params\n      });\n    } // set origin\n\n\n    params[0]._origin = new URL((_params$0$redirectUrl = params[0].redirectUrl) !== null && _params$0$redirectUrl !== void 0 ? _params$0$redirectUrl : this.state.redirectUrl).origin; // preset params\n\n    if (this.state.support3PC) {\n      // set params first if 3PC supported\n      await this._setPIDData(pid, params); // eslint-disable-next-line require-atomic-updates\n\n      params = [{}];\n    }\n\n    if (!startUrl || !popupUrl) {\n      throw new Error(\"no url for redirect / popup flow\");\n    } // method and pid are always in URL hash params\n    // convert params from JSON to base64\n\n\n    if (this.state.uxMode === UX_MODE.REDIRECT) {\n      // if redirects preferred, check for redirect flows first, then check for popup flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return {};\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n    } else {\n      // if popups preferred, check for popup flows first, then check for redirect flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return null;\n      }\n    }\n\n    throw new Error(\"no matching allowed interactions\");\n  }\n\n  async _jrpcRequest(args) {\n    // await this.initialized;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw new Error(\"invalid request args\");\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw new Error(\"invalid request method\");\n    }\n\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error(\"invalid request params\");\n    }\n\n    if (params.length === 0) {\n      params.push({});\n    }\n\n    return new Promise((resolve, reject) => {\n      this.provider._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  async _check3PCSupport() {\n    return this._jrpcRequest({\n      method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n      params: [{\n        _originData: this.state.originData\n      }]\n    });\n  }\n\n  async _setPIDData(pid, data) {\n    await this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.SET_PID_DATA,\n      params: [{\n        pid,\n        data: data[0]\n      }]\n    });\n  }\n\n  async _getData() {\n    return this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.GET_DATA,\n      params: [{}]\n    });\n  }\n\n  _syncState(newState) {\n    if (newState.store) {\n      if (typeof newState.store !== \"object\") {\n        throw new Error(\"expected store to be an object\");\n      }\n\n      Object.keys(newState.store).forEach(key => {\n        // if privKey is available then user is not logged out, but in popup mode store info is not available.\n        // so we don't want to overwrite the local store if privKey is available\n        // and if latest iframe store data is not available\n        if (newState.privKey) {\n          if (newState.store[key]) {\n            this.state.store.set(key, newState.store[key]);\n          }\n        } else {\n          this.state.store.set(key, newState.store[key]);\n        }\n      });\n    }\n\n    const {\n      store\n    } = this.state;\n    this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {\n      store\n    });\n  }\n\n  async _modal(params) {\n    return new Promise((resolve, reject) => {\n      this.modal._prompt(this.state.clientId, this.state.whiteLabel, this.state.loginConfig, async chunk => {\n        if (chunk.cancel) {\n          reject(new Error(\"user canceled login\"));\n        } else {\n          try {\n            const selectedLoginResponse = await this._selectedLogin(merge(params, chunk));\n            resolve(selectedLoginResponse);\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n  }\n\n  async _cleanup() {\n    await this.modal.cleanup();\n    this.provider.cleanup();\n  }\n\n  async encrypt(message, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in encrypt\");\n      }\n    }\n\n    return encrypt(getPublic(Buffer.from(privKey, \"hex\")), message);\n  }\n\n  async decrypt(ciphertext, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in decrypt\");\n      }\n    }\n\n    return decrypt(Buffer.from(privKey, \"hex\"), ciphertext);\n  }\n\n  async getUserInfo() {\n    if (this.privKey) {\n      const storeData = this.state.store.getStore();\n      const userInfo = {\n        email: storeData.email || \"\",\n        name: storeData.name || \"\",\n        profileImage: storeData.profileImage || \"\",\n        aggregateVerifier: storeData.aggregateVerifier || \"\",\n        verifier: storeData.verifier || \"\",\n        verifierId: storeData.verifierId || \"\",\n        typeOfLogin: storeData.typeOfLogin || \"\",\n        dappShare: storeData.dappShare || \"\"\n      };\n      return userInfo;\n    }\n\n    throw new Error(\"user should be logged in to fetch userInfo\");\n  }\n\n  async getEncodedLoginUrl(loginParams) {\n    const {\n      redirectUrl\n    } = loginParams;\n    const {\n      clientId\n    } = this.state;\n\n    if (!this.state.originData[origin]) {\n      await this.updateOriginData();\n    }\n\n    const dataObject = _objectSpread({\n      _clientId: clientId,\n      _origin: new URL(redirectUrl).origin,\n      _originData: this.state.originData,\n      redirectUrl\n    }, loginParams);\n\n    const b64Params = jsonToBase64(dataObject);\n    const hashParams = {\n      b64Params,\n      _method: \"openlogin_login\"\n    };\n    return constructURL({\n      baseURL: \"\".concat(this.state.iframeUrl, \"/start\"),\n      hash: hashParams\n    });\n  }\n\n}\n\nexport { ALLOWED_INTERACTIONS, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_METHOD, OPENLOGIN_NETWORK, OpenLoginStore, Provider, UX_MODE, awaitReq, constructURL, OpenLogin as default, documentReady, getHashQueryParams, getPopupFeatures, htmlToElement, localStorageAvailable, log as loglevel, modalDOMElementID, preloadIframe, sessionStorageAvailable, storageAvailable, storeKey, whitelistUrl };\n//# sourceMappingURL=openlogin.esm.js.map\n"]},"metadata":{},"sourceType":"module"}