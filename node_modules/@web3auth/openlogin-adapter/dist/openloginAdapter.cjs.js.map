{"version":3,"file":"openloginAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/openlogin-adapter/external commonjs2 \"@toruslabs/openlogin-ed25519\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@web3auth/ethereum-provider\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@web3auth/solana-provider\"","webpack://@web3auth/openlogin-adapter/webpack/bootstrap","webpack://@web3auth/openlogin-adapter/webpack/runtime/compat get default export","webpack://@web3auth/openlogin-adapter/webpack/runtime/create fake namespace object","webpack://@web3auth/openlogin-adapter/webpack/runtime/define property getters","webpack://@web3auth/openlogin-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/openlogin-adapter/webpack/runtime/make namespace object","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@toruslabs/openlogin\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/openlogin-adapter/./src/config.ts","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"@web3auth/base-provider\"","webpack://@web3auth/openlogin-adapter/external commonjs2 \"lodash.merge\"","webpack://@web3auth/openlogin-adapter/./src/openloginAdapter.ts","webpack://@web3auth/openlogin-adapter/./src/index.ts"],"sourcesContent":["module.exports = require(\"@toruslabs/openlogin-ed25519\");","module.exports = require(\"@web3auth/ethereum-provider\");","module.exports = require(\"@web3auth/solana-provider\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","import { OPENLOGIN_NETWORK, UX_MODE } from \"@toruslabs/openlogin\";\nimport { ChainNamespaceType, getChainConfig } from \"@web3auth/base\";\n\nimport { OpenloginAdapterOptions } from \"./interface\";\n\nexport const getOpenloginDefaultOptions = (chainNamespace?: ChainNamespaceType, chainId?: number | string): OpenloginAdapterOptions => {\n  return {\n    adapterSettings: {\n      network: OPENLOGIN_NETWORK.MAINNET,\n      clientId: \"\",\n      uxMode: UX_MODE.POPUP,\n    },\n    chainConfig: chainNamespace ? getChainConfig(chainNamespace, chainId) : null,\n    loginSettings: {\n      relogin: true,\n    },\n  };\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-provider\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash.merge\");","import OpenLogin, { getHashQueryParams, LoginParams, OPENLOGIN_NETWORK, OpenLoginOptions, UX_MODE } from \"@toruslabs/openlogin\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport { CommonPrivateKeyProvider, IBaseProvider } from \"@web3auth/base-provider\";\nimport merge from \"lodash.merge\";\n\nimport { getOpenloginDefaultOptions } from \"./config\";\nimport type { LoginSettings, OpenloginAdapterOptions } from \"./interface\";\n\nexport type OpenloginLoginParams = LoginParams & {\n  // to maintain backward compatibility\n  login_hint?: string;\n};\n\ntype PrivateKeyProvider = IBaseProvider<string>;\n\nexport class OpenloginAdapter extends BaseAdapter<OpenloginLoginParams> {\n  readonly name: string = WALLET_ADAPTERS.OPENLOGIN;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.MULTICHAIN;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.IN_APP;\n\n  public openloginInstance: OpenLogin | null = null;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  private openloginOptions: OpenLoginOptions;\n\n  private loginSettings: LoginSettings = {};\n\n  private privKeyProvider: PrivateKeyProvider | null = null;\n\n  constructor(params: OpenloginAdapterOptions) {\n    super();\n    log.debug(\"const openlogin adapter\", params);\n    const defaultOptions = getOpenloginDefaultOptions(params.chainConfig?.chainNamespace, params.chainConfig?.chainId);\n    this.openloginOptions = {\n      clientId: \"\",\n      network: OPENLOGIN_NETWORK.MAINNET,\n      ...defaultOptions.adapterSettings,\n      ...(params.adapterSettings || {}),\n    };\n    this.loginSettings = { ...defaultOptions.loginSettings, ...params.loginSettings };\n    // if no chainNamespace is passed then chain config should be set before calling init\n    if (params.chainConfig?.chainNamespace) {\n      this.currentChainNamespace = params.chainConfig?.chainNamespace;\n      const defaultChainIdConfig = defaultOptions.chainConfig ? defaultOptions.chainConfig : {};\n      this.chainConfig = { ...defaultChainIdConfig, ...params?.chainConfig };\n      log.debug(\"const openlogin chainConfig\", this.chainConfig);\n      if (!this.chainConfig.rpcTarget) {\n        throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n      }\n    }\n  }\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.privKeyProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    if (!this.openloginOptions?.clientId) throw WalletInitializationError.invalidParams(\"clientId is required before openlogin's initialization\");\n    if (!this.chainConfig && this.currentChainNamespace !== CHAIN_NAMESPACES.OTHER)\n      throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    let isRedirectResult = false;\n\n    if (this.openloginOptions.uxMode === UX_MODE.REDIRECT) {\n      const redirectResult = getHashQueryParams();\n      if (Object.keys(redirectResult).length > 0 && redirectResult._pid) {\n        isRedirectResult = true;\n      }\n    }\n    this.openloginOptions = {\n      ...this.openloginOptions,\n      replaceUrlOnRedirect: isRedirectResult,\n    };\n    this.openloginInstance = new OpenLogin(this.openloginOptions);\n    log.debug(\"initializing openlogin adapter init\");\n\n    await this.openloginInstance.init();\n\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.OPENLOGIN);\n\n    try {\n      log.debug(\"initializing openlogin adapter\");\n      // connect only if it is redirect result or if connect (adapter is cached/already connected in same session) is true\n      if (this.openloginInstance.privKey && (options.autoConnect || isRedirectResult)) {\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached openlogin provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(params?: OpenloginLoginParams): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { ...params, adapter: WALLET_ADAPTERS.OPENLOGIN });\n    try {\n      await this.connectWithProvider(params);\n      return this.provider;\n    } catch (error: unknown) {\n      log.error(\"Failed to connect with openlogin provider\", error);\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      if ((error as Error)?.message.includes(\"user closed popup\")) {\n        throw WalletLoginError.popupClosed();\n      }\n      throw WalletLoginError.connectionError(\"Failed to login with openlogin\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    await this.openloginInstance.logout();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.openloginInstance = null;\n      this.privKeyProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    const userInfo = await this.openloginInstance.getUserInfo();\n    return userInfo;\n  }\n\n  // should be called only before initialization.\n  setAdapterSettings(adapterSettings: OpenLoginOptions): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    const defaultOptions = getOpenloginDefaultOptions();\n    this.openloginOptions = { ...defaultOptions.adapterSettings, ...(this.openloginOptions || {}), ...adapterSettings };\n  }\n\n  // should be called only before initialization.\n  setChainConfig(customChainConfig: CustomChainConfig): void {\n    super.setChainConfig(customChainConfig);\n    this.currentChainNamespace = customChainConfig.chainNamespace;\n  }\n\n  private async connectWithProvider(params?: OpenloginLoginParams): Promise<void> {\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n\n    if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      const { SolanaPrivateKeyProvider } = await import(\"@web3auth/solana-provider\");\n      this.privKeyProvider = new SolanaPrivateKeyProvider({ config: { chainConfig: this.chainConfig } });\n    } else if (this.currentChainNamespace === CHAIN_NAMESPACES.EIP155) {\n      const { EthereumPrivateKeyProvider } = await import(\"@web3auth/ethereum-provider\");\n      this.privKeyProvider = new EthereumPrivateKeyProvider({ config: { chainConfig: this.chainConfig } });\n    } else if (this.currentChainNamespace === CHAIN_NAMESPACES.OTHER) {\n      this.privKeyProvider = new CommonPrivateKeyProvider();\n    } else {\n      throw new Error(`Invalid chainNamespace: ${this.currentChainNamespace} found while connecting to wallet`);\n    }\n    // if not logged in then login\n    if (!this.openloginInstance.privKey && params) {\n      await this.openloginInstance.login(\n        merge(\n          this.loginSettings,\n          { loginProvider: params.loginProvider },\n          { extraLoginOptions: { ...(params.extraLoginOptions || {}), login_hint: params.login_hint || params.extraLoginOptions?.login_hint } }\n        )\n      );\n    }\n    let finalPrivKey = this.openloginInstance.privKey;\n    if (finalPrivKey) {\n      if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n        const { getED25519Key } = await import(\"@toruslabs/openlogin-ed25519\");\n        finalPrivKey = getED25519Key(finalPrivKey).sk.toString(\"hex\");\n      }\n      await this.privKeyProvider.setupProvider(finalPrivKey);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.OPENLOGIN, reconnected: !params } as CONNECTED_EVENT_DATA);\n    }\n  }\n}\n","export * from \"./config\";\nexport * from \"./interface\";\nexport * from \"./openloginAdapter\";\n"],"names":["OPENLOGIN_NETWORK","UX_MODE","getChainConfig","getOpenloginDefaultOptions","chainNamespace","chainId","adapterSettings","network","MAINNET","clientId","uxMode","POPUP","chainConfig","loginSettings","relogin","OpenLogin","getHashQueryParams","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","BaseAdapter","CHAIN_NAMESPACES","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","CommonPrivateKeyProvider","merge","OpenloginAdapter","constructor","params","OPENLOGIN","MULTICHAIN","IN_APP","NOT_READY","EIP155","debug","defaultOptions","openloginOptions","currentChainNamespace","defaultChainIdConfig","rpcTarget","invalidParams","chainConfigProxy","provider","privKeyProvider","_","Error","init","options","checkInitializationRequirements","OTHER","isRedirectResult","REDIRECT","redirectResult","Object","keys","length","_pid","replaceUrlOnRedirect","openloginInstance","status","READY","emit","privKey","autoConnect","connect","error","checkConnectionRequirements","CONNECTING","adapter","connectWithProvider","ERRORED","message","includes","popupClosed","connectionError","disconnect","cleanup","CONNECTED","notConnectedError","notReady","logout","DISCONNECTED","getUserInfo","userInfo","setAdapterSettings","setChainConfig","customChainConfig","SOLANA","SolanaPrivateKeyProvider","config","EthereumPrivateKeyProvider","login","loginProvider","extraLoginOptions","login_hint","finalPrivKey","getED25519Key","sk","toString","setupProvider","reconnected"],"sourceRoot":""}