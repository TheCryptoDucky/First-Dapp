{"version":3,"file":"torusEvmAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/torus-evm-adapter/webpack/bootstrap","webpack://@web3auth/torus-evm-adapter/webpack/runtime/compat get default export","webpack://@web3auth/torus-evm-adapter/webpack/runtime/define property getters","webpack://@web3auth/torus-evm-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/torus-evm-adapter/webpack/runtime/make namespace object","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@toruslabs/torus-embed\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/torus-evm-adapter/./src/torusWalletAdapter.ts","webpack://@web3auth/torus-evm-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/torus-embed\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","import Torus, { LoginParams, NetworkInterface, TorusCtorArgs, TorusParams } from \"@toruslabs/torus-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\n\nexport interface TorusWalletOptions {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: LoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n  chainConfig?: CustomChainConfig;\n}\n\nexport class TorusWalletAdapter extends BaseAdapter<never> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_EVM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: LoginParams = {};\n\n  private rehydrated = false;\n\n  constructor(params: TorusWalletOptions = {}) {\n    super();\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n    this.chainConfig = params.chainConfig || null;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.torusInstance) {\n      return this.torusInstance.provider as unknown as SafeEventEmitterProvider;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    // set chainConfig for mainnet by default if not set\n    let network: NetworkInterface;\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n      const { blockExplorer, displayName } = this.chainConfig as CustomChainConfig;\n      network = { chainId: 1, host: \"mainnet\", blockExplorer, networkName: displayName };\n    } else {\n      const { chainId, blockExplorer, displayName, rpcTarget } = this.chainConfig as CustomChainConfig;\n      network = { chainId: parseInt(chainId as string, 16), host: rpcTarget, blockExplorer, networkName: displayName };\n    }\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus evm adapter init\");\n    await this.torusInstance.init({\n      showTorusButton: false,\n      ...this.initParams,\n      network,\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_EVM);\n\n    try {\n      log.debug(\"initializing torus evm adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with torus evm provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_EVM });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      const { chainId } = this.torusInstance.provider;\n      if (chainId && parseInt(chainId) !== parseInt((this.chainConfig as CustomChainConfig).chainId, 16)) {\n        const { chainId: _chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n        const network = {\n          chainId: _chainId,\n          host: rpcTarget,\n          blockExplorerUrl: blockExplorer,\n          networkName: displayName,\n          tickerName,\n          ticker,\n          logo: \"\",\n        };\n        // in some cases when user manually switches chain and relogin then adapter will not connect to initially passed\n        // chainConfig but will connect to the one that user switched to.\n        // So here trying to switch network to the one that was initially passed in chainConfig.\n        await this.torusInstance.setProvider({\n          ...network,\n        });\n        const updatedChainID = await this.torusInstance.ethereum.request<string>({ method: \"eth_chainId\" });\n        if (updatedChainID && parseInt(updatedChainID) !== parseInt((this.chainConfig as CustomChainConfig).chainId, 16)) {\n          throw WalletInitializationError.fromCode(\n            5000,\n            `Not connected to correct chainId. Expected: ${(this.chainConfig as CustomChainConfig).chainId}, Current: ${updatedChainID}`\n          );\n        }\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_EVM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_STATUS.ERRORED, error);\n      throw error instanceof Web3AuthError ? error : WalletLoginError.connectionError(\"Failed to login with torus wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n    this.torusInstance.hideTorusButton();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo(\"\");\n    return userInfo;\n  }\n\n  setAdapterSettings(_: unknown): void {}\n}\n","export * from \"./torusWalletAdapter\";\n"],"names":["Torus","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","BaseAdapter","CHAIN_NAMESPACES","getChainConfig","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","TorusWalletAdapter","constructor","params","TORUS_EVM","EIP155","EXTERNAL","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","chainConfig","provider","status","CONNECTED","torusInstance","_","Error","init","options","checkInitializationRequirements","network","blockExplorer","displayName","chainId","host","networkName","rpcTarget","parseInt","debug","showTorusButton","READY","emit","autoConnect","rehydrated","connect","error","ERRORED","checkConnectionRequirements","notReady","CONNECTING","adapter","login","_chainId","ticker","tickerName","blockExplorerUrl","logo","setProvider","updatedChainID","ethereum","request","method","fromCode","reconnected","connectionError","disconnect","cleanup","notConnectedError","logout","hideTorusButton","DISCONNECTED","getUserInfo","userInfo","setAdapterSettings"],"sourceRoot":""}